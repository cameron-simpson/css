#!/bin/sh
#
# Convert input to PostScript.
# Expects PostScript's first line to start with
#	%!PS-Adobe
# PDF to start with
#	%PDF
# and plain text to start with something else.
#	- Cameron Simpson <cs@zip.com.au> 12dec96
#

me=$0
cmd=`basename "$0"`
usage="Usage: $cmd [-f] [-i itype] [-T title] [files...]"

eval "txtconv=\$conv$dfltconv"

aspect=-R
txtconv='a2ps -1 -o- -B -T 8 -i --borders=no -b $aspect -f 10'
pdfconv=pdf2ps
psconv=cat

force=
fflag=
title=
badopts=
itype=
while :
do  case $1 in
	-f)	force=1 fflag=$1 ;;
	-T)	title=$2; shift ;;
	-L)	aspect=-r ;;
	-P)	aspect=-R ;;
	-i)	itype=$2; shift ;;
	--)	shift; break ;;
	-*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
	*)	break ;;
    esac
    shift
done

txtconv="$txtconv $aspect"
[ -n "$title" ] && txtxconv="$txtconv --medium=A4 \"--footer=\$title\""

case "$itype" in
    ps|postscript)	conv=$psconv ;;
    pdf)		conv=$pdfconv ;;
    text)		conv=$txtconv ;;
    '')			conv= ;;
    *)			echo "$cmd: unknown input type \"$itype\"" >&2
			badopts=1
			;;
esac

[ $badopts ] && { echo "$usage" >&2; exit 2; }

## echo "title=[$title], conv=[$conv]" >&2
## set | egrep -i '(asp|conv)' >&2

cat ${1+"$@"} \
    | if [ -n "$conv" ]
      then
	eval "$conv"
      else
	title=$title \
	pdfconv=$pdfconv txtconv=$txtconv psconv=cat \
	    perl -e '$start="";
		     while (sysread(STDIN,$_,1) == 1
		         && !/^[\n\r]/)
				{ $start.=$_;
				}

		     if ($start =~ /^%!/)	# was %!PS-Adobe once
			{ $conv=$ENV{"psconv"};
			}
		     elsif ($start =~ /^%PDF/)
			{ $conv=$ENV{"pdfconv"};
			}
		     else
		     { $conv=$ENV{"txtconv"};
		     }

		     open(STDOUT,"| $conv\0");
		     print $start, $_;
		     while (defined($_=<STDIN>))
			{ print;
			}
		     close(STDOUT);
		    '
      fi
