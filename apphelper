#!/bin/sh
#
# Generic wrapper for web data, offering save or view.
#	- Cameron Simpson <cs@zip.com.au> 18jun1998
#

## tty=/dev/ttyp2
## exec 2>"$tty" >&2 0</dev/tty
## set -vx
## set x +t "$@"; shift
## echo "[$*]"

# short circuit the make-a-tty-window stuff
case $1 in
    -t)	shift; set -x; exec term +a +ip -small -e sane "$0" +t ${1+"$@"} ;;
    +t) shift ;;
    *)  [ -t 0 -a -t 1 ] || exec term +a +ip -small -e sane "$0" +t ${1+"$@"} ;;
esac

savedir=${SAVEDIR-$HOME/dl}
savedir=$HOME/dl
pager=${PAGER:-less}
doview=

cmd=`basename "$0"`
usage="Usage: $cmd [-t] file [-y] [-d savedir] viewer [viewer-args...]
	-t		Run apphelper in a new terminal window.
	+t		Do not run apphelper in a new terminal window.
	-y		Run viewer immediately.
	-d savedir	Save directory (from \$SAVEDIR: $savedir).
	-p pager	Pager (default viewer, from \$PAGER: $pager)."

badopts=
if [ $# = 0 ]
then  echo "$cmd: missing file" >&2; badopts=1
else
  file=$1; shift
  if [ ! -s "$file" ]
  then	echo "$cmd: bad file?" >&2
	ls -ld "$file" >&2
	badopts=1
  fi

  while :
  do  case $1 in
	  -d)	savedir=$2; shift ;;
	  -p)	pager=$2; shift ;;
	  -y)	doview=1 ;;
	  --)	shift; break ;;
	  -?*)	echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
	  *)	break ;;
      esac
      shift
  done
fi

[ $# = 0 ] && { set x $pager; shift; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

fbase=`basename "$file"`

export file fbase

file "$file"; echo

if [ $doview ]
then
    "$@" "$file"
else
    necho "View [$*]? "
    read viewit || exit 0
    case "$viewit" in
	''|y|yes)	"$@" "$file" ;;
	n|no)	;;
	*)		$viewit "$@" ;;
    esac
fi

necho "Save [$savedir/$fbase]? "
read saveas || exit 0
case "$saveas" in
    ''|n|no)	saveas= ;;
    y|yes)	saveas=$savedir/$fbase ;;
    /*)		;;
    \~*)	saveas=`untilde "$saveas"` ;;
    *)		saveas=$savedir/$saveas ;;
esac

[ -n "$saveas" ] || exit 0

case $saveas in
    */|*-)	saveas=$saveas$fbase ;;
esac

[ -d "$saveas/." ] && saveas=$saveas/$fbase

parent=`dirname "$saveas"`
[ -d "$parent/." ] || { ask "mkdir $parent" && mkdir -p "$parent"; } || exit 0

[ -s "$saveas" ] && cmp -s "$file" "$saveas" && exit 0

cp -i "$file" "$saveas"
