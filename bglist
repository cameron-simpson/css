#!/bin/sh
#
# Offer a list of background images.
# Mostly used by Eterm (via et) to pick a background.
#	- Cameron Simpson <cs@zip.com.au> 10may1999
#
# Use an INDEX file instead of find.	- cameron 15aug2000
#

random=
n=0
forcefind=
wide=
ignfile=.bgignore
ignlist=
gotptns=

cmd=$0
usage="Usage: $cmd [-f] [-r] [-i igndirs] [-I ignfile] [-n count] [ptns... [-- directories...]]
	-f	Use find(1) even if there is an INDEX file.
	-i igndirs A space separated list of directories to ignore.
	-I ignfile A file containing directories to ignore, one per line.
		Default: $ignfile
	-r	Randomise output.
	-n count Choose the first count items.
	-w	Choose wide images (eg for wallpaper)."

badopts=
while :
do  case $1 in
      -f)	forcefind=1 ;;
      -i)	ignlist="$ignlist $2"; shift ;;
      -I)	ignfile=$2; shift ;;
      -r)	random=1 ;;
      -n)	n=$2; shift ;;
      -w)	wide=1 ;;
      --)	gotptns=1; shift; break ;;
      -?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
      *)	break ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

ptns=

if [ -z "$gotptns" ]
then
    while [ $# -gt 0 ]
    do  case "$1" in
	  --)	gotptns=1; shift; break ;;
	  *)	ptns="$ptns '$1'"; shift ;;
	esac
    done
fi

# no dirs?
[ $# = 0 ] && { set x `bgdirs`; shift; }

[ -s "$ignfile" ] && ignlist="$ignlist "`cat "$ignfile"`
ignargs=
for igndir in $ignlist
do  ignargs="$ignargs -o -name $igndir"
done

filter=cat
[ -n "$ptns" ] && filter="grepall $ptns | $filter"
[ $random ] && filter="$filter | shuffle"
[ "x$n" = x0 ] || filter="$filter | sed '${n}q'"
[ $wide ] && filter="$filter | grepwideimg"

for dir
do  if [ -z "$forcefind" -a -s "$dir/INDEX" ]
    then
	ndx=$dir/INDEX
	reject=$ndx-notbg
	if [ -s "$reject" ]
	then
	    comm -23 "$ndx" "$reject"
	else
	    cat "$ndx"
	fi | sed "s:^[^/]:$dir/&:"
    else
	find "$dir" \( -type d ! -name . \
			\( -name '.*' \
			$ignargs \
			\) \
			-prune \) \
		 -o \( -type f -size +0 \
				\( -name \*.png -o -name \*.jpg \) \
		       -print \)
    fi
done \
| ( : set -x; eval "$filter" )
