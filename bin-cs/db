#!/bin/sh
#

set -ue

cmd=$( basename "$0" )
usage="Usage: $cmd subcommand [args...]
  ls [dbname]
  revert snapshot-name
    Replace the current db contents from the named snapshot.
  snapshot comment-words...
    Snapshot the current db as dbname--timestamp--comment-words.

  Environment:
    \$PG_DATABASE   The current PostgreSQL database."

trace=
[ -t 2 ] && trace=set-x
mode=postgres
dbname=${PG_DATABASE:-''}

badopts=

# TODO: -d dbname

if [ $# = 0 ]
then
  echo "$cmd: missing subcommand" >&2
  badopts=1
else
  subcmd=$1; shift
  cmdpfx="$cmd: $subcmd"
  case "$subcmd" in
    ls)
      case $# in
        0)  ls_dbname= ;;
        1)  ls_dbname=$1; shift ;;
        *)  echo "$cmdpfx: expected optional db name, got: $*" >&2
            badopts=1
            ;;
      esac
      ;;
    revert)
      if [ $# = 0 ]
      then
        revert_snapshot_name=
      else
        revert_snapshot_name=$1; shift
        [ $# = 0 ] || {
          echo "$cmdpfx: extra arguments: $*" >&2
          badopts=1
        }
      fi
      [ -n "$dbname" ] || {
        echo "$cmdpfx: no database name specified eg from \$PG_DATABASE" >&2
        badopts=1
      }
      ;;
    snapshot)
      snapshot_comment_words=$*
      [ -n "$dbname" ] || {
        echo "$cmdpfx: no database name specified eg from \$PG_DATABASE" >&2
        badopts=1
      }
      ;;
    *)echo "$cmdpfx: unrecognised subcommand" >&2
      badopts=1
      ;;
  esac
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

case "$subcmd" in
  ls) if [ -z "$ls_dbname" ]
      then  $trace psql -c '\l+'
      else  $trace psql -c '\d' -d "$ls_dbname"
      fi
      ;;
  revert)
    if [ -z "$revert_snapshot_name" ]
    then
      "$0" ls | sed -n "s|^ \\($dbname--[^ ]*\\).*|\\1|p"
    else
      psql -- "$revert_snapshot_name" </dev/null || {
        echo "$cmdpfx: unknown database name: $revert_snapshot_name" >&2
        exit 1
      }
      ( echo "DROP DATABASE \"$dbname\";"
        echo "CREATE DATABASE \"$dbname\" TEMPLATE \"$revert_snapshot_name\";"
      ) | $trace psql -e -- "$revert_snapshot_name"
      exit $?
    fi
    ;;
  snapshot)
    if [ -z "$snapshot_comment_words" ]
    then
      "$0" ls | sed -n "s|^ \\($dbname--[^ ]*\\).*|\\1|p"
    else
      timestamp=$( date +'%Y-%m-%d--%H-%m-%S' )
      suffix=$( printf '%s\n' "$snapshot_comment_words" | tr ' ' - )
      snapshot_dbname=$dbname--$timestamp--$suffix
      echo "new snapshot: $snapshot_dbname"
      echo "CREATE DATABASE \"$snapshot_dbname\" TEMPLATE \"$dbname\"" \
      | $trace psql -e -d "$dbname"
      exit $?
    fi
    ;;
  *)echo "$cmdpfx: unimplemented" >&2
    exit 1
    ;;
esac
