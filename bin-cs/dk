#!/bin/sh
#
# dk - docker and docker-compose helper
#

set -ue

: ${DK_COMPOSE_YML:='docker-compose.yml'}
: ${DK_PRIMARY_SERVICE=''}
: ${DK_ENVVARS:=''}
: ${DK_EXEC_PREFIX:=''}

docker_compose_opts=

cmd=$0
usage="Usage: $cmd [-f docker-compose.yml] [-n name] op [args...]
  -f docker-compose.yml
    Specify docker-compose YAML file.
    Default from \$DK_COMPOSE_YML: $DK_COMPOSE_YML
  -n name
    Specify primary service name.
    This is also the target service for \"exec\"."

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -f) DK_COMPOSE_YML=$2; shift ;;
    -n) DK_PRIMARY_SERVICE=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break
        ;;
  esac
  shift
done

[ -s "$DK_COMPOSE_YML" ] || if yml=$( findup "$DK_COMPOSE_YML" )
then
  DK_COMPOSE_YML=$yml
else
  echo "$cmd: cannot find \$DK_COMPOSE_YML=$DK_COMPOSE_YML" >&2
  badopts=1
fi

if [ $# = 0 ]
then
  echo "$cmd: missing op" >&2
  op=help
else
  op=$1
  shift
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

ymlbasedir=$( dirname "$DK_COMPOSE_YML" )
base=$( basename "$ymlbasedir" )
primary_container=${base}_${DK_PRIMARY_SERVICE}_1

case "$op" in
  exec)
      [ $# -gt 0 ] || set bash
      if [ -n "$DK_ENVVARS" ]
      then
        for envvar in $DK_ENVVARS
        do
          eval "envval=\$$envvar"
          set -- "$envvar=$envval" "$@"
        done
        set -- env "$@"
      fi
      set -x
      exec docker exec -it "$primary_container" $DK_EXEC_PREFIX "$@"
      ;;
  up) [ -z "$DK_PRIMARY_SERVICE" ] || set -- --exit-code-from "$DK_PRIMARY_SERVICE" ${1+"$@"} ;;
esac


set -x
exec docker-compose $docker_compose_opts -f "$DK_COMPOSE_YML" "$op" ${1+"$@"}
