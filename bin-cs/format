#!/bin/sh
#
# Reformat the named files, based off lint.
# - Cameron Simpson <cs@cskk.id.au> 16mar2019
#

set -ue

trace=
[ -t 2 ] && trace=set-x

pymode=3

cmd=$0
usage="Usage: $cmd [-2] [-3] filenames...
  -2    Use Python 2 for Python formatting.
  -3    Use Python 3 for Python formatting.
  -n    No action. Recite format commands.
  -q    Quiet. Do not display format commands.
  -x    trace execution. Dsiplay format commands to stderr."

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -2) pymode=2 ;;
    -3) pymode=3 ;;
    -n) trace=echo ;;
    -q) trace= ;;
    -x) trace=set-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ $# -gt 0 ] || {
  echo "$cmd: missing filenames" >&2
  badopts=1
}

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

for srcfile
do
  type=
  magic=
  case "$srcfile" in
    [a-z]*:*)
      type=$( expr "x$srcfile" : 'x\([a-z][^:]*\):.*' )
      tail=$( expr "x$srcfile" : 'x[a-z][^:]*:\(.*\)' )
      [ -f "$tail" ] && srcfile=$tail
      ;;
  esac
  if [ -z "$type" ]
  then
    case "$srcfile" in
      *.json | *.go | *.php | *.py )
        type=$( expr "x$srcfile" : 'x.*\.\([a-z][a-z0-9]*\)' )
        ;;
      *.pl | *.pm )
        type=pl
        ;;
      *.py)
        type=py
        ;;
    esac
  fi
  if [ -z "$type" ] && magic=$( file "$srcfile" )
  then
    case "$magic" in
      *'perl script'*)          type=pl ;;
      *'python script'* | *'python3 script'* )
                                type=py ;;
      *'POSIX shell script'*)   type=sh ;;
    esac
  fi
  [ -n "$type" ] || {
    echo "$cmd: $srcfile: skipping unknown type (magic=$magic)" >&2
    continue
  }

  if [ "x$type" = xpy ]
  then  type=${type}${pymode}
  fi
  case "$type" in
    py2)$trace py2 -m yapf -i "$srcfile" ;;
    py3)$trace py3 -m yapf -i "$srcfile" ;;
    *)echo "$cmd: $srcfile: no formatter (type=$type)" >&2 ;;
  esac || xit=1
done

exit $xit
