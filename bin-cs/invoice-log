#!/bin/sh
#
# Pull out log lines for a date range.
# - Cameron Simpson <cs@cskk.id.au> 26jul2020
#

set -ue

cmd=$0
usage="Usage: $cmd org startdate enddate [git-dirs...]"

badopts=

if [ $# -lt 3 ]
then
  echo "$cmd: missing org startdate enddate" >&2
  badopts=1
else
  org=$1 start=$2 end=$3
  shift; shift; shift
  gitdirs=$*
  for d in $gitdirs
  do
    [ -d "$d/.git" ] || {
      echo "$cmd: gitdir $d: no .git subdir" >&2
      badopts=1
    }
  done
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }


rcfile=$HOME/rc/invoice/$org.sh
[ -s "$rcfile" ] || { echo "$cmd: missing rcfile: $rcfile" >&2; exit 1; }
. "$rcfile"

set -x
(
  set -ue
  egrep -e "$dlog_re" "$HOME/var/log/dlog-quick"
  [ -s "$HOME/var/log/shell-$org" ] && sed 's/^:  *//' "$HOME/var/log/shell-$org"
  for d in $gitdirs
  do
    ( cd "$d"
      git log '--format=tformat:%ci %ae %s %d' "--since=$start" "--until=$end"
    )
  done \
  | awk -v "email=$EMAIL" '$4 == email { $3=""; $4=""; print}'
) \
| sed 's/   */ /g' \
| awk -v "email=$EMAIL" -v "start=$start" -v "end=$end" '$1 >= start && $1 <= end {print}' \
| sort -u \
| awk '$1 != last_date {print("")}
       {print; last_date=$1}'
