#!/bin/sh
#
# Pull out log lines for a date range.
# - Cameron Simpson <cs@cskk.id.au> 26jul2020
#

set -ue

cmd=$0
usage="Usage:
  $cmd org startdate enddate [repo-dirs...]
  $cmd org@hosts YYYY-MM [repo-dirs]"

badopts=

if [ $# -gt 0 ]
then
  case $1 in
    *@*)
      org=$(   expr "x$1" : 'x\([^@]*\)@.*' )
      hosts=$( expr "x$1" : 'x[^@]*@\(.*\)' | tr , ' ' )
      shift
      case $1 in
        20[0-9][0-9]-[01][0-9])
          yyyy=$( expr "x$1" : 'x\(....\)-..' )
          mm=$(   expr "x$1" : 'x....-0*\(1*[0-9]\)' )
          shift
          yyyy2=$yyyy
          mm2=$( expr "$mm" + 1 )
          [ $mm2 -le 12 ] || { yyyy2=$( expr "$yyyy" + 1 ) mm2=$( expr "$mm2" - 12 ); }
          logs=
          for host in $hosts
          do  log=$host-$yyyy-$mm-ALL.log
              set-x envssh $host invoice-log $org $yyyy-$mm $yyyy2-$mm2 $* >"$log"
              logs="$logs $log"
          done
          set-x sort -u -o MERGED-$yyyy-$mm.log $logs
          exit 0
          ;;
      esac
      exit 1
      ;;
  esac
fi

if [ $# -lt 3 ]
then
  echo "$cmd: missing org startdate enddate" >&2
  badopts=1
else
  org=$1 start=$2 end=$3
  shift; shift; shift
  repodirs=$*
  for d in $repodirs
  do
    [ -d "$d/.git" ] || [ -d "$d/.hg" ] || {
      echo "$cmd: repodir $d: no .git or .hg subdir, SKIPPING" >&2
    }
  done
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

rcfile=$HOME/rc/invoice/$org.sh
if [ -s "$rcfile" ]
then  . "$rcfile"
else  echo "$cmd: missing rcfile: $rcfile" >&2
fi

set -x
(
  set -ue
  egrep -e "$dlog_re" "$HOME/var/log/dlog-quick"
  [ -s "$HOME/var/log/shell-$org" ] && sed 's/^:  *//' "$HOME/var/log/shell-$org"
  for d in $repodirs*
  do
    [ -d "$d/" ] || continue
    dbase=$( basename "$d" )
    ( cd "$d"
      if [ -d ".git/" ]
      then  git log '--format=tformat:%ci %ae %s %d' "--since=$start" "--until=$end"
      elif [ -d ".hg/" ]
      then  hg log --template '{date|isodate} {user|email} {desc|firstline} [{bookmarks} {branch}]\n' -d "$start to $end"
      else
        echo "$d: NO VCS" >&2
      fi
    ) | sed "s/^[^ ][^ ]* [^ ][^ ]*/& $dbase/" || :
  done \
  | awk -v "email=$EMAIL" '$4 == email { $3=""; $4=""; print}'
) \
| sed 's/   */ /g' \
| awk -v "email=$EMAIL" -v "start=$start" -v "end=$end" '$1 >= start && $1 <= end {print}' \
| sort -u \
| awk '$1 != last_date {print("")}
       {print; last_date=$1}'
