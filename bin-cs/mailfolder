#!/bin/sh
#
# Read a mail folder.
# Sync with remote copies first.
# Run self remotely if no local folder.
#       - Cameron Simpson <cs@cskk.id.au>
#

set -ue

: ${MAILHOMEHOST:=}
: ${MAILDIR:=$HOME/mail}
: ${MAIL_EXPIRE_FORMAT:='%Y'}           # versus, say, %Y-%m
: ${MAIL_IMAPSYNC:=}
: ${MAILBOX:=INBOX}
: ${SENDMESG_FCC:=spool-out}
export SENDMESG_FCC

cmd=`basename "$0"`
usage="Usage: $cmd [-f] [-I imapsync] [-q] [foldername]
  -C dir    Change directory to dir. Default from \$HOME: $HOME
            Implies -l.
  -I imapsync
            Specify remote IMAP for use with imap-sync(1cs).
            Default from \$MAIL_IMAPSYNC: $MAIL_IMAPSYNC
            Supply empty string to prevent sync.
  -l        Run locally. Default is to run remote if \$MAILHOMEHOST is not
            empty. Curently MAILHOMEHOST=$MAILHOMEHOST
  -q        Quick imap-sync.
  -r rhost  Run remotely on rhost, overriding \$MAILHOMEHOST.
  -T        Start a tmux session.
  foldername Default from \$MAILBOX: $MAILBOX"

badopts=

cdto=
trace=set-x
runlocal=1
[ -z "$MAILHOMEHOST" ] || runlocal=
imapsyncopts=
foldername=$MAILBOX
use_tmux=

while [ $# -gt 0 ]
do
  case "$1" in
    -C) cdto=$2; shift; runlocal=1 ;;
    -I) MAIL_IMAPSYNC=$2; export MAIL_IMAPSYNC; shift ;;
    -l) runlocal=1 ;;
    -q) imapsyncopts="$imapsyncopts $1" ;;
    -r) runlocal= MAILHOMEHOST=$2 ;;
    -T) use_tmux=1 ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)  break ;;
  esac
  shift
done

if [ $# -gt 0 ]
then
  foldername=$1
  shift
  [ $# = 0 ] || { echo "$cmd: extra arguments after foldername: $*" >&2
                  badopts=1
                }
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ -z "$runlocal" ]
then
  exec $trace sshx -E -t "$MAILHOMEHOST" \
        mailfolder \
          -l -C "$cdto" \
          -- "$foldername"
fi

case "$foldername" in
  /*) maildir=$foldername ;;
  *)  maildir=$MAILDIR/$foldername ;;
esac
_foldername=`printf '%s\n' "$foldername" | tr / _`
bfoldername=`basename "$foldername"`
old=OLD/`date "+$MAIL_EXPIRE_FORMAT"`
omaildir=$MAILDIR/$old/$bfoldername

# update where to take copies - presumes sendmail=sendmesg-fcc in muttrc
SENDMESG_FCC="$maildir $SENDMESG_FCC"

if [ $runlocal ] && not ismbox "$maildir" && not ismaildir "$maildir"
then
  echo "$cmd: not a maildir: $maildir" >&2
  exit 1
fi

[ -n "$cdto" ] || cdto=$HOME
cd "$cdto"

if ismbox "$omaildir"
then
  :
else
  ismaildir "$omaildir" || >>"$omaildir"        ## $trace maildir "$omaildir"
fi

[ -n "$MAIL_IMAPSYNC" ] \
&& $trace imap-sync $imapsyncopts "$MAILDIR" "$MAIL_IMAPSYNC" "$foldername" "$old/$foldername" out spool spool-in spool-out

set -- mutt -f "$maildir" \
        -e "set header_cache='$HOME/var/mutt/header-cache+$_foldername'; fcc-hook . $maildir; save-hook . $omaildir"

if [ $use_tmux ]
then
  session=MUTT_${foldername}_$(date '+%Y-%m-%d-%H%M%S')
  set -- tm "$session" "$@"
fi
$trace "$@"
