#!/bin/sh
#
# Construct an unbound.conf(5) file then dispatch unbound(8).
#       - Cameron Simpson <cs@zip.com.au> 26jul2012
#

set -ue

cmd=`basename "$0"`
usage="Usage: $cmd [upstream-forwards...]"

: ${VARRUN:=$HOME/var/run}
: ${LOGDIR:=$HOME/var/log}
: ${UNBOUND_DNS_UPSTREAM:=}     # server set, eg: opennic

me=`id -un`
trace=set-x
pidfile=$VARRUN/unbound.pid
wkdir=$HOME/var/unbound
cf=$wkdir/unbound.conf
log=$LOGDIR/unbound.log
localzones="l local"
cnames=$HOME/rc/dns/cnames
host_conf=$HOME/rc/dns/unbound.conf-fleet

# default upstream DNS servers
[ $# -gt 0 ] || set -- $UNBOUND_DNS_UPSTREAM

for d in "$VARRUN" "$wkdir" "$LOGDIR"
do  [ -d "$d/." ] || $trace mkdir "$d"
done

tmppfx=$TMPDIR/$cmd.$$
tmpcf=$tmppfx.conf
trap 'rm -f "$tmppfx.*"' 0 1 3 15

exec 3>&1 1>"$tmpcf" </dev/null

cat <<X
server:
  directory: "$wkdir"
  username: "$me"
  logfile: "$log"
  pidfile: "$pidfile"
  log-queries: yes
  verbosity: 3      # uncomment and increase to get more logging.
  ## # default is "3 2 1 0 0"
  ## target−fetch−policy: "−1 −1 −1 −1 −1"
X

cat "$host_conf"

for zone in $localzones
do
  echo "local-zone: \"$zone.\" static"
  exec </etc/hosts
  while read ip hosts
  do
    case "$ip" in
      127.0.0.*)
        for host in $hosts
        do
          case "$host" in
            *.l)
              hostbase=`basename "$host" .l`
              echo "  local-data: \"$hostbase.$zone. 10 IN A $ip\""
              ;;
            *.local)
              hostbase=`basename "$host" .local`
              echo "  local-data: \"$hostbase.$zone. 10 IN A $ip\""
              ;;
          esac
        done
        ;;
    esac
  done
done

echo 'local-zone: "127.in−addr.arpa." static'
exec </etc/hosts
while read ip hosts
do
  case "$ip" in
    127.0.0.*)
      for host in $hosts
      do
        case "$host" in
          *.l)
            hostbase=`basename "$host" .l`
            in_addr=
            for octet in `echo $ip | tr . '\012' | reverse`
            do  in_addr=$in_addr$octet.
            done
            for zone in $localzones
            do
              echo "  local-data: \"${in_addr}in-addr.arpa. 10 IN PTR $hostbase.$zone.\""
            done
            ;;
          *.local)
            hostbase=`basename "$host" .local`
            in_addr=
            for octet in `echo $ip | tr . '\012' | reverse`
            do  in_addr=$in_addr$octet.
            done
            for zone in $localzones
            do
              echo "  local-data: \"${in_addr}in-addr.arpa. 10 IN PTR $hostbase.$zone.\""
            done
            ;;
        esac
      done
      ;;
  esac
done

if [ -s "$cnames" ]
then
  echo 'local-zone: "cname." static'
  while read cname name
  do
    ipaddrs=`host "$name" | sed -n 's/[^ ][^ ]* has address \([0-9][0-9.]*\)$/\1/p'`
    for ipaddr in $ipaddrs
    do
      echo "  local-data: \"${cname}.cname. 10 IN A ${ipaddr}\""
    done
  done <"$cnames"
fi

if [ $# -gt 0 ]
then
  cat <<X
  forward-zone:
    name: "."
X
  for dnsup
  do
    case "$dnsup" in
      [a-z]*)
        resolv=$HOME/rc/dns/resolv-$dnsup.conf
        $trace sed -n 's/ *#.*//; s/^nameserver  *//p' "$resolv" | shuffle
        ;;
      *)$trace echo "$dnsup"
        ;;
    esac
  done \
  | while read dnsip
    do  echo "    forward-addr: $dnsip"
    done
fi

exec >&3 3>&-

$trace rewriteif -d "$cf" <"$tmpcf"
$trace rm -f "$tmpcf"

set -x
cd "$wkdir"
$trace unbound-checkconf "$cf"
[ ! -f "$pidfile" ] || $trace killpidfile "$pidfile"
exec $trace sudo $trace unbound -c "$cf"
