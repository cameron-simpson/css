#!/bin/sh -u
#
# Dispatch an adzapper squid.
#	- Cameron Simpson <cs@zip.com.au> 01jul2004
#

set -ue

: ${VARRUN:=$HOME/var/run}
: ${VARLOG:=$HOME/var/log}
: ${TMPDIR:=/tmp}
: ${ZAP_CACHESIZE:=1024}
: ${ZAP_LOGFILE:=$VARLOG/adzapper/redirect.log}
export ZAP_LOGFILE

dflt_listen=localhost:3128

cmd=`basename "$0"`
oargs=$*
usage="Usage: $cmd [-L listen] {-H haproxy-peer | [upstream-peers...]} [tag=value...] [squid-options...]
  -L listen             http_port specification; default: $dflt_listen
  -H haproxy-peer       Single upstream haproxy to direct traffic.
  upstream-peers        Upstream peer specifications of the form \"host:port\".
  tag=value             Tags to be written to the squid.conf as \"tag value\".
  squid-options         Passed to squid on invocation."

trace=set-x
case "`uname -s`" in
  Darwin)  dfltrc=/opt/local/etc/squid/squid.conf ;;
  *)       dfltrc=/etc/squid/squid.conf ;;
esac
[ -s "$dfltrc" ] || { echo "$cmd: no default squid.conf? ($dfltrc)" >&2; exit 1; }

tmppfx=$TMPDIR/$cmd.$$
directives=$tmppfx.tags

tidy(){
  rm -f -- "$tmppfx".*
}
trap tidy 0 1 3 15

listen=
zapdir=$LOGDIR/adzapper
piddir=$VARRUN
pidf=$piddir/squid.pid
rc=$HOME/var/adzapper/squid.conf
cachedir=$HOME/var/adzapper/cache
peerage=$HOME/.peerage
use_haproxy=
haproxy_listen=

badopts=

# reuse previous arguments if none supplied, otherwise update default arguments
if [ $# = 0 ]
then  set -- $(lastvalue adzapper)
      echo "$cmd: using lastvalue adzapper: $*" >&2
else  lastvalue adzapper "$*"
fi

if [ -s "$pidf" ]
then
  $trace killpidfile -w "$pidf"
  rm -f "$pidf"
else
  echo "$cmd: warning: no pid file: $pidf" >&2
fi

## old proxy-mode standalone redirector
##exec alog squid_redirect squid_redirect -P "8080:$SQUID"

exec 3>&1 1>"$directives"

# preserve old ACLs
grep '^acl ' <"$dfltrc"
echo 'acl QUERY urlpath_regex cgi-bin \?'
echo 'acl GMAP urlpath_regex google.com/[a-z]*\? google.com.au/[a-z]*\?'

while [ $# -gt 0 ]
do
  echo "OPTION $1 ..." >&2
  case $1 in
    -L) listen="$listen $2"; shift ;;
    -H) use_haproxy=1; haproxy_listen=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done
echo "END OPTINS" >&2

[ -n "$listen" ] || listen=$dflt_listen

# emit cache_peer lines
while [ $# -gt 0 ]
do
  case $1 in
    # squid option terminates upstream peers
    -*)
      break ;;
    [a-z]*=*)
      printf '%s\n' "$1" | sed 's/=/ /'
      shift
      continue
      ;;
  esac
  parent=$1
  shift
  if [ $use_haproxy ]
  then
    echo "$cmd: unexpected upstream-peer (-H supplied): $parent" >&2
    badopts=1
  else
    ( IFS=:; set -- $parent
      if [ $# = 2 ]
      then
        echo "cache_peer $1 parent $2 0 round-robin"
      else
        echo "$cmd: SKIPPING bad parent: $parent" >&2
      fi
    )
  fi
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

# unzapped
for l in $listen
do
  echo "http_port $l"
done
# zapped
echo "http_port 127.0.0.1:8080"
# always direct
echo "http_port 127.0.0.1:3127"

cat <<X
url_rewrite_program $HOME/bin/squid_redirect
url_rewrite_children 2

# other directives
visible_hostname $HOST.$MAILDOMAIN
pid_filename $pidf
access_log $zapdir/access.log
cache_log $zapdir/cache.log
cache_store_log /dev/null
coredump_dir $zapdir
cache_dir ufs $cachedir $ZAP_CACHESIZE 16 256
acl nobannerport myport 8080
acl alwaysdirect myport 3127
redirector_access allow nobannerport
collapsed_forwarding on
## obsolete ## refresh_stale_hit 10 seconds
cache allow GMAP
##cache deny QUERY
cache allow all
##broken_vary_encoding allow apache
http_access allow all
shutdown_lifetime 2 seconds
icp_access allow all
nonhierarchical_direct off
prefer_direct off
always_direct allow alwaysdirect
always_direct deny all
## obsolete ## maximum_single_addr_tries 4
retry_on_error on
X

if [ $use_haproxy ]
then
  haproxy_host=$( expr "x$haproxy_listen" : 'x\(.*\):.*' )
  haproxy_port=$( expr "x$haproxy_listen" : 'x.*:\(.*\)' )
  # emit rules to send specific things direct, the rest via the haproxy
  echo "cache_peer $haproxy_host parent $haproxy_port 0 round-robin"
  proxy-peerage squid acls DIRECT <"$peerage"
else
  # full suite of rules to direct traffic to various proxies
  squid-peerage
fi

exec 1>&3 3>&-

( echo "# Generated on `date`."
  echo "# $0 $oargs"
  echo
  patch-config -I -i "$dfltrc" <"$directives" \
  | grep '^[^#]' \
  | sed -e 's/^ *hierarchy_stoplist/##&/' \
        -e 's/^ *strip_query_terms/##&/'
) \
| $trace rewriteif -d "$rc"

for dir in $zapdir $cachedir $piddir
do  [ -d "$dir" ] || $trace mkdir -p "$dir"
done

tidy
exec $trace squid -N -f "$rc" ${1+"$@"}
