#!/usr/bin/env bash
#
# Run my backups from the current machine to other places.
# Consults ~/rc-local/run-backups files as follows:
#   histbackup.*    update histbackup tree at target
#   image.*         files for image backups (includes --delete)
#   mv.*            files to move (delete after sync)
#   push.*          files to push (no --delete)
# - Cameron Simpson <cs@cskk.id.au> 25jul2020
#

set -ue

: "${HOST:=$( hostname -s )}"

quiet=1
rsvopts=
trace=
targets=
doit=1
dont=
isatty=
[ -t 2 ] && isatty=1 rsvopts=-P trace=set-x

rcdir=$HOME/.run-backups
backups=$rcdir/backups

cmd=$( basename "$0" )
usage="Usage: $cmd [-n] [-q] [-v] [-x] [@target,...] [srcs...]
  Backup data from this host to various remotes, with assorted backup modes.
  The backup location at the remote is BACKUP/\$HOST/mode/...

  Options:
  -n    No action. Passed -n to rsync for the rsync backups,
        and suppresses the histbackup runs.
  -q    Quiet (default).
  -v    Verbose (not quiet, also passed to rsync).
  -x    Trace execution.
  @target,...
        Optional comma separated list of target hosts to constrain backup targets.
  srcs...
        Backup source paths; if specified, only these paths will be backed up.

The configuration file: $backups
contains lines of the form:
    src mode dsthost,... [options...]
The dsthost \".\" indicates backing up to the local machine.

Modes:
  hg    Use \"hg push -f\" to push commits to
        ssh://target/BACKUP/\$HOST/hg/path
  histbackup
        Use rhistbackup to backup from ~/src to target:BACKUP/\$HOST/histbackup/dst
  mv, push, image
        Uses rsync to backup from ~/path to target:BACKUP/\$HOST/rsync/path
        mv: passes --remove-source-files to rsync.
        push: does not use --delete, accumulating at the far end
        image: passed --delete-after to rsync, making an image copy."

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -h|--help)
        echo "$usage"
        exit 0
        ;;
    -n) doit= dont=echo ;;
    -q) quiet=1 rsvopts= trace= ;;
    -v) quiet= rsvopts="$rsvopts -v" ;;
    -x) trace=set-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

# optional @target,...
if [ $# -gt 0 ]
then
  case "$1" in
    @*) targets=$( expr "$1" : '^@\(.*\)' | tr , ' ' )
        shift
        ;;
  esac
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

prefix(){
  if [ $isatty ]
  then  echo "$1 ..." >&2; shift; "$@"
  else  pfx "$@"
  fi
}

xit=0

exec 3<"$backups"

lineno=0
while read -r src0 mode dsthost etc <&3
do
  lineno=$(( lineno + 1 ))
  src=$src0
  case "$src" in
    '' | \#* ) continue ;;
  esac
  [ $# = 0 ] || \
  case " $* " in
    *" $src "*) ;;
    *)  [ $quiet ] || echo "$cmd: skip $src" >&2
        continue
        ;;
  esac
  case "$src" in
    /*) ;; *) src=$HOME/$src ;;
  esac
  if [ -d "$src/" ]
  then  suffix=/ srccd=$src
  else  suffix=  srccd=$( dirname "$src" )
  fi
  for dsthost in $( echo "$dsthost" | tr , ' ' )
  do
    case "$dsthost" in
      *:*)    dst=$(     expr "x$dsthost" : 'x[^:]*:\(.*\)' )
              dsthost=$( expr "x$dsthost" : 'x\([^:]*\):.*' )
              ;;
      *)      dst=$( basename "$src" )
              ;;
    esac
    if [ -n "$targets" ]
    then
      case " $targets " in
        *" $dsthost "*) ;;
        *)    [ $quiet ] || echo "$0: $backups:$lineno: skip dsthost=$dsthost, not in targets $targets" >&2
              continue
              ;;
      esac
    fi
    case "$dst" in
      /*)     ;;
      *)      case "$mode" in
                hg) ;;
                image|mv|push)  dst=BACKUP/$HOST/rsync/$dst ;;
                histbackup)     dst=BACKUP/$HOST/histbackup/$dst ;;
                *)              echo "$cmd: $backups:$lineno: unknown mode: $mode" >&2
                                exit 1
                                ;;
              esac
              ;;
    esac
    (
      case "$dsthost" in
        .)
          # local
          case "$mode" in
            hg)         set -- incd "$src" hg push -f $etc "$HOME/$dst" ;;
            image)      set -- rsync -a $rsvopts --delete-after $etc "$src$suffix" "$HOME/$dst$suffix" ;;
            mv)         set -- rsync -a $rsvopts --remove-source-files $etc "$src$suffix" "$HOME/$dst$suffix" ;;
            push)       set -- rsync -a $rsvopts $etc "$src$suffix" "$HOME/$dst$suffix" ;;
            histbackup) set -- incd "$HOME/$dst" histbackup "$src" . ;;
            *)          echo "$0: $backups:$lineno: unsupported mode: $mode" >&2
                        exit 1
                        ;;
          esac
          ;;
        *)
          # remote
          case "$mode" in
            hg)         set -- incd "$src" hg push -f $etc "ssh://$dsthost/$dst" ;;
            image)      set -- rsync -a $rsvopts --delete-after $etc "$src$suffix" "$dsthost:$dst$suffix" ;;
            mv)         set -- rsync -a $rsvopts --remove-source-files $etc "$src$suffix" "$dsthost:$dst$suffix" ;;
            push)       set -- rsync -a $rsvopts $etc "$src$suffix" "$dsthost:$dst$suffix" ;;
            histbackup) set -- rhistbackup "$src:$dsthost:$dst" ;;
            *)          echo "$0: $backups:$lineno: unsupported mode: $mode" >&2
                        exit 1
                        ;;
          esac
          ;;
      esac
      if [ $doit ]
      then  pfx "$src:$dsthost:$dst" $trace incd "$srccd" "$@"
      else  echo "$src0 $mode $dsthost:$dst: $*"
      fi
    ) || xit=1
  done
done

exit $xit
