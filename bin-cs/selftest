#!/bin/sh
#
# Run self tests.
#       - Cameron Simpson <cs@zip.com.au> 10dec2011
#

set -ue

cmd=`basename "$0"`

main()
{
  usage="Usage: $cmd [-v] [-x] [--python pylibdir pysubtree]..."

  trace=${DEBUG:+set-x}
  vecho=:
  [ -t 1 ] && vecho=echo

  badopts=

  while [ $# -gt 0 ]
  do
    case $1 in
      -x)
        trace=set-x ;;
      -v)
        vecho=echo ;;
      --python)
        pylibdir=$2
        pysubdir=$3
        shift; shift
        test_python "$pylibdir" "$pysubdir" || return $?
        ;;
      --)
        shift; break ;;
      -?*)
        echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    esac
    shift
  done

  [ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2; badopts=1; }

  [ $badopts ] && { echo "$usage" >&2; return 2; }

  return 0
}

test_python()
{
  [ $# = 2 ] || { echo "$cmd: Usage: test_python pylibdir pysubdir" >&2; return 2; }
  (
    pylibdir=$1
    pysubdir=$2

    $vecho "syntax check $pylibdir/$pysubdir ..."
    find "$pylibdir/$pysubdir" -type f -name \*.py -print \
    | sort \
    | \
    { xit=0 
      while read -r py 
      do 
        pyc=${py}c
        if [ "$pyc" -nt "$py" ]
        then  $vecho "SKIP $py - .pyc newer"
        else
          if $trace pfx "$py" env-dev python -tt -m py_compile "$py"
          then  $vecho "OK $py"
          else  echo "FAIL $py - bad syntax" >&2; xit=1
          fi
        fi
      done 
      return $xit 
    }

    $vecho "unit test $pylibdir/$pysubdir ..."
    find "$pylibdir/$pysubdir" -type f -name \*.py -print \
    | sort \
    | \
    { xit=0 
      while read -r py 
      do 
        unitest=`sed -n '${/^ *unittest\.main/p;}' "$py"` 
        [ -n "$unitest" ] || continue 
        pym=`expr "x$py" : "x$pylibdir"'/\(.*\).py' | tr / .` 
        if $trace env-dev -x python -tt -B -m "$pym"
        then  $vecho "OK unit test $py"
        else  echo "FAIL: unitest $py" >&2; return 1
        fi
      done 
      return $xit 
    }
  )

  return $?
}

main ${1+"$@"}
