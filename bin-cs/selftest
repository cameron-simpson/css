#!/bin/sh
#
# Run self tests.
#       - Cameron Simpson <cs@zip.com.au> 10dec2011
#

set -ue

cmd=`basename "$0"`

main()
{
  usage="Usage: $cmd [-v] [-x] [--python pylibdir pysubtree]..."

  trace=${DEBUG:+set-x}
  vecho=:
  vvecho=:
  ##[ -t 1 ] && vecho=echo

  badopts=

  while [ $# -gt 0 ]
  do
    case $1 in
      -x)
        trace=set-x ;;
      -v)
        vecho=echo ;;
      -vv)
        vecho=echo
        vvecho=echo
        ;;
      --python)
        pylibdir=$2
        pysubdir=$3
        shift; shift
        test_python "$pylibdir" "$pysubdir" || return $?
        ;;
      --)
        shift; break ;;
      -?*)
        echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    esac
    shift
  done

  [ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2; badopts=1; }

  [ $badopts ] && { echo "$usage" >&2; return 2; }

  return 0
}

stateful()
{
  [ $# -gt 2 ] \
  || { echo "$cmd: Usage: stateful type srcfile command [args...]" >&2
       return 2
     }
  _s_type=$1
  _s_srcfile=$2
  shift; shift
  _s_statefile=state/$_s_type/$_s_srcfile
  if [ "$_s_statefile" -nt "$_s_srcfile" ]
  then
    if [ -s "$_s_statefile" ]
    then $vvecho "SKIP $_s_type $_s_srcfile - newer $_s_statefile"
    else $vecho "FAIL $_s_type $_s_srcfile (cached)" >&2
    fi
  else
    [ ! -e "$_s_statefile" ] || rm -f -- "$_s_statefile"
    _s_statedir=`dirname "$_s_statefile"`
    [ -d "$_s_statedir" ] || mkdir -p "$_s_statedir"
    if $trace pfx "$_s_srcfile" env-dev "$@"
    then
      $vecho "OK $_s_type $_s_srcfile"
      echo 1 >"$_s_statefile"
    else
      echo "FAIL $_s_type $_s_srcfile" >&2
      >"$_s_statefile"
    fi
  fi
  [ -s "$_s_statefile" ]
}

test_python()
{
  [ $# = 2 ] \
  || { echo "$cmd: Usage: test_python pylibdir pysubdir" >&2
       return 2
     }

  (
    set -ue
    pylibdir=$1
    pysubdir=$2

    $vecho "syntax check $pylibdir/$pysubdir ..."
    find "$pylibdir/$pysubdir" -type f -name \*.py -print \
    | sort \
    | \
    ( xit=0 
      while read -r py 
      do 
        stateful syntax "$py" python -3 -tt -m py_compile "$py" \
        || xit=1
      done 
      exit $xit 
    ) || exit $?

    $vecho "import check $pylibdir/$pysubdir ..."
    find "$pylibdir/$pysubdir" -type f -name \*.py -print \
    | sort \
    | \
    ( xit=0 
      while read -r py 
      do 
        pym=`expr "x$py" : "x$pylibdir"'/\(.*\).py' | tr / .` 
        stateful import "$py" python -3 -tt -c "import $pym" \
        || xit=1
      done 
      exit $xit 
    ) || exit $?

    $vecho "unit test $pylibdir/$pysubdir ..."
    find "$pylibdir/$pysubdir" -type f -name \*.py -print \
    | sort \
    | \
    ( xit=0 
      while read -r py 
      do 
        unitest=`sed -n '${/^ *unittest\.main(/p;/^ *selftest(/p;}' "$py"` 
        [ -n "$unitest" ] || continue 
        pym=`expr "x$py" : "x$pylibdir"'/\(.*\).py' | tr / .` 
        stateful unittest "$py" python -tt -u -B -m "$pym" \
        || xit=1
      done 
      exit $xit 
    ) || exit $?
  ) || return $?

  return 0
}

main ${1+"$@"}
