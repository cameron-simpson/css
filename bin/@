#!/bin/sh -u
#
# Quick attach to remote host.
#	- Cameron Simpson <cs@zip.com.au>
#

: ${RTERM_SSHOPTS:=''}
: ${DISPLAY:=''}

cmd=`basename "$0"`
usage="Usage: $cmd [login@]host[/screen,...][,[login@host[/screen,...]]...] [-v] [-n name] [-o opt] {-A | [-c sh-command] | [[--] command [args...]]}
	-A	Pop up terminals for all screens on the remote host.
	-ip +ip	Passed to term.
	-v	Verbose.
	-1	Use ssh protocol 1.
	-2	Use ssh protocol 2.
	-m msg	Log session with the supplied message.
        -x      Trace term invocations.
	+X	Ssh option: X11 forwarding off.
	-X	Ssh option: X11 forwarding on. NB: Turns on ForwardX11Trusted, like ssh -Y.
	-n name	Name for window and remote screen session."

badopts=

if [ $# -gt 0 ]
then
  targets=$1
  shift
else
  echo "$cmd: missing host" >&2
  badopts=1
fi

trace=:
name=
verbose=
farhost=
newflag=
sshopts=
sshx11opt=
##[ -n "$DISPLAY" ] && sshx11opt=-Y
termopts='-g M'
doscript=
doscreen=
allscreens=
msg=
nomsgopt=-M
trace=

gotargs=
while [ $# -gt 0 ]
do
  case $1 in
    -A)	doscreen=1 allscreens=1 ;;
    -c)	shift; set -- sh -c "$1"; break ;;
    -e)	shift
        [ $# = 0 ] && { echo "$cmd: -e: missing command" >&2
                        badopts=1
                      }
        break
        ;;
    -m)	msg=$2; shift; nomsgopt=; doscript=1 ;;
    -n)	name=$2; shift ;;
    -v)	sshopts="$sshopts -v" verbose=1 ;;
    -[XY])
        sshx11opt=$1 ;;
    -x) trace=set-x ;;
    +X)	sshx11opt=forwardx11=no ;;
    -[12])
        sshopts="$sshopts $1" ;;
    -ip|+ip)
        termopts="$termopts $1" ;;
    -s)	doscreen=1 ;;
    +s)	doscreen= ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)	break ;;
  esac
  shift
done

[ $allscreens ] \
 && { [ $# = 0 ] \
   || { echo "$cmd: a command may not be supplied with -A option" >&2
	badopts=1
      }
    }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

lastbase=
lasthost=
for target in $targets ##`printf "%s\n" "$targets" | tr , ' '`
do
  while [ -n "$target" ]
  do
    tpfx=`expr "x$target" : 'x\([^,/]*\).*'` || :
    tsfx=`expr "x$target" : 'x[^,/]*\(.*\)'` || :
    ##echo "1: target=[$target], tpfx=[$tpfx], tsfx=[$tsfx]" >&2
    # skip empty stuff
    case $tsfx in
      # /{scr1,scr2,...}
      /{*}*)
        ##echo "/{...}" >&2
        scrlist=`expr "x$tsfx" : 'x..\([^}]*\)}.*'`
        tsfx=`   expr "x$tsfx" : 'x..[^}]*}\(.*\)'`
        ;;
      # /scr1
      /*)
        ##echo "/scr" >&2
        scrlist=`expr "x$tsfx" : 'x.\([^,]*\).*'`
        tsfx=`   expr "x$tsfx" : 'x.[^,]*\(.*\)'`
        ;;
      *)
        ##echo "no /scr" >&2
        scrlist=
        ;;
    esac
    # prepare target for next loop iteration
    target=`expr "x$tsfx" : 'x,*\(.*\)'` || :
    ##echo "2: tpfx=[$tpfx], tsfx=[$tsfx], scrlist=[$scrlist], target=[$target]" >&2
    [ -n "$tpfx" ] || continue

    case "$tpfx" in
      [0-9])
        [ -n "$lastbase" ] \
        || { echo "$cmd: no previous hostN name, skipping: $tpfx" >&2
             xit=1
             continue
           }
        host=$lastbase$tpfx
        ;;
      [a-z]*[0-9])
        host=$tpfx
        lastbase=`expr "x$tpfx" : 'x\(.*[^0-9]\)[0-9]*'` || xit=1
        ;;
      *)host=$tpfx
        lastbase=
        ;;
    esac
    lasthost=$host

    if [ -n "$scrlist" ]
    then
      scrlist=`printf "%s\n" "$scrlist" | tr , ' '`
    else
      if [ $allscreens ]
      then
        scrlist=`envssh $RTERM_SSHOPTS $sshopts -- "$host" exec scr | awk '!/\._/ {print $2}'`
        [ -n "$scrlist" ] || { echo "$cmd: no screens at host $host, skipped" >&2
                               continue
                             }
      fi
    fi

    (
      [ -n "$name" ] || name=$host

      if [ -n "$scrlist" ]
      then
        xit=0
        for scr in $scrlist
        do
          $trace term -n "$name/$scr" \
               -e envssh $RTERM_SSHOPTS $sshopts -- "$host" "exec scr $scr" \
          || xit=1
        done
        exit $xit
      fi

      # no command? just run the preferred shell
      [ $# = 0 ] && set -- sh -c '[ -s /opt/css/env.sh ] && . /opt/css/env.sh; exec $SHELL'

      [ $doscreen ] && set -- scr '_$$' "$@"
      qcmd=exec\ `shqstr "$@"`
      set -- envssh $RTERM_SSHOPTS $sshx11opt $sshopts -- "$host" "$qcmd"
      [ $doscript ] && set -- logscript -m "$name: $msg" $nomsgopt -- "$name" "$@"

      exec $trace term $termopts -n "$name" -e "$@"
    ) || xit=1
  done
done

exit $xit
