#!/bin/sh -u
#
# Quick attach to remote host.
#	- Cameron Simpson <cs@zip.com.au>
#

: ${RTERM_SSHOPTS:=''}
: ${DISPLAY:=''}

cmd=`basename "$0"`
usage="Usage: $cmd [login@]host[/screen,...][,[login@host[/screen,...]]...] [-v] [-n name] [-o opt] {-A | [-c sh-command] | [[--] command [args...]]}
	-A	Pop up terminals for all screens on the remote host.
	-ip +ip	Passed to term.
	-v	Verbose.
	-1	Use ssh protocol 1.
	-2	Use ssh protocol 2.
	-m msg	Log session with the supplied message.
        -x      Trace term invocations.
	+X	Ssh option: X11 forwarding off.
	-X	Ssh option: X11 forwarding on. NB: Turns on ForwardX11Trusted, like ssh -Y.
	-n name	Name for window and remote screen session."

badopts=

if [ $# -gt 0 ]
then
  targets=$1
  shift
else
  echo "$cmd: missing host" >&2
  badopts=1
fi

trace=:
name=
verbose=
farhost=
newflag=
sshopts=
sshx11opt=
##[ -n "$DISPLAY" ] && sshx11opt=-Y
termopts='-g M'
doscript=
doscreen=
allscreens=
msg=
nomsgopt=-M
trace=

gotargs=
while [ $# -gt 0 ]
do
  case $1 in
    -A)	doscreen=1 allscreens=1 ;;
    -c)	shift; set -- sh -c "$1"; break ;;
    -e)	shift
        [ $# = 0 ] && { echo "$cmd: -e: missing command" >&2
                        badopts=1
                      }
        break
        ;;
    -m)	msg=$2; shift; nomsgopt=; doscript=1 ;;
    -n)	name=$2; shift ;;
    -v)	sshopts="$sshopts -v" verbose=1 ;;
    -[XY])
        sshx11opt=$1 ;;
    -x) trace=set-x ;;
    +X)	sshx11opt=forwardx11=no ;;
    -[12])
        sshopts="$sshopts $1" ;;
    -ip|+ip)
        termopts="$termopts $1" ;;
    -s)	doscreen=1 ;;
    +s)	doscreen= ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)	break ;;
  esac
  shift
done

[ $allscreens ] \
 && { [ $# = 0 ] \
   || { echo "$cmd: a command may not be supplied with -A option" >&2
	badopts=1
      }
    }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

lastbase=
lasthost=
for target in `hostlist "$targets"`
do
  case "$target" in
    */*)
      host=`   expr "x$target" : 'x\(.*\)/.*'`
      scrlist=`expr "x$target" : 'x.*/\(.*\)'`
      ;;
    *)host=$target
      scrlist=
      ;;
  esac

  if [ -z "$scrlist" ] && [ $allscreens ]
  then
    scrlist='*'
  fi
  if [ -n "$scrlist" ]
  then
    case "$scrlist" in
      *\**) 
        rscrlist=`envssh $RTERM_SSHOPTS $sshopts -- "$host" exec scr | sed -n 's/^ *[1-9][0-9]*  *[1-9][0-9]*\.\([^_].*\)/\1/p' | sort -u`
        ;;
    esac
  fi

  (
    [ -n "$name" ] || name=$host

    if [ -n "$scrlist" ]
    then
      xit=0
      for scrptn in `printf "%s\n" "$scrlist" | tr , ' '`
      do
        set --
        case "$scrptn" in
          *\**)
            for rscr in $rscrlist
            do
              eval 'case "$rscr" in '"$scrptn"') set -- ${1+"$@"} "$rscr" ;; esac'
            done
            if [ $# = 0 ]
            then
              echo "$cmd: warning: no screens at \$host matching \"$scrptn\"" >&2
            fi
            ;;
          *)set -- ${1+"$@"} "$scrptn"
            ;;
        esac
        for scr
        do
          $trace term -n "$name/$scr" \
               -e envssh $RTERM_SSHOPTS $sshopts -- "$host" "exec scr $scr" \
          || xit=1
        done
      done
      exit $xit
    fi

    # no command? just run the preferred shell
    [ $# = 0 ] && set -- sh -c '[ -s /opt/css/env.sh ] && . /opt/css/env.sh; exec $SHELL'

    [ $doscreen ] && set -- scr '_$$' "$@"
    qcmd=exec\ `shqstr "$@"`
    set -- envssh $RTERM_SSHOPTS $sshx11opt $sshopts -- "$host" "$qcmd"
    [ $doscript ] && set -- logscript -m "$name: $msg" $nomsgopt -- "$name" "$@"

    exec $trace term $termopts -n "$name" -e "$@"
  ) || xit=1
done

exit $xit
