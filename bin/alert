#!/bin/sh
#
# Write a possibly-colourised string to the alert log.
#	- Cameron Simpson <cs@zip.com.au>
#

set -ue

: ${OS:=`uname -s | tr '[A-Z]' '[a-z]'`}
: ${LOGDIR:=$HOME/var/log}
: ${ALERTLOG:=$LOGDIR/alert-local}

cmd=$0
usage="Usage: $cmd [-c colour] [-e command [args...] --] [-G] [-l level] [-s subtitle] [-t title] {-|echo-args...]}"

colour=
dlog=1
level=1
growl=
tnotify=
title=
subtitle=
execute=
case "$OS" in
  darwin)
    growl=1
    tnotify=1
    ;;
esac
if flag -w GROWL_DISABLE
then  growl=
fi

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -c) colour=$2; shift ;;
    -D) dlog=1 ;;
    +D) dlog= ;;
    -e) shift
        firstarg=1
        tailargs=
        for arg
        do
          if [ $tailargs ]
          then
            # re-accrue the trailing arguments
            set -- ${1+"$@"} "$arg"
          else
            if [ "x$arg" = x-- ]
            then
              if [ $firstarg ]
              then
                echo "$cmd: missing command after -e" >&2
                badopts=1
              else
                execute=$( as-script "$@" )
              fi
              set --
              tailargs=1
            else
              [ $firstarg ] && { set --; firstarg=; }
              set -- ${1+"$@"} "$arg"
            fi
          fi
        done
        if [ -z "$tailargs" ]
        then
          echo "$cmd: -e: missing trailing --" >&2
          badopts=1
        fi
        continue
        ;;
    -G) growl=1 ;;
    +G) growl= ;;
    -l) level=$2; shift ;;
    -t) title=$2; shift ;;
    -s) subtitle=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing \"-\" or echo-args" >&2
  badopts=1
else
  case "$*" in
    -)  set -- "`cat`" ;;
  esac
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

exec </dev/null

xit=0

message=$*
if [ -z "$title" ]
then
  tag=`expr "x$message" : 'x\([A-Z][A-Z0-9_]*\):  *' || :`
  if [ -n "$tag" ]
  then
    title=$tag
    message=`expr "x$message" : 'x[A-Z][A-Z0-9_]*:  *\(.*\)' || :`
  fi
fi

if [ -z "$subtitle" ]
then
  tag=`expr "x$message" : 'x\([^:]*\):  *' || :`
  if [ -n "$tag" ]
  then
    subtitle=$tag
    message=`expr "x$message" : 'x[^:]*:  *\(.*\)' || :`
  fi
fi

set -- "$message"
[ -n "$subtitle" ] && set -- "$subtitle;" ${1+"$@"}
[ -n "$title" ] && set -- "$title:" ${1+"$@"}

if [ -n "$colour" ]
then  colour_echo "$colour" "$*"
else  echo "$*"
fi >>"$ALERTLOG" || xit=1

[ $dlog ] && dlog "ALERT: $*"

if [ $growl ]
then
  # try growlnotify, otherwise hope /dev/tty is an iTerm
  growlnotify -m "$*" || echo $'\e]9;$*\a' >/dev/tty || xit=1
fi

if [ $tnotify ]
then
  for var in title subtitle message
  do  eval "val=\$$var"
      val=`echo $val`
      case "$val" in
        *[\'\\]*)        val=`shqstr "$val"` ;;
      esac
      eval "$var=\$val"
  done
  set -- terminal-notifier -title "$title" -subtitle "$subtitle" -message "$message"
  [ -n "$execute" ] && set -- "$@" -execute "$execute"
  "$@" >/dev/null
fi

exit $xit
