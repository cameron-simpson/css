#!/usr/bin/python -tt
#
# Utility to handle Beyonwiz TVWiz files.
#       - Cameron Simpson <cs@zip.com.au> 08jun2008
#

import sys
import os.path
import struct
import cs.misc
from cs.logutils import Pfx, error, setup_logging
from cs.app.beyonwiz import TVWiz

def main(argv):
  args = list(argv)
  cmd = os.path.basename(args.pop(0))
  setup_logging(cmd)
  usage = '''Usage:  %s cat tvwizdirs...
        %s scan tvwizdirs...''' % (cmd, cmd)

  badopts = False

  if not args:
    warn("missing operation")
    badopts = True
  else:
    op = args.pop(0)
    with Pfx(op):
      if op == "cat":
        if len(args) < 1:
          error("missing tvwizdirs")
          badopts = True
      elif op == "scan":
        if len(args) < 1:
          error("missing tvwizdirs")
          badopts = True
      else:
        error("unrecognised operation")
        badopts = True

  if badopts:
    print >>sys.stderr, usage
    return 2

  xit = 0

  if op == "cat":
    for arg in args:
      TVWiz(arg).copyto(sys.stdout)
  elif op == "scan":
    for arg in args:
      print arg
      total = 0
      chunkSize = 0
      chunkOff = 0
      for wizOffset, fileNum, flags, offset, size in TVWiz(arg).trunc():
        print "  wizOffset=%d, fileNum=%d, flags=%02x, offset=%d, size=%d" \
              % ( wizOffset, fileNum, flags, offset, size )
        total += size
        if chunkOff != wizOffset:
          skip = wizOffset - chunkOff
          if chunkSize == 0:
            print "    %d skipped" % skip
          else:
            print "    %d skipped, after a chunk of %d" % (skip, chunkSize)
          chunkOff = wizOffset
          chunkSize = 0
        chunkOff += size
        chunkSize += size
      if chunkOff > 0:
        print "    final chunk of %d" % chunkSize
      print "  total %d" % total
  else:
    error("unsupported operation: %s" % op)
    xit = 2

  return xit

if __name__ == '__main__':
  sys.exit(main(sys.argv))
