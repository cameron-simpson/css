#!/bin/sh
#
# Watch a CARP interface for MASTER status.
# When MASTER, ping a target from the interface's primary address.
# This is used to advertise the physical location of the MASTER to an
# upstream multiswitch VLAN, and thus to advertise the CARP failover.
# Note that if the upstream loses internal connectivity then both
# CARP servers will become masters at the same time.
# This is bad, unless pfsync is working between them.
#       - Cameron Simpson <cs@cskk.id.au> 30dec2012
#

set -ue

trace=set-x
state=MASTER
srcaddr=
testrate=2

cmd=`basename "$0"`
usage="Usage: $cmd [-s STATE] [-S srcaddr] carpif[,carpif...] upstreamaddr
  -s STATE      State to wait for. Default: $state
  -S srcaddr    Source address for ping. Default from carpif.
  carpif        CARP interface to monitor.
		Multiple carp interfaces may be specified as a
		commas or space separated list.
		The first carp interface is used to obtain the
		default srcaddr if -S is not used.
  upstreamaddr  Target address for ping."

badopts=

while [ $# -gt 0 ]
do
  case "$1" in
    -s) state=$2; shift ;;
    -S) srcaddr=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing carpifs" >&2
  badopts=1
  carpif=
else
  carpifs=$1
  shift
  # turn commas into spaces
  case "$carpifs" in
    *,*)
      carpifs=`echo $carpifs | tr , ' '`
      ;;
  esac
  # use the first interface specially
  carpif=`echo $carpifs | sed 's/ .*//'`
  if [ -z "$carpif" ]
  then
    echo "$cmd: empty carpif list" >&2
    badopts=1
  fi
fi

if [ $# = 0 ]
then
  echo "$cmd: missing upstreamaddr" >&2
  badopts=1
  upaddr=
else
  upaddr=$1
  shift
fi

if [ $# -gt 0 ]
then
  echo "$cmd: extra arguments after upstreamaddr: $*" >&2
  badopts=1
fi

if [ -z "$srcaddr" -a -n "$carpif" ]
then
  srcaddr=`ifconfig "$carpif" | sed -n 's/.*inet \([^ ][^ ]*\) .*/\1/p'`
  if [ -z "$srcaddr" ]
  then
    echo "$cmd: cannot compute srcaddr from carpif $carpif" >&2
    badopts=1
  fi
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

exec \
  $trace \
    svcd -n "proxyarp-$carpif" \
         -t "set -ue
             carpifs='$carpifs'
             carpstate='$state'
           "'for carpif in $carpifs
             do
               state=`carp-state "$carpif"`
               [ "x$state" = "x$carpstate" ] || exit 1
             done
             exit 0
            ' \
         -T "$testrate" \
         $trace ping -q -S "$srcaddr" "$upaddr"
