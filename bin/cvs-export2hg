#!/bin/sh -u
#
# Export a CVS repository tree to Mercurial.
# Doesn't understand branches.
#       - Cameron Simpson <cs@zip.com.au> 20apr2007
#

set -ue

dotrace=1
perfile=

cmd=`basename "$0"` || exit 1
usage="Usage: $cmd [-d cvsroot] cvssubdir [newhgdir]
        -d cvsroot      CVS repository root, default from \$CVSROOT.
        --perfile       Make a new changeset per file revision instead of
                        bundling all simultaneous file revisions into
                        a single changeset.
        cvssubdir       The CVS repository directory to export.
        newhgdir        The new Mercurial work area.
                        Default: basename of cvssubdir."

badopts=

while [ $# -gt 0 ]
do
  case "$1" in
    -d) CVSROOT=$2; shift ;;
    --perfile)
        perfile=1 ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done
[ $# -gt 0 ] && [ "x$1" = x-d ] && { CVSROOT=$2; shift; shift; }

if [ $# = 0 ]
then
  echo "$cmd: missing cvssubdir" >&2
  badopts=1
else
  subdir=$1
  shift
  case "$CVSROOT" in
    /*) ;;
    *)  echo "$cmd: \$CVSROOT is not a local path: $CVSROOT" >&2
        badopts=1
        ;;
  esac
  export CVSROOT
  echo "CVSROOT=$CVSROOT" >&2

  if [ $# = 0 ]
  then
    newhgdir=`basename "$subdir"` || exit 1
  else
    newhgdir=$1
    shift
  fi
fi

[ $# = 0 ] || { echo "$cmd: extra arguments after newhgdir: $*" >&2
                badopts=1
              }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

set -e

logf="$TMPDIR/$cmd.$$.logmsg"
wkdir=`mkdirn "$TMPDIR/$cmd."`
trap 'set -x; rm -rf "$logf" "$wkdir"' 1 2 13 15

trace()
{ ( set -x; exec "$@" )
}

trace mkdir "$newhgdir"
newhgdir=`cd "$newhgdir" && pwd`

cd "$wkdir"
wkdir=`pwd`                   

_cvs()
{ trace cvs "$@"
}
_hg()
{ ( cd "$newhgdir"
    trace hg "$@"
  )
}

_hg init

( cd "$CVSROOT/$subdir"
  exec find . \( -type d -name Attic -prune \) -o \( -type f -name '*,v' -print \)
) \
| sed -n 's|^\./||; s/,v$//p' \
| while read -r cvsfile
  do
    cvsfile-revs < "$CVSROOT/$subdir/$cvsfile,v" \
    | sed "s;^;$cvsfile	;"
  done \
| tee $HOME/tmp/cvs2hg-revs \
| if [ $perfile ]
  then
    sort '-t	' -k 3 -k 1 \
    | \
    {
      ##trap 'set -x; rm -r "$wkdir"' 1 2 13 15
      mkdir -p "$subdir"
      cd "$subdir"
      pwd

      while read -r file rev date author rev2
      do
        if [ -f "$file" ]
        then
          ##ls -ld "$file"
          _cvs update -r "$rev" "$file"
          if [ -f "$file" ]
          then
            fdir=`dirname "$file"`
            trace cp -p "$file" "$newhgdir/$fdir/."
          else
            # a "cvs rm" !
            _hg remove "$file"
            trace rm -f "$newhgdir/$file"
          fi
        else
          fdir=`dirname "$file"`
          trace [ -d "$fdir" ] || trace mkdir -p "$fdir" "$newhgdir/$fdir"
          ( cd "$wkdir" && _cvs co -r "$rev" "$subdir/$file" )
          trace cp -p "$file" "$newhgdir/$fdir/."
          _hg add "$file"
        fi

        ##echo "$date"
        date=`echo "$date" | tr _ ' '`
        ##date -d "$date Z"
        log=`cvs log -l -N "-r$rev:$rev" "$file" | sed '1,/^date:/d; $d'`
        if [ -n "$log" ]
        then  log="$log [CVS:$rev]"
        else  log="[CVS:$rev]"
        fi
        _hg commit -d "$date UTC" -m "$log" "$file"
        ##ls -ld "$file"
        ##[ "x$rev" = x1.1 ] || _hg log "$file"
      done
    }
  else
    awk '{ print $3 }' \
    | tee $HOME/tmp/cvs2hg-awk2 \
    | sed 's/\(....\)\(..\)\(..\)T\(..\)\(..\)\(..\)/\1-\2-\3 \4:\5:\6/; s/$/ UTC/' \
    | tee $HOME/tmp/cvs2hg-cleaned \
    | sort -u \
    | \
    {
      first=1
      while read -r date
      do
        if [ $first ]
        then
          _cvs -q co -D "$date" "$subdir"
          cd "$subdir"
        else
          _cvs -q update -D "$date"
        fi

        # update the files
        trace rsync -a --exclude=CVS/ --exclude=.hg/ --delete . "$newhgdir/."

        if [ $first ]
        then  daterange="<=$date"
        else  odate1=`date -d "$odate 1 second"`
              daterange="$odate1<=$date"
        fi
        _cvs -q log -S -N "-d$daterange" \
        | tee -a ~/tmp/cvs2hg-cvslog \
        | sed -n '/^Working file:/,/^=============================================================================/{
                    /^Working file:/d
                    /^head:/d
                    /^branch:/d
                    /^branches:/d
                    /^locks:/d
                    /^access list:/d
                    /^keyword substitution:/d
                    /^total revisions:/d
                    /^description:/d
                    /^Initial revision/d
                    /^----------------------------/d
                    /^revision [0-9]/d
                    /^date:/d
                    /^=============================================================================/d
                    p
                  }' \
        | keepfirst \
        > "$logf"

        ls -ld "$logf"
        [ -s "$logf" ]
        cat "$logf"
        nchanged=`_hg stat | wc -l`
        [ $nchanged = 0 ] \
        || _hg commit -A -d "$date" -l "$logf" </dev/null

        first=
        odate=$date
      done
    }
  fi
