#!/usr/bin/env python

from __future__ import print_function
import os
import sys
import cs.sh

usage = "Usage: %s [-f] [{-sh|-csh}] [--] [envvars...]"

def main(argv):
  syntax = 'sh'
  force = False
  argv = list(argv)
  cmd = argv.pop(0)
  badopts = False
  while argv:
    arg = argv.pop(0)
    if arg == '-f':
      force = True
    elif arg == '-sh':
      syntax = 'sh'
    elif arg == '-csh':
      syntax = 'csh'
    elif arg == '--':
      break
    elif arg.startswith('-'):
      print("%s: unrecognised option: %s" % (cmd, arg), file=sys.stderr)
      badopts = True
    else:
      argv.insert(0, arg)
      break
  if badopts:
    print(usage % (cmd,), file=sys.stderr)
    return 2
  if not argv:
    argv = sorted(os.environ.keys())
  for envvar in argv:
    if envvar in os.environ:
      envval = os.environ[envvar]
      qenvval = cs.sh.quotestr(envval)
      if syntax == 'sh':
        if force:
          print('%s=%s; export %s' % (envvar, qenvval, envvar))
        else:
          print(': ${%s:=%s}; export %s' % (envvar, qenvval, envvar))
      elif syntax == 'csh':
        if not force:
          print('test -n "$%s" ||' % (envvar,),)
        print('setenv %s %s' % (envvar, qenvval))
      else:
        print("%s: unimplemented synax: %s" % (cmd, syntax), file=sys.stderr)
        return 1
  return 0

if __name__ == '__main__':
  sys.exit(main(sys.argv))
