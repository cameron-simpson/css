#!/bin/sh -u
#
# Return or note file location based on md5 checksum.
#	- Cameron Simpson <cs@cskk.id.au> 19may2005
#

: ${FILELOC_CACHE:=$HOME/var/cache/fileloc}

cmd=$0
usage="Usage: $cmd [-a] sourcefiles...
	-a	Add sourcefile full path to cache.
	-u	Unique: remove duplicate paths from the cache file."

badopts=

add=
keepfirst=

while [ $# -gt 0 ]
do
  case $1 in
    -a)	add=1 ;;
    -u)	keepfirst=1 ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
	badopts=1
	;;
    *)	break ;;
  esac
  shift
done

[ -n "$keepfirst" -a -z "$add" ] && { echo "$cmd: -u requires -a" >&2
				      badopts=1
				    }

[ $# = 0 ] && { echo "$cmd: missing sourcefiles" >&2; badopts=1; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

for srcfile
do
  [ -f "$srcfile" ] || { echo "$cmd: $srcfile: not a regular file" >&2
			 xit=1
			 continue
		       }
  cachefile=$FILELOC_CACHE/`md5path "$srcfile"` \
  || { echo "$cmd: can't checksum $srcfile" >&2
       xit=1
       continue
     }

  if [ $add ]
  then
    cachedir=`dirname "$cachefile"` || exit 1
    [ -d "$cachedir/." ] || mkdir -p "$cachedir" \
    || { echo "$cmd: $srcfile: warning: can't make dir for md5 cachefile $cachefile" >&2
	 xit=1
	 continue
       }

    # try to clean up the path
    if srcdir=`dirname "$srcfile"` \
    && srcdir=`( cd "$srcdir" && exec pwd )` \
    && srcbase=`basename "$srcfile"`
    then
      srcfile=$srcdir/$srcbase
    fi

    # now record the path in the md5-based cache file
    if [ -s "$cachefile" ]
    then
      # prepend to existing list
      if bsed -s "1i\\
$srcfile" "$cachefile"
      then
	[ $keepfirst ] && { keepfirst <"$cachefile" | rewriteif "$cachefile" || xit=1; }
      fi
    else
      # new cache map - just make it
      printf '%s\n' "$srcfile" >>"$cachefile"
    fi

    continue
  fi

  where=
  if [ -s "$cachefile" ]
  then
    while read -r path
    do [ -f "$path" ] && { where=$path; break; }
    done < "$cachefile"
  fi
  [ -n "$where" ] || { : echo "$cmd: $srcfile: no location recorded" >&2; xit=1; }
  [ $# -gt 1 ] && printf "%s\t" "$srcfile"
  printf "%s\n" "$where"
done

exit $xit
