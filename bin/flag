#!/bin/sh -u
#
# Simple boolean states kept as files.
#       - Cameron Simpson <cs@zip.com.au> 25sep2006
#

trace=${DEBUG:+set-x}
flagdir=${FLAGDIR:-$HOME/var/flags}
quiet=
qopt=
invert=
makemissing=
flushflags=
verbose=        # print flag state changes
verbose_all=    # print flag state regardless
[ -t 2 ] && verbose=1
##[ -t 2 ] && trace=set-x

cmd=$0
usage="Usage:
  $cmd [options...] [glob]
    List flags and values. If supplied, select names matching glob.
  $cmd [options...] [!] flagname
    Test flag for truth, or falsehood if \"!\" supplied.
  $cmd [options...] [!] flagname {true|false|0|1}
    Set flag to true for \"true\" or "1", false otherwise.
  $cmd [options...] [!] flagname -c shcmd
    Run shell command shcmd, set flag according to shell exit status.
  $cmd [options...] [!] flagname -e command [args...]
    Run command, set flag according to command exit status.
  If the flag is preceeded by \"!\" with any of the set modes
  theresult is inverted.
  Options:
    -d flagdir  Specify directory to hold flag files.
    -F          Flush flags. Delete files for false flags.
    -q          Quiet. Turn off verbose. Do not report false flags in list mode.
    -v          Verbose. Recite flag value changes.
    -V          Very verbose. Recite all flag values set, even when not a change.
    -w          Update/create the flag file with the derived flag if missing.
    --          End options."

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -d) flagdir=$2; shift ;;
    -F) flushflags=1 ;;
    -q) quiet=1 verbose=1 qopt=$1 ;;
    -v) verbose=1 ;;
    -V) verbose=1 verbose_all=1 ;;
    -w) makemissing=1 ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

testflag(){
  [ -s "$flagdir/$1" ]
}

matchflag(){ return 0; }
if [ $# -gt 0 ]
then
  case "$1" in
    *\**)
      matchglob=$1
      shift
      eval "matchflag(){
              case "\$1" in
                $matchglob) return 0 ;;
                *)          return 1 ;;
              esac
            }"
      ;;
  esac
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

debug=${DEBUG:+1}
[ -n "$debug" ] || { [ -s "$flagdir/FLAG_DEBUG" ] && debug=1; }

if [ $# = 0 ]
then
  # no flag name; list flag values
  cd "$flagdir" || exit 1
  for flagname in *
  do
    [ "x$flagname" = 'x*' ] && [ ! -e "$flagname" ] && continue
    matchflag "$flagname" || continue
    if testflag "$flagname"
    then
      if [ $quiet ]
      then  echo "$flagname"
      else  echo "$flagname	TRUE"
      fi
    else
      [ $quiet ] || echo "$flagname	FALSE"
      if [ $flushflags ]
      then
        [ ! -f "$flagname" ] || $trace rm0 $qopt "$flagname"
      fi
    fi
  done
  exit 0
fi

# look for "!" before flag name
[ $# -gt 0 ] && [ "x$1" = x!  ] && { invert=1; shift; }

flagname=$1
shift
case "$flagname" in
  '' | */* | . | .. )
    echo "$cmd: illegal flagname: $flagname" >&2
    badopts=1
    ;;
  *[a-z.-]*)
    flagname=$( echo "$flagname" | tr '.[a-z]-' '_[A-Z]_' )
esac

if [ $# = 0 ]
then
  setstate=
else
  setstate=1
  value=$1
  shift
  case "$value" in
    0|[Ff][Aa][Ll][Ss][Ee]) set -- false ;;
    1|[Tt][Rr][Uu][Ee])     set -- true ;;
    -c) if [ $# = 0 ]
        then
          echo "$cmd: -c: missing shcmd" >&2
          badopts=1
        else
          shcmd=$1
          shift
          if [ $# -gt 0 ]
          then
            echo "$cmd: -c: extra arguments after shcmd: $*" >&2
            badopts=1
          else
            set -- $trace sh -c "$shcmd"
          fi
        fi
        ;;
    -e) if [ $# = 0 ]
        then
          echo "$cmd: -e: missing command" >&2
          badopts=1
        else
          set -- $trace "$@"
        fi
        ;;
    *)  echo "$cmd: unsupported value: $value" >&2
        badopts=1
        ;;
  esac
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

flagfile=$flagdir/$flagname
[ $debug ] && echo "$0: flagfile=$flagfile" >&2

if [ $setstate ]
then
  if "$@"
  then  newstate=1
  else  newstate=
  fi
  if [ $invert ]
  then  if [ $newstate ]
        then  newstate=
        else  newstate=1
        fi
  fi
  if [ $newstate ]
  then
    [ $debug ] && echo "$0: $flagfile -> 1" >&2 || :
    if [ $verbose_all ]
    then
      echo "$flagname -> 1" >&2
    else
      if testflag "$flagname"
      then  exit 0
      fi
      echo "$flagname -> 1" >&2 || :
    fi
    [ -d "$flagdir/." ] || $trace mkdir -p "$flagdir" || exit 1
    echo 1 >"$flagfile" || exit 1
  else
    [ $debug ] && echo "$0: $flagfile -> ''" >&2 || :
    if [ $verbose_all ]
    then
      echo "$flagname -> 0" >&2 || :
    else
      if testflag "$flagname"
      then
        [ $verbose ] && echo "$flagname -> 0" >&2 || :
      else
        exit 0
      fi
    fi
    if [ -z "$makemissing" -a ! -e "$flagfile" ]
    then
      exit 0
    fi
    [ -d "$flagdir/." ] || $trace mkdir -p "$flagdir" || exit 1
    : >"$flagfile" || exit 1
  fi
  exit 0
fi

if testflag "$flagname"
then
  [ $invert ] && exit 1
  exit 0
else
  [ $makemissing ] && [ ! -f "$flagfile" ] && : >"$flagfile"
  [ $invert ] && exit 0
  exit 1
fi
