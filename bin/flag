#!/bin/sh -u
#
# Simple boolean states kept as files.
#       - Cameron Simpson <cs@zip.com.au> 25sep2006
#

trace=
[ -t 2 ] && trace=set-x
flagdir=$HOME/var/flags
quiet=
qopt=
invert=
makemissing=
flushflags=

cmd=$0
usage="Usage: $0 [-d flagdir] [-w] [--] [!] [flagname [true|false|0|1]]
  -d flagdir    Specify directory to hold flag files.
  -q            Quiet. Do not report false flags in list mode.
  -w            Update/create the flag file with the derived flag if missing.
  -F            Flush flags. Delete files for false flags."

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -d) flagdir=$2; shift ;;
    -q) quiet=1 qopt=$1 ;;
    -w) makemissing=1 ;;
    -F) flushflags=1 ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ $# -gt 0 ] && [ "x$1" = x!  ] && { invert=1; shift; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

debug=${DEBUG:+1}
[ -n "$debug" ] || { [ -s "$flagdir/FLAG_DEBUG" ] && debug=1; }

if [ $# = 0 ]
then
  cd "$flagdir" || exit 1
  for flag in *
  do
    if flag "$flag"
    then
      if [ $quiet ]
      then  echo "$flag"
      else  echo "$flag	TRUE"
      fi
    else
      [ $quiet ] || echo "$flag	FALSE"
      if [ $flushflags ]
      then
        [ ! -f "$flag" ] || $trace rm0 $qopt "$flag"
      fi
    fi
  done
  exit 0
fi

flagname=$1
shift
case "$flagname" in
  '' | */* | . | .. )
    echo "$cmd: illegal flagname: $flagname" >&2
    badopts=1
    ;;
  *[a-z.]*)
    flagname=$( echo "$flagname" | tr '.[a-z]' '_[A-Z]' )
esac
if [ $# = 0 ]
then
  setstate=
else
  setstate=1
  value=$1
  shift
  case "$value" in
    [Tt][Rr][Uu][Ee]|1)
        newstate=1 ;;
    [Ff][Aa][Ll][Ss][Ee]|0)
        newstate= ;;
    *)  echo "$cmd: unsupported value: $value" >&2
        badopts=1
        ;;
  esac
  [ $invert ] && { echo "$cmd: can't use ! (invert) while setting flag" >&2
                   badopts=1
                 }
  [ $# = 0 ] || { echo "$cmd: extra arguments after value: $*" >&2
                  badopts=1
                }
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

flagfile=$flagdir/$flagname
[ $debug ] && echo "$0: flagfile=$flagfile" >&2

if [ $setstate ]
then
  if [ $newstate ]
  then
    # not ok for file to be missing
    [ $debug ] && echo "$0: $flagfile -> 1" >&2
    [ -d "$flagdir/." ] || needdir "$flagdir" || exit 1
    echo 1 >"$flagfile" || exit 1
  else
    # it is ok for the file to be missing
    [ $debug ] && echo "$0: $flagfile -> ''" >&2
    [ -d "$flagdir/." ] || needdir "$flagdir" || exit 0
    : >"$flagfile" || exit 0
  fi
  exit 0
fi

if [ -s "$flagfile" ]
then  [ $invert ] && exit 1
      exit 0
else  [ $makemissing ] && [ ! -f "$flagfile" ] && : >"$flagfile"
      [ $invert ] && exit 0
      exit 1
fi
