#!/bin/sh
#
# Pull from another checkout, merge its tip with ours even across a branch.
#   - Cameron Simpson <cs@zip.com.au> 08sep2014
#

set -ue

cmd=$( basename "$0" )
usage="Usage: $cmd [-m message] other-checkout"

badopts=

trace=
[ -t 2 ] && trace=set-x
msg=
hadmsg=

while [ $# -gt 0 ]
do
  case $1 in
    -m) msg=$2 hadmsg=1; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing other-checkout" >&2
  badopts=1
else
  ocheckout=$1
  shift
  if [ ! -d "$ocheckout/." ]
  then
    echo "$cmd: other-checkout not a directory: $ocheckout" >&2
    badopts=1
  fi
fi

if [ $# -gt 0 ]
then
  echo "$cmd: extra arguments after other-checkout: $*" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

branch=$( hg branch )
obranch=$( incd "$ocheckout" hg branch )
incd "$ocheckout" hg out | grep '^summary'
echo
echo "merging $obranch ==> $branch"

if [ -z "$hadmsg" ]
then
  if [ -t 0 -a -t 1 ]
  then
    msg=$( readline "merge description> " ) || exit 1
  else
    echo "$cmd: merge description is mandatory (may be an empty -m option)" >&2
    exit 2
  fi
fi

$trace hg fetch "$ocheckout"
if [ "x$branch" != "x$obranch" ]
then
  $trace hg merge "$obranch"
  comsg="merge $obranch ==> $branch"
  [ -z "$msg" ] || comsg="$comsg: $msg"
  $trace hg commit -m "$comsg"
fi
