#!/bin/sh -ue
#
# Test that a process exists (and may be signalled).
#	- Cameron Simpson <cs@zip.com.au> 28mar2005
#

: ${VARRUN:=$HOME/var/run}

cmd=$0
usage="Usage: $cmd [-v] [!] {pid|pidfile}
        -q      Quiet. Don't complain about missing pid file etc.
	-v	Verbose. Print pid if real.
	!	Test that the process does not exist.
        pidfile Path to a file containing a pid.
                A relative path will be looked for in $VARRUN (from \$VARRUN)."

badopts=

quiet=
verbose=
while [ $# -gt 0 ]
do
  case $1 in
    -q) quiet=1 ;;
    -v) verbose=1 ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

yes=0 no=1
if [ $# -gt 0 ] && [ "x$1" = "x!" ]
then  yes=1 no=0; shift
fi

if [ $# = 0 ]
then
  echo "$cmd: missing pid or pidfile" >&2
  badopts=1
else
  case "$1" in
    [0-9]|[0-9][0-9]|[0-9][0-9][0-9]|[0-9][0-9][0-9][0-9]|[0-9][0-9][0-9][0-9][0-9])
			pidfile= pid=$1 ;;
    /*|./*|../*)	pidfile=$1 ;;
    *)			pidfile=$VARRUN/$1 ;;
  esac
  shift

  if [ -n "$pidfile" ]
  then
    {
       [ -s "$pidfile" ] \
    && read pid etc <"$pidfile" \
    && [ -n "$pid" ]
    } || { [ $quiet ] || echo "$cmd: can't read pid from file \"$pidfile\"" >&2
           exit 1
         }
  fi
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

kill -0 "$pid" 2>/dev/null && { [ $verbose ] && echo "$pid"; exit $yes; }
exit $no
