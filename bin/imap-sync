#!/bin/sh
#
# On the fly offlineimap invoker.
#       - Cameron Simpson <cs@cskk.id.au> 06feb2012
#

set -ue

: ${TMPDIR:=/tmp}
: ${OFFLINEIMAP_META:=$HOME/.offlineimap}
: ${USER:=`id -un`}
: ${LOGDIR:=$HOME/var/log}

cmd=`basename "$0"`
usage="Usage: $cmd [-1] [-d debug] [-q] [-u ui] [-x] here there folders...
  here  A directory containing maildir folders.
  there An IMAP server reference of the form:
          [username[:password]@]hostname[:port][/prepath]"

badopts=

logdir=$LOGDIR/offlineimap
##ui=TTYUI
ui=basic
local_inbox=me
##ui=Blinkenlights
debug=
flags=
trace=

while [ $# -gt 0 ]
do
  case $1 in
    -d) debug=$2; shift ;;
    -1 | -q) flags="$flags $1" ;;
    -u) ui=$2; shift ;;
    -x) trace=set-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing here" >&2
  badopts=1
else
  here=$1
  shift
  [ -d "$here/." ] || { echo "$cmd: here: not a directory: $here" >&2
                        badopts=1
                      }
  here=`cd "$here" && pwd`
fi

if [ $# = 0 ]
then
  echo "$cmd: missing there" >&2
  badopts=1
else
  there=$1
  shift
fi

if [ $# = 0 ]
then
  echo "$cmd: missing folders" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -d "$logdir/." ] || set-x mkdir -p "$logdir"

tmppfx=$TMPDIR/$cmd.$$
trap 'rm -f "$tmppfx".*' 0
trap 'rm -f "$tmppfx".*; exit 1' 1 3 15

case "$there" in
  */*)  prepath=`expr "x$there" : 'x[^/]*/\(.*\)'`/
        there=`expr "x$there" : 'x\([^/]*\)/.*'`
        ;;
  *)    prepath= ;;
esac
case "$there" in
  *@*)  username=`expr "x$there" : 'x\(.*\)@.*'`
        there=`expr "x$there" : 'x.*@\(.*\)'`
        ;;
  *)    username=$USER ;;
esac
case "$username" in
  *:*)  password=`expr "x$username" : 'x[^:]*:\(.*\)'`
        username=`expr "x$username" : 'x\([^:]*\):.*'`
        pwfile=
        ;;
  *)    password= ;;
esac
case "$there" in
  *:[1-9]*)
        port=`expr "x$there" : 'x.*:\([1-9][0-9]*\)$'`
        there=`expr "x$there" : 'x\(.*\):[1-9][0-9]*$'`
        ;;
  *)    port=143 ;;
esac

case "$here" in
  $HOME/*)
    len=${#HOME}
    len=$((len+1))
    rep_here=${here:$len}
    ;;
  *)rep_here=$here
esac
rep_here=`printf '%s\n' "$rep_here" | tr -s / _`
rep_there=$username@$there:$port
account=$rep_here::$rep_there
folders=$(for f; do echo "$prepath$f"; done | tr '\012' , | sed 's/,$//')
##logfile=$logdir/$account-`date '+%Y%m%dT%H%M%S'`-$$
logfile=$logdir/$account

cfg=$tmppfx.cfg
pyfile=$tmppfx.py

cat <<X >"$cfg"
[general]
accounts = $account
metadata = $OFFLINEIMAP_META
ui = $ui
fsync = false
pythonfile = $pyfile

[Account $account]
localrepository = $rep_here
remoterepository = $rep_there
##presynchook = echo PRESYNC
##postynchook = echo POSTSYNC

[Repository $rep_here]
type = Maildir
localfolders = $here
nametrans = lambda f: here2there(f)
sep = /

[Repository $rep_there]
type = IMAP
nametrans = lambda f: there2here(f)
remotehost = $there
remoteuser = $username
remoteport = $port
##remotepassword = $password
remotepassfile = ~/private/passwd.$rep_there
folderfilter = lambda f: use_folder(f)
X

cat <<X >"$pyfile"
#!/usr/bin/python

import sys

prepath = '$prepath'
local_inbox = '$local_inbox'
folders = [ folder for folder in '$folders'.split(',') if folder ]

def use_folder(f):
  global folders
  useit = f in folders
  ##if 'auspc' in f or 'hg' in f:
  ##  print >>sys.stderr, "useit=%r, f=%r, folders=%r" % (useit, f, folders)
  return useit

def here2there(foldername):
  global prepath
  of = foldername
  foldername = prepath + foldername
  ##print >>sys.stderr, "here2there: %r -> %r" % (of, foldername)
  return foldername

def there2here(foldername):
  global prepath
  of = foldername
  if foldername == 'INBOX':
    foldername = local_inbox
  elif foldername.startswith(prepath):
    foldername = foldername[len(prepath):]
  else:
    if use_folder(foldername):
      print >>sys.stderr, "there2here: unrecognised foldername %r, unchanged" % (foldername,)
  ##print >>sys.stderr, "there2here: %r -> %r" % (of, foldername)
  return foldername
X

set -- $HOME/bin-local/offlineimap $flags -c "$cfg" -a "$account" -d "$debug" -l "$logfile" ##--info

echo >>"$logfile"
echo >>"$logfile"
date >>"$logfile"
echo "$*" >>"$logfile"
$trace "$@"
xit=$?
echo >>"$logfile"
echo "Config:" >>"$logfile"
cat "$cfg" >>"$logfile"
echo >>"$logfile"
echo "Python:" >>"$logfile"
cat "$pyfile" >>"$logfile"

exit $xit
