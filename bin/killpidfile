#!/bin/sh -u
#
# Kill the pid kept in the supplied pid files.
#	- Cameron Simpson <cs@cskk.id.au> 15jan2005
#

: ${VARRUN:=$HOME/var/run}

trace=set-x
sigopt=-TERM	# use USR1 if aiming at fetchmail daemon
dounlink=
wopt=
Wopt=

cmd=$0
usage="Usage: $cmd [-d pidfiledir] [-u] [-w] [-W seconds] [-signal] pidfiles...
	-d	Default directory for pidfiles. Default from \$VARRUN or \$HOME/var/run.
	-u	Unlink pidfiles if used.
	-w	Wait for processes to exit.
	-W	Wait seconds for processes to exit, then send SIGKILL.
	-signal	Initial signal to send. Passed to kill(1)."

badopts=

while [ $# -gt 0 ]
do
  case "$1" in
    -d)	VARRUN=$2; shift ;;
    -u)	dounlink=1 ;;
    -w)	wopt=$1 ;;
    -W)	Wopt="-W $2"; shift ;;
    -[0-9]* | -[A-Z]* )
	sigopt=$1
	;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
	badopts=1
	;;
    *)	break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  # nothing named? list choices
  cd "$VARRUN" || exit 1
  set -- *
  [ $# = 1 -a "x$1" = 'x*' ] && [ ! -f "$1" ] && exit 0
  for pidfile in *
  do
    exec 3<&0
    grep '^[0-9][0-9]*$' <"$pidfile" \
    | \
    { ok=1
      while read pid
      do  if kill -0 "$pid" 2>/dev/null
          then
            echo "$pidfile	$pid" `ps -o args -p "$pid" 2>/dev/null | sed 1d`
          else
            echo "$pidfile	$pid MISSING"
            ok=
          fi
      done
    }
  done
  exit 0
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

pids=
for pidfile
do
  case "$pidfile" in
    ./* | ../* | /* ) ;;
    *) pidfile=$VARRUN/$pidfile ;;
  esac
  npids=`cat "$pidfile"`
  if [ -n "$npids" ]
  then  pids="$pids $npids"
  else  echo "$cmd: $pidfile: no pids!" >&2
  fi
  [ $dounlink ] && rm "$pidfile"
done

if [ -z "$pids" ]
then
  echo "$cmd: nothing to kill!" >&2
  exit 1
fi

exec killpids $wopt $Wopt $sigopt -- $pids
