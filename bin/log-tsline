#!/bin/sh -ue
#
# Insert a timesheet line into my timesheet file.
# Used as a backend to buglog and dlog.
#       - Cameron Simpson <cs@cskk.id.au> 14mar2008
#

set -ue

: ${LOGDIR:=$HOME/var/log}
: ${TSDIR:=$HOME/var/ts}
# template format strings, all passed to "date +..." for expansion
: ${TSFORMAT_BASENAME:='%Y-%m-%d'}          # filenames
: ${TSFORMAT_DAYFOOTER:=}                   # per day footer
: ${TSFORMAT_DAYHEADER:='\n%Y-%m-%d %A'}    # per day header
: ${TSFORMAT_DAYINDENT:='  %H:%M '}         # per line prefix
: ${TSFORMAT_HEADER:='Timesheet for the week starting %A %Y-%m-%d\n\n'}
: ${TSFORMAT_FOOTER:='
Totals:
   0.0  hours         @   $0 $  000.00
  GST                        $   00.00
  Expenses                   $    0.00
  Total                      $  000.00\n'}

when=now
cfg=
tsdir=
iftsdir=

cmd=`basename "$0"`
usage="Usage: $cmd [-?] [-c config] [-d when] [-T tsdir] category log-line...
  -?    If the target timesheet directory is missing, just exit with a
        non-zero status. Normally a usage error is emitted for categories
        with no timesheet directory.
  -c config
        Specify the timesheet configuration file.
        The default is CATEGORY.conf.sh in the timesheet directory.
  -d when
        Specify the date for this log message.
        Default is today.
  -T tsdir
        Specify the timesheet directory.
        Default: $TSDIR/category"

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -\?)iftsdir=1 ;;
    -c) cfg=$2; shift ;;
    -d) when=$2; shift ;;
    -T) tsdir=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing category" >&2
  badopts=1
  category=CATEGORY
else
  category=$1
  shift
fi

##[ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2; badopts=1; }
[ $# -gt 0 ] || { echo "$cmd: missing log-line" >&2; badopts=1; }

lccat=$( printf "%s\n" "$category" | tr '[A-Z]' '[a-z]' )
uccat=$( printf "%s\n" "$category" | tr '[a-z]' '[A-Z]' )
[ -n "$tsdir" ] || tsdir=$TSDIR/$lccat
if [ ! -d "$tsdir/." ]
then
  if [ -z "$iftsdir" ]
  then
    echo "$cmd: missing timesheet dir: $tsdir" >&2
    badopts=1
  fi
else
  [ -n "$cfg" ] || cfg=$tsdir/$uccat.conf.sh
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ ! -d "$tsdir/." ]
then
  [ $iftsdir ]
  exit $?
fi

[ ! -s "$cfg" ] || . "$cfg"

day=$( monday "$when" )
tsfile=$tsdir/$( date -d "$day" "+$TSFORMAT_BASENAME" )

if [ ! -s "$tsfile" ]
then
  {
    ymd=$( date -d "$day" '+%Y-%m-%d' )
    date2printf=$( date -d "$ymd" "+$TSFORMAT_HEADER" )
    printf "$date2printf"
    for n in 0 1 2 3 4 5 6
    do
      ymd=$( date -d "$day" '+%Y-%m-%d' )
      wday=$( date -d "$day" '+%A' )
      date2printf=$( date -d "$ymd" "+$TSFORMAT_DAYHEADER" )
      printf "$date2printf"
      [ -z "$TSFORMAT_DAYFOOTER" ] || {
        date2printf=$( date -d "$ymd" "+$TSFORMAT_DAYFOOTER" )
        printf "$date2printf"
      }
      echo
      day=$( date -d "$ymd tomorrow" )
    done
    ymd=$( date -d "$day" '+%Y-%m-%d' )
    date2printf=$( date -d "$ymd" "+$TSFORMAT_FOOTER" )
    printf "$date2printf"
  } >>"$tsfile"
fi

# addline tsfile when line...
addline()
{ ##set -x
  _al_tsfile=$1
  _al_when=$2
  shift; shift
  _al_date2printf=$( date -d "$_al_when" "+$TSFORMAT_DAYHEADER" )
  _al_dayheader=$( printf "$_al_date2printf" | sed -n '/^$/!{p;q;}' )
  _al_date2printf=$( date -d "$_al_when" "+$TSFORMAT_DAYINDENT" )
  _al_line=$( printf "$_al_date2printf%s" "$*" | tr '\012' ';' )
  _al_sedf="/^$_al_dayheader\$/{
  :inday
  /^$/!{
    n
    b inday
  }
  i\\
$_al_line
}
"
  bsed -s "$_al_sedf" "$_al_tsfile"
}

addline "$tsfile" "$when" "$*"
