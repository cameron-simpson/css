#!/bin/sh
#
# Run command. Send standard error by email if it fails.
#       - Cameron Simpson <cs@cskk.id.au> 13sep2009
#

set -ue

: ${TMPDIR:=/tmp}

cmd=`basename "$0"`
usage="Usage: $cmd [-x] [-s subject] [-S status] addresses command [args...]
  -x    Trace execution of command.
  -s    Specify subject line for email. Default:
          FAIL: command args...
  -S status
        Specify status file.
        In this mode, a successful run creates a status file.
        An unsuccessful run removes the file.
        Only send email on an error run after a successful run
        i.e. on a state change to error status."

subj=
trace=${DEBUG:+set-x}
statusfile=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -S) statusfile=$2; shift ;;
    -s) subj=$2; shift ;;
    -x) trace=set-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing addresses" >&2
  badopts=
else
  addrs=$1
  shift
fi

if [ $# = 0 ]
then
  echo "$cmd: missing command" >&2
  badopts=1
else
  [ -n "$subj" ] || subj="FAIL: $*"
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

tmp=$TMPDIR/$cmd.err.$$
trap 'rm -f "$tmp"' 0 1 2 3 15

xit=0
$trace "$@" 2>"$tmp" || xit=$?
cat "$tmp" >&2

if [ $xit = 0 ]
then
  [ -n "$statusfile" ] && >>"$statusfile"
else
  if [ -n "$statusfile" ]
  then
    if [ -f "$statusfile" ]
    then
      rm -f -- "$statusfile"
      $trace mailsubj -s "$subj" "$addrs" <"$tmp"
    fi
  else
    $trace mailsubj -s "$subj" "$addrs" <"$tmp"
  fi
fi

exit $xit
