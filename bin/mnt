#!/bin/sh
#
# Mount a filesystem, print the mountpoint.
# - Cameron Simpson <cs@cskk.id.au> 22jul2020
#

set -ue

: ${MNT_BASE:=$HOME/mnt}

umount=

cmd=$(basename "$0")
usage="Usage: $cmd [-u] mount-path
  -u    Unmount the mount-path.
  mount-path
        ssh://host/path
          Note that the remote path commences _after_ the slash
          separating the host from the path, so an absolute path will
          have 2 slashes after the host.
        /mount/path
          Infer an ssh://host/path from the real path of /mount/path
          and mount that."

badopts=

[ $# -gt 0 ] && [ "x$1" = x-u ] && { umount=1; shift; }

if [ $# = 0 ]
then
  echo "$cmd: missing mount-path" >&2
  badopts=1
else
  mount_path=$1
  shift
fi

[ $# = 0 ] || {
  echo "$cmd: extra arguments: $*" >&2
  badopts=1
}

[ $badopts ] && { echo "$usage" >&2; exit 2; }

case "$mount_path" in
  /*)       mount_real_path=$( cd "$mount_path" && /bin/pwd -P )
            case "$mount_real_path" in
              "$MNT_BASE"/*/*)
                set -- $( echo "$mount_real_path" | sed "s|^$MNT_BASE/\([^/]*\)/\([^/]*\).*|\1 \2|; s|__|/|g" )
                new_mount_path=ssh://$1/$2
                echo "$cmd: $mount_path: translate -> $new_mount_path"
                mount_path=$new_mount_path
                ;;
              *)echo "$cmd: $mount_path: cannot translate $mount_real_path into an ssh://host/path" >&2
                exit 1
                ;;
            esac
            ;;
esac

case "$mount_path" in
  *://*)    type=$( expr "x$mount_path" : 'x\([^:/]*\)://[^/]*/.*' )
            host=$( expr "x$mount_path" : 'x[^:/]*://\([^/]*\)/.*' )
            path=$( expr "x$mount_path" : 'x[^:/]*://[^/]*/\(.*\)' )
            ;;
  *)        echo "$cmd: unsupported mount_path:: $mount_path" >&2
            exit 2
            ;;
esac

pathbase=$( printf '%s\n' "$path" | sed 's|//$||; s|//*|__|g; s/\./_/g' )
mnt_point=$MNT_BASE/$host/$pathbase

if [ $umount ]
then
  set -x
  umount "$mnt_point"
else
  [ -d "$MNT_BASE/$host" ] || set-x mkdir "$MNT_BASE/$host"
  [ -d "$mnt_point" ] || set-x mkdir "$mnt_point"
  set -x
  (
    set -ue
    case "$type" in
      ssh | sshfs )
        set -x
        tm "MNT_${host}_${pathbase}" set-x sshfs -f -o reconnect -- "$host:$path" "$mnt_point"
        ;;
      *)echo "$cmd: $mount_point: unsupported type: $type" >&2
        exit 1
        ;;
    esac
  )
fi
