#!/usr/bin/env python3
#

''' Extract the images from a Mobi formatted ebook into a CBZ file
    on the premise that the ebook is a comic.
'''

from getopt import GetoptError
from glob import glob
import os
from os.path import basename, exists as existspath, join as joinpath, splitext
import shutil
import sys
from zipfile import ZipFile, ZIP_STORED

from cs.cmdutils import BaseCommand
from cs.context import stackattrs
from cs.logutils import info, error
from cs.pfx import pfx_call

import mobi

class Mobi2CBZCommand(BaseCommand):
  ''' Command line implemenetation for `mobi2cbz`.
  '''

  USAGE_FORMAT = r'''Usage: {cmd} mobipath
    Unpack a MOBI file and construct a CBZ file.
    Prints the path of the CBZ file to the output.'''

  def main(self, argv):
    ''' `mobi2cbz` command line implementation.
    '''
    if not argv:
      raise GetoptError("missing mobipath")
    mobipath = argv.pop(0)
    mobibase, mobiext = splitext(basename(mobipath))
    cbzpath = mobibase + '.cbz'
    if argv:
      raise GetoptError("extra arguments after mobipath: %r" % (argv,))
    if not existspath(mobipath):
      raise GetoptError("mobipath does not exist: %r" % (mobipath,))
    if existspath(cbzpath):
      raise GetoptError("CBZ already exists: %r" % (cbzpath,))
    tmpdirpath = None
    try:
      info("extract %s" % (mobipath,))
      # divert stdout because the mobi library sends some warnings etc to stdout
      with stackattrs(sys, stdout=sys.stderr):
        tmpdirpath, filepath = mobi.extract(mobipath)
      imagepaths = sorted(glob(joinpath(tmpdirpath, 'mobi8/OEBPS/Images/*.*')))
      info("write %s", cbzpath)
      try:
        with pfx_call(ZipFile, cbzpath, 'x', compression=ZIP_STORED) as cbz:
          for imagepath in imagepaths:
            pfx_call(cbz.write, imagepath, arcname=basename(imagepath))
      except FileExistsError as e:
        error("CBZ already eixsts: %r: %s", cbzpath, e)
        return 1
      except Exception:
        if existspath(cbzpath):
          pfx_call(os.unlink, cbzpath)
    finally:
      if tmpdirpath is not None:
        info("remove %s", tmpdirpath)
        pfx_call(shutil.rmtree, tmpdirpath)
    print(cbzpath)

sys.exit(Mobi2CBZCommand(sys.argv).run())
