#!/bin/sh
#
# Retag MP3 files based on their pathname. Requires the id3ed command.
#   - Cameron Simpson <cs@cskk.id.au> 31mar2016
#
# This is used to repair mistagged music trees by rearranging the
# files to their desired names and then running this script to repair
# the tags. We maintain our music collections outside tools like
# iTunes etc and manage them independently, then import to proprietry
# tools later.
#
# The default tree layout is:
#
#  artist/album/nn songname.mp3
#
# where nn is the track number.
#

set -ue

: ${MP3_RETAG_OPTS:='-/ artist--'}

cmd=$( basename "$0" )
usage="Usage: $cmd [-/ {artist{sep}|{sep}artist}] [-T re_artist re_songname] mp3files...
  -/ artist{sep}
  -/ {sep}artist
        Specify that the artist preceeds or follows the supplied separator
        in the track name. Example:
          -/ --artist'
        for tracks with filenames like:
          07 Song Name -- Artist Name.mp3
  -n    No action. Recite proposed tagging actions.
  -T re_artist re_songname
        Specify expr-style regexps to extract the artist and songname from
        the track basename after stripping the leading track number and
        trailing .mp3."

badopts=

trace=set-x
track_re_artist=
track_re_songname=

set -- $MP3_RETAG_OPTS ${1+"$@"}

while [ $# -gt 0 ]
do
  case $1 in
    -/) sep=$2; shift
        case $sep in
          artist?*)
            sep=$( expr "x$sep" : 'xartist\(.*\)' )
            track_re_artist=' *\(.*[^ ]\) *'$sep' *.*[^ ] *'
            track_re_songname=' *.*[^ ] *'$sep' *\(.*[^ ]\) *'
            ;;
          *?artist)
            sep=$( expr "x$sep" : 'x\(.*\)artist' )
            track_re_songname=' *\(.*[^ ]\) *'$sep' *.*[^ ] *'
            track_re_artist=' *.*[^ ] *'$sep' *\(.*[^ ]\) *'
            ;;
          *)echo "$cmd: -/: invalid artist{sep} or {sep}artist argument: $sep" >&2
            badopts=1
            ;;
        esac
        ;;
    -n) trace=echo ;;
    -T) track_re_artist=$2 track_re_songname=$3; shift; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ $# -gt 0 ] || { echo "$cmd: missing mp3files" >&2; badopts=1; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

for mp3file
do
  ok=1
  album=
  artist=
  tracknum=
  songname=
  case "$mp3file" in
    *.mp3)
      basename=$( basename "$mp3file" )
      dirname=$(dirname "$mp3file" )
      dirbase=$(basename "$dirname")
      dirname2=$(dirname "$dirname")
      dirbase2=$(basename "$dirname2")
      case "$dirbase2" in
        / | . | .. | [Vv]arious | [Cc]ompilation ) ;;
        *) artist=$dirbase2 ;;
      esac
      case "$dirbase" in
        / | . | .. ) ;;
        *) album=$dirbase ;;
      esac
      case "$basename" in
        [0-9]*)
          tracknum=$( expr "x$basename" : 'x0*\([1-9][0-9]*\).*' )
          trackname=$( expr "x$basename" : 'x0*[1-9][0-9]* *-* *\(.*\).mp3' )
          ;;
        *)trackname=$( expr "x$basename" : 'x\(.*\).mp3' )
          ;;
      esac
      songname=$trackname
      oartist=$artist
      [ -z "$track_re_artist" ] || artist=$( expr "x$trackname" : "x$track_re_artist" ) || artist=$oartist
      [ -z "$track_re_songname" ] || songname=$( expr "x$trackname" : "x$track_re_songname" ) || songname=$trackname
      ;;
    *)echo "$cmd: not an MP3 file: $mp3file" >&2
      ok=
      ;;
  esac
  if [ $ok ]
  then
    ( set -- id3ed -q -q
      [ -n "$artist"   ] && set -- "$@" -n "$artist"
      [ -n "$album"    ] && set -- "$@" -a "$album"
      [ -n "$tracknum" ] && set -- "$@" -k "$tracknum"
      [ -n "$songname" ] && set -- "$@" -s "$songname"
      $trace "$@" "$mp3file"
    ) \
    || xit=$?
  else
    xit=1
  fi
done

exit $xit
