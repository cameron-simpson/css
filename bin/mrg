#!/usr/bin/env python3
#
# Merge files into a directory.
# - Cameron Simpson <cs@cskk.id.au>
#

''' Merge files into a directory. '''

from dataclasses import dataclass
from getopt import GetoptError
from os.path import basename, isfile as isfilepath, join as joinpath
import sys

from cs.cmdutils import BaseCommand, popopts
from cs.hashindex import HASHNAME_DEFAULT, merge
from cs.logutils import warning
from cs.pfx import Pfx

from cs.debug import trace

def main(argv=None):
  ''' CLI for the `mrg` command.
  '''
  return MrgCommand(argv).run()

class MrgCommand(BaseCommand):
  ''' The `mrg` command line implementation.
  '''

  @dataclass
  class Options(BaseCommand.Options):
    ''' Options for `MrgCommand`.
    '''
    hashname: str = HASHNAME_DEFAULT

  @popopts
  def main(self, argv):
    ''' Usage: {cmd} targetdir paths...
          Merge files from paths into the target directory.
    '''
    options = self.options
    doit = options.doit
    hashname = options.hashname
    if not argv:
      raise GetoptError("missing targetdir")
    targetpath = argv.pop(0)
    if not argv:
      raise GetoptError("missing paths")
    xit = 0
    for path in argv:
      with Pfx(path):
        if not isfilepath(path):
          warning("not a regular file")
          xit = 1
          continue
      target = joinpath(targetpath, basename(path))
      with Pfx("-> %s", target):
        try:
          merge(path, target, hashname=hashname, move_mode=True, doit=doit)
        except FileExistsError as e:
          warning("%s", e)
          xit = 1
    return xit

if __name__ == '__main__':
  sys.exit(main(sys.argv))
