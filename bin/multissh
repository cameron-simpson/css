#!/bin/sh -u
#
# Ssh to all systems at once and do something.
#	- Cameron Simpson <cs@cskk.id.au> 21feb2003
#

delay=
userpfx=
hostspec=
command=
sshopts=
trace=
timeout=10	# timeout before giving up on authentication

cmd=`basename "$0"`
usage="Usage: $cmd [options...] command...
	-1, -2, -v	Passed to ssh.
	-n		No action; recite actions.
	-d delay	Delay this many seconds between ssh invocations.
			Default: no delay.
	-h hostspec	Specify hosts: host, @netgroup and !host, !@netgroup.
        -n              No action. Recite actions to stderr.
        -q              Do it, no tracing.
	-x		Do it, trace execution.
	-t timeout	Specify timeout before giving up on ssh authentication.
			Default: $timeout
	-u asuser	Specify the user as which to connect to each host.
	command		As with ssh. specify the command to run on each host."

badopts=
while [ $# -gt 0 ]
do
  case $1 in
    -[12v]) sshopts="$sshopts $1" ;;
    -d)	delay=$2; shift ;;
    -h)	hostspec="$hostspec $2"; shift ;;
    -q) trace= ;;
    -u)	userpfx=$2@; shift ;;
    -n)	trace=eecho ;;
    -t)	timeout=$2; shift ;;
    -x)	trace=set-x ;;
    --)	shift; break ;;
    -?*) echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *' '*)
	break ;;
    [a-zA-Z]*=*)
	sshopts="$sshopts $1"
	;;
    *)	break ;;
  esac
  shift
done

[ $# = 0 ] && { echo "$cmd: missing command" >&2; badopts=1; }

[ -n "$hostspec" ] || { echo "$cmd: missing hostspec" >&2; badopts=1; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

for h in `ngexpand $hostspec`
do
  pfx "$userpfx$h" \
    $trace \
      timeout -- "$timeout" \
      sshb -f StrictHostKeyChecking=no $sshopts "$userpfx$h" "$*" </dev/null &
  if [ -n "$delay" ] && [ "$delay" -gt 0 ]
  then  $trace sleep "$delay"
  else  wait
  fi
done

wait
