#!/bin/sh
#
# Set up ssh authentication.
#	- Cameron Simpson <cs@cskk.id.au>
#
# Attempt to latch onto existing agent from other session.
#	- Cameron Simpson <cs@cskk.id.au> 22aug2000
#

set -ue

usage="Usage: $0 [-f] [-n] [command [args...]]
	-f	Flush - ignore any current agent.
	-n	Test only - don't execute command."

trace=${DEBUG:+set-x}
testonly=
flush=

badopts=
while [ $# -gt 0 ]
do
  case $1 in
    -f)	flush=1 ;;
    -n)	testonly=1 ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)	break ;;
  esac
  shift
done

if [ $# = 0 ];	then shell=${SHELL-/bin/sh}
		else shell=$1; shift
fi

[ $badopts ] && { echo "$usage" >&2
		  if [ $testonly ]
		  then
		      exit 2
		  else
		      exec $trace "$shell" ${1+"$@"}
		  fi
		}

[ $flush ] && unset SSH_AUTH_SOCK SSH_AGENT_PID SSH_AUTHENTICATION_IGNORE

v=`$trace get-ssh-agent`

if [ -n "$SSH_AUTHENTICATION_IGNORE" ]
then  :	loop protection
else
  if $trace ssh-add -l >/dev/null 2>&1
  then  : we have a socket available
  else
    if [ -s "$stashed" -a -r "$stashed" ]
    then
      . "$stashed"
    fi
    if [ -n "$SSH_AUTH_SOCK" ] \
    && exists "$SSH_AUTH_SOCK" \
    && $trace ssh-add -l >/dev/null 2>&1
    then
      : we have an usable inherited socket available
    else
      # no usable inherited socket available
      [ $testonly ] && exit 0	# true ==> we need it

      # prevent loops
      SSH_AUTHENTICATION_IGNORE=1; export SSH_AUTHENTICATION_IGNORE

      [ -t 1 ] && echo "starting ssh-agent ..."
      eval `$trace ssh-agent -s`
      $trace rm -f "$stashed"
    fi
  fi
fi

[ $testonly ] && exit 1		# false ==> we don't need it

[ -s "$stashed" ] \
|| $trace not ssh-add -l >/dev/null \
|| $trace stash-ssh-agent "$stashed"

exec $trace "$shell" ${1+"$@"}
