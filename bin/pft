#!/bin/sh
#
# pft - convenience wrapper for "pfctl(8) -t".
#       - Cameron Simpson <cs@cskk.id.au> 24may2014
#

set -ue

: ${PFT_EXPORT:=$HOME/var/pf/tables}

trace=
[ -t 2 ] && trace=set-x

cmd=`basename "$0"`
usage="Usage:
  $cmd [-a anchor] [op [args...]]
Operations:
  $cmd cat table...
  $cmd export [-d export_base] [table...]
  $cmd import [-d export_base] [-m {add|replace}] table...
  $cmd [ls]     List tables."

badopts=

op=
anchor=

while [ $# -gt 0 ]
do
  case $1 in
    -a) anchor=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)  break ;;
  esac
  shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

# no op: default to "ls"
[ $# = 0 ] && set -- ls
op=$1
shift

_pft()
{ $trace env "PFT_EXPORT=$PFT_EXPORT" "$0" -a "$anchor" ${1+"$@"}
}

case "$op" in
  cat)
    for t
    do
      $trace pfctl -a "$anchor" -t "$t" -T show
    done
    ;;
  export)
    export_dir=$PFT_EXPORT/$anchor
    while [ $# -gt 0 ]
    do
      case $1 in
        -d)     export_dir=$2; shift ;;
        --)     shift; break ;;
        -?*)    echo "$cmd: $op: unrecognised option: $1" >&2
                badopts=1
                ;;
        *)      break ;;
      esac
      shift
    done
    [ $badopts ] && { echo "$usage" >&2; exit 2; }
    [ $# -gt 0 ] || set -- $( _pft ls )
    [ -d "$export_dir/." ] || $trace mkdir -p -- "$export_dir"
    for t
    do
      tfile=$export_dir/$t.txt
      _pft cat "$t" >"$tfile"
    done
    ;;
  import)
    mode=add    # vs "replace"
    export_dir=$PFT_EXPORT/$anchor
    while [ $# -gt 0 ]
    do
      case $1 in
        -d)     export_dir=$2; shift ;;
        -m)     mode=$2; shift
                case "$mode" in
                  add|replace) ;;
                  *)  echo "$cmd: $op: -m: bad mode \"$mode\", expected \"add\" or \"replace\"" >&2
                      badopts=1
                      ;;
                esac
                ;;
        --)     shift; break ;;
        -?*)    echo "$cmd: $op: unrecognised option: $1" >&2
                badopts=1
                ;;
        *)      break ;;
      esac
      shift
    done
    [ $# = 0 ] && { echo "$cmd: $op: missing table names" >&2; badopts=1; }
    [ $badopts ] && { echo "$usage" >&2; exit 2; }
    for t
    do
      tfile=$export_dir/$t.txt
      [ -f "$tfile" ] || { echo "$cmd: $op: missing import file: $tfile" >&2; exit 1; }
      $trace pfctl -a "$anchor" -t "$t" -T add $(grep '^ *[^# ]' "$tfile")
    done
    ;;
  ls)
    if [ $# -gt 0 ]
    then
      echo "$cmd: $op: extra arguments: $*" >&2
      echo "$usage" >&2
      exit 2
    fi
    exec $trace pfctl -a "$anchor" -sT
    ;;
  *)echo "$cmd: unrecognised op: $op" >&2
    echo "$usage" >&2
    exit 2
    ;;
esac
