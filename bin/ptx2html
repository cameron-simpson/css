#!/usr/bin/perl -w
#
# Read permuted index, emit HTML table of citations.
# The permuted index should be like that produced from htmlptx:
#	file	left-context	keyword	right-context	line-number
# tab separated.
#	- Cameron Simpson <cs@cskk.id.au> 01dec2004
#

use strict qw(vars);

use cs::Hier;
use cs::HTML;

my %byfile=();

while (<>)
{ chomp;
  my($file,$left,$key,$right,$lineno)=split(/\t/);
  $byfile{$file}={} if ! exists $byfile{$file};
  my $F = $byfile{$file};

  $F->{HITCOUNT}++;
  push(@{$F->{HITS}},[$file,$left,$key,$right,$lineno]);
}

my @files = reverse sort { $byfile{$a}->{HITCOUNT} <=> $byfile{$b}->{HITCOUNT} } keys %byfile;

exit 0 if ! @files;

print "Files found:\n";
for my $file (@files)
{
  print cs::HTML::tok2a([A,{HREF=>"#$file"},$file]," ($byfile{$file}->{HITCOUNT})");
  print "", ($file eq $files[$#files] ? '.' : ','), "\n";
}
print "<HR>\n";

my @rows=();
for my $file (@files)
{
  if (@rows) { push(@rows,[TR,[TD,{COLSPAN=>3},[HR]]]); }

  my $F = $byfile{$file};
  my @hits = @{$F->{HITS}};

  my $first=1;
  for my $hit (sort { $a->[4] <=> $b->[4] } @hits)
  {
    my @td=();
    if ($first)
    { push(@td,[TD,{ALIGN=>LEFT, VALIGN=>TOP, ROWSPAN=>scalar(@hits)},
		   [A,{NAME=>$hit->[0], HREF=>$hit->[0]},$hit->[0]]]);
    }
    push(@td,[TD,{ALIGN=>RIGHT},$hit->[1]],
	     [TD,{ALIGN=>LEFT},[A,{HREF=>"$hit->[0]#$hit->[4]"},$hit->[2]]," ",$hit->[3]],"\n");

    ##my $tr = [TR,@td];
    ##warn "row=".cs::Hier::h2a($tr,1);
    push(@rows,[TR,@td]);
    $first=0;
  }
}

##warn "ALL ROWS:\n", cs::Hier::h2a(\@rows,1);

print cs::HTML::tok2a([TABLE,@rows],"\n");
