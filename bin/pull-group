#!/bin/sh -ue
#
# Pull named groups and members from remote /etc/groups file.
#       - Cameron Simpson <cs@zip.com.au> 12may2008
#

. /opt/css/env.sh

: ${TMPDIR:=/tmp}

cmd=`basename "$0"`
usage="Usage: $cmd [-x] [user]@host group..."

trace=eecho
lgroup=/etc/group
ssh=ssho

remote=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -x) trace=set-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing user@host" >&2
  badopts=1
else
  remote=$1
  shift
  case "$remote" in
    @?*) remote=`expr "x$remote" : 'x.\(.*\)'` ;;
    *@?*);;
    *)  echo "$cmd: invalue user@host: $remote" >&2
        badopts=1
        ;;
  esac
fi

if [ $# = 0 ]
then
  echo "$cmd: missing groups" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

getgid()
{ awk -F: -v "group=$1" '$1 == group { print $3 }' "$2"
}
getmembers()
{ awk -F: -v "group=$1" '$1 == group { print $4 }' "$2" | tr , ' '
}
rcmd()
{ _rcmd_qargs=`shqstr "$@"`
  set-x $ssh "$remote" "$_rcmd_qargs"
}

rgroup=$TMPDIR/$cmd.$$
trap 'rm -f "$rgroup"' 0
trap 'rm -f "$rgroup"; exit 1' 1 2 13 15
rcmd cat /etc/group >"$rgroup"

modgroups=
for grouparg
do
  case $grouparg in
    [1-9]*-[1-9]*)
      lrgid=`expr "x$grouparg" : 'x\([1-9][0-9]*\).*'`
      hrgid=`expr "x$grouparg" : 'x[1-9][0-9]*-\([1-9][0-9]*\).*'`
      awkprg="\$3 >= $lrgid && \$3 <= $hrgid { print \$1 }"
      groups=`rcmd awk -F: "$awkprg" /etc/group`
      ;;
    [1-9]*)
      lrgid=`expr "x$grouparg" : 'x\([1-9][0-9]*\).*'`
      awkprg="\$3 == $lrgid { print \$1 }"
      groups=`rcmd awk -F: "$awkprg" /etc/group`
      ;;
    *)  
      groups=$grouparg
      ;;
  esac

  for group in $groups
  do
    didmod=
    lgid=`getgid "$group" "$lgroup"`
    rgid=`getgid "$group" "$rgroup"`
    if [ -z "$rgid" ]
    then
      echo "$cmd: $group: no remote group" >&2
      exit 1
    fi
    if [ -z "$lgid" ]
    then
      $trace groupadd -g "$rgid" "$group"
      didmod=1
    else
      if [ "x$lgid" != "x$rgid" ]
      then
        echo "$cmd: $group: warning: local gid ($lgid) != remote ($rgid)" >&2
      fi
    fi

    lmembers=`getmembers "$group" "$lgroup"`
    rmembers=`getmembers "$group" "$rgroup"`
    for member in $rmembers
    do
      case " $lmembers " in
        *" $member "*)
          ;;
        *)$trace bsed -s "/^$group:/{ /:\$/!s/\$/,/; s/\$/$member/; }" "$lgroup"
          didmod=1
          ;;
      esac
    done

    [ $didmod ] && modgroups="$modgroups $group"
  done
done

for group in $modgroups
do
  grep "^$group:" "$lgroup"
done
