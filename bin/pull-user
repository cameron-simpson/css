#!/bin/sh -ue
#
# Pull named users from remote /etc/passwd file.
#       - Cameron Simpson <cs@zip.com.au> 12may2008
#

. ${OPTCSS:-/opt/css}/env.sh
: ${TMPDIR:=/tmp}

cmd=`basename "$0"`
usage="Usage: $cmd [-g /path/to/group] [-x] {/path/to/passwd|[user]@host} user..."

trace=eecho
xflag=
lpasswd=/etc/passwd
ssh=ssho
shell=/bin/false

remote=
rpasswd=
rgroup=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -g) rgroup=$2; shift ;;
    -x) trace=set-x xflag=-x ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing user@host" >&2
  badopts=1
else
  remote=$1
  shift
  case "$remote" in
    /*) rpasswd=$remote
        if [ ! -s "$rpasswd" ]
        then
          echo "$cmd: $rpasswd: need non-empty file" >&2
          badopts=1
        else
          [ -n "$rgroup" ] || rgroup=`dirname "$rpasswd"`/group
        fi
        ;;
    @?*)if whoami=`who am i | awk '{print $1}'` && [ -n "$whoami" ]
        then
          remote=$whoami$remote
        else
          echo "$cmd: $remote: can't infer user from \`who am i\`" >&2
          badopts=1
        fi
        ;;
    *@?*);;
    *)  echo "$cmd: invalue user@host: $remote" >&2
        badopts=1
        ;;
  esac
fi

if [ -n "$rgroup" ]
then
  if [ ! -s "$rgroup" ]
  then
    echo "$cmd: $rgroup: need non-empty file" >&2
    badopts=1
  fi
else
  rgroup=$remote
fi

if [ $# = 0 ]
then
  echo "$cmd: missing users" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

getuid()
{ awk -F: -v "user=$1" '$1 == user { print $3 }' "$2"
}

if [ -z "$rpasswd" ]
then
  rpasswd=$TMPDIR/$cmd.$$
  trap 'rm -f "$rpasswd"' 0
  trap 'rm -f "$rpasswd"; exit 1' 1 2 13 15
  $ssh "$remote" cat /etc/passwd >"$rpasswd"
fi

modusers=
for user
do
  luid=`getuid "$user" "$lpasswd"`
  ruid=`getuid "$user" "$rpasswd"`
  if [ -z "$ruid" ]
  then
    echo "$cmd: $user: no remote user" >&2
    exit 1
  fi
  if [ -z "$luid" ]
  then
    $trace pull-group $xflag "$rgroup" "$user"
    pfx "$user" $trace adduser -s "$shell" -u "$ruid" -g "$user" "$user"
    modusers="$modusers $user"
  else
    if [ "x$luid" != "x$ruid" ]
    then
      echo "$cmd: $user: warning: local uid ($luid) != remote ($ruid)" >&2
    fi
  fi
done

for user in $modusers
do
  grep "^$user:" "$lpasswd"
done
