#!/bin/sh
#
# Ensure we have an ssh agent, setting up a per-host ssh-agent in daemon mode if needed.
# Emit $SSH_AUTH_SOCK to stdout.
#
# I keep a shell function around to access this:
#
#    gsa(){
#      SSH_AUTH_SOCK=`rig-ssh-agent ${1+"$@"}`; export SSH_AUTH_SOCK
#    }
#
# - Cameron Simpson <cs@cskk.id.au> 30jul2001
#

set -ue

: ${HOST:=`hostname -s`}

cmd=$0
usage="Usage: $cmd [-f]"

force=
[ $# -gt 0 ] && [ "x$1" = x-f ] && { force=1; shift; }

[ $# = 0 ] || { echo "$usage" >&2; exit 2; }

statefile=$HOME/var/run/ssh-agent-$HOST

exec 3>&1 1>&2

need_agent=
if [ "$force" ]
then
  need_agent=1
else
  # test for existing ssh-agent
  { ssh-add -l >/dev/null || [ $? = 1 ]; } \
  || { [ -s "$statefile" ] \
       && . "$statefile" \
       && { ssh-add -l >/dev/null || [ $? = 1 ]; }
     } \
  || need_agent=1
fi

if [ $need_agent ]
then
  # start per-host agent, update state file
  eval $(exec 3>&-; ssh-agent -s | tee "$statefile")
fi

exec 1>&3 3>&-
echo "$SSH_AUTH_SOCK"
