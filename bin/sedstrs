#!/usr/bin/perl
#
# Tired of fighting with broken echo commands which interpret -n
# or \c etc, I resort to this cumbersome wrapper for the common
#	blah=`echo "$blah" | sed 's/this/that/g'`
# thing.
#	- Cameron Simpson <cs@cskk.id.au> 25aug1997
#

($cmd=$0) =~ s:.*/::;
$usage="Usage: $cmd sed-command strings...\n";

die $usage if @ARGV < 2;

$sed=shift(@ARGV);
$sed =~ s/'/'\\''/g;

open(SED,"| exec sed -e '$sed'")
	|| die "$cmd: can't pipe to sed: $!\n";

select(SED);
for (@ARGV)
{ print $_, "\n";
}

close(SED);

exit 0;
