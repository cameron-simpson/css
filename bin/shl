#!/bin/sh
#
# Wrapper for source-highlight to make it act sanely and conveniently.
# Notably, this lets me use:
#  LESSOPEN='|shl %s'
# with "less -R".
#   - Cameron Simpson <cs@cskk.id.au> 06jul2016
#

set -ue

: ${TMPDIR:=/tmp}

cmd=$( basename "$0" )
usage="Usage: $cmd [-s src-lang] [filename]
  -s src-lang   Specify source language."

src_lang=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -s) src_lang=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  filename=-
else
  filename=$1
  shift
fi

if [ $# -gt 0 ]
then
  echo "$cmd: extra arguments: $*" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

which source-highlight >/dev/null || {
  echo "$cmd: no source highlight, using cat" >&2
  exec cat "$filename"
}

# match_lang ext
match_lang() {
  source-highlight --lang-list | awk -v "ext=$1" '$1 == ext { print($1); }'
}

case "$filename" in
  -)    tmpf=$TMPDIR/$cmd.$$
        trap 'rm -f -- "$tmpf"' 0 1 3 15
        cat >"$tmpf"
        "$0" -s "$src_lang" -- "$tmpf"
        exit $?
        ;;
esac

if [ -z "$src_lang" ]
then
  ext=$( expr "x$filename" : '.*\.\(..*\)' ) || ext=
  [ -z "$ext" ] \
  || src_lang=$( match_lang "$ext" )
  if [ -z "$src_lang" ]
  then
    shbang=$( sed -n '1s|^#!/.*/||p' < "$filename" )
    [ -z "$shbang" ] \
    || src_lang=$( match_lang "$shbang" )
  fi
fi

colors=$( tput colors ) || colors=
case "$colors" in
  8)    colors= ;;  # no esc8.outlang, use esc.outlang
esac

set -- source-highlight \
        "--outlang-def=esc${colors}.outlang" \
        "--style-file=esc${colors}.style"
[ -n "$src_lang" ] || src_lang=txt
set -- "$@" -s "$src_lang"
set -- "$@" -i "$filename" -o STDOUT

exec "$@"
