#!/bin/sh -u
#
# Kick of port forward sshes; each ssh backgrounds itself and logs its pid to
# a file. Loss of connectivity will break the sshes.
#	- Cameron Simpson <cs@zip.com.au> 18jan2006
#

: ${OPTCSS:=/opt/css}
: ${VARRUN:=$HOME/var/run}

cf=${SSHPF_SSH_CONFIG:-$HOME/rc/ssh/config-pf}
delay=120
force=
pidfile=$VARRUN/sshpf.pid

cmd=$0
usage="Usage: $cmd [-F config] [targets...]
  -F config     Specify ssh configuration file to use.
                Default: \$SSHPF_SSH_CONFIG, or \$HOME/rc/ssh/config-pf
  targets       Host clause names from config.
                Default: \$SSHPF_DFLT"

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -F) cf=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ -s "$cf" ] || { echo "$cmd: missing ssh config: $cf" >&2; badopts=1; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ $# -gt 0 ] || set -- $SSHPF_DFLT

killpidfile -w "$pidfile"
>"$pidfile" || :
for host
do
  # we generate data at both ends so that a connectivity loss will break
  # both ends of the ssh tunnel
  while echo . && sleep "$delay"; do :; done \
  | ( exec 3<&0
      sshb ServerAliveInterval=31 -F "$cf" "$host" \
        'me=$$; ( exec </dev/null; while kill -0 $me && echo . && sleep $delay; do :; done; kill $me ) & exec cat' >/dev/null <&3 3<&- &
      echo $! >>"$pidfile"
    ) &
done
