#!/bin/sh
#
# Rebuild my symlinks.
#	- Cameron Simpson <cs@cskk.id.au> 28feb99
#

trace=echo
linklist=${SYNCLINKS:-$HOME/rc/sync/linklist}
dir=${SYNCLINKSDIR:=$HOME}

cmd=$0
usage="Usage: $cmd [-d homedir] [-f] [linklistfile]
	-d homedir	Where to put the links.
			Default from \$SYNCLINKSDIR: $dir
	-f		Fix things; default is to just check.
	linklistfile	File listing links and targets.
			Default from \$SYNCLINKS: $linklist"

badopts=
while :
do  case $1 in
	-d)	dir=$2; shift ;;
	-f)	trace=set-x ;;
	--)	shift; break ;;
	-?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
	*)	break ;;
    esac
done

[ $# = 0 ] || { linklist=$1; shift; }

[ $# = 0 ] || { echo "$cmd: extra arguments after linklist: $*" >&2
		badopts=1
	      }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ "x$linklist" = x- ] \
|| if [ -r "$linklist" ]
   then  exec <"$linklist"
   else  echo "$0: $linklist: not a readable file" >&2
	 exit 1
   fi

cd "$dir" || exit 1

xit=0

while read tolink fromlink etc
do  [ -n "$etc" ] && { echo "$cmd: $linklist: bad data, bailing out" >&2
		       xit=1
		       break
		     }
    case "$tolink" in
	/*) echo "$cmd: $linklist: skipping absolute link $tolink" >&2
	    xit=1
	    continue
	    ;;
    esac

    eval "fromlink=$fromlink"
    eval "tolink=$tolink"
    if [ -L "$tolink" ]
    then
	curfrom=`readsymlink "$tolink"`
	[ "x$fromlink" = "x$curfrom" ] && continue
	necho "# "; ls -ld "$tolink"
	$trace rm -f "$tolink" || { xit=1; continue; }
    else
	if [ -e "$tolink" ]
	then
	    necho "# "; ls -ld "$tolink"
	    $trace rm -rf "$tolink" || { xit=1; continue; }
	fi
    fi
    $trace ln -s "$fromlink" "$tolink" || { xit=1; continue; }
done

exit $xit
