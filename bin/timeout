#!/bin/sh -ue
#
# Run a command with a real-time timeout.
#	- Cameron Simpson <cs@zip.com.au>
#

sigopt=

usage="Usage: $0 [-s signal] seconds command [args...]"

badopts=

[ $# -gt 0 ] && [ "x$1" = x-s ] && { sigopt="-s $2"; shift; shift; }
[ $# -gt 0 ] && [ "x$1" = x-- ] && shift

[ $# -lt 2 ] && { echo "$usage" >&2; exit 2; }

timeout=$1
shift

case "$timeout" in
	[1-9]*)	;;	# dodgy bros syntax check since [!0-9] fails
	*)	echo "$0: timeout must be a positive integer" >&2
		echo "$usage" >&2
		exit 2
		;;
esac

cmdpid=$$

( # close stdin, send stdout to stderr
  exec </dev/null >&2
  (
    left=$timeout
    while [ $left -ge 1 ]
    do  kill -0 "$cmdpid" 2>/dev/null || exit 0
	sleep 1
        left=`expr $left - 1` || :
    done
    [ $left -gt 0 ] \
      && { kill -0 "$cmdpid" 2>/dev/null || exit 0; sleep $left; }

    if kill -0 "$cmdpid" 2>/dev/null
    then
	echo "$0: timed out after $timeout seconds: $*" >&2
	if ( set -x; kill $sigopt "$cmdpid" )
        then
            sleep 2
            kill -0 "$cmdpid" 2>/dev/null && ( set -x; kill -9 "$cmdpid" )
        fi
    fi
  ) &
)

exec "$@"
