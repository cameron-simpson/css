#!/bin/sh -ue
#
# Install and publish css from my development copy.
#	- Cameron Simpson <cs@zip.com.au> 09apr1997
#

: ${TMPDIR:=/tmp}

optcss=${OPTCSS:-/opt/css}
cssweb=$HOME/@/ezos/html/cs/css
adzapweb=$HOME/@/adzapper.sf/html/scripts
rev=
updateweb=1

cmd=`basename "$0"`
usage="Usage: $cmd [-r rev] [target-dir]"

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -r) rev=$2; updateweb=; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

if [ $# -gt 0 ]
then
  optcss=$1
  shift
  [ -d "$optcss/." ] || { echo "$cmd: $optcss: not a directory" >&2
                          badopts=1
                        }
fi

[ $# = 0 ] || { echo "$cmd: extra arguments after target-dir: $*" >&2
                badopts=1
              }

if [ -n "$rev" ]
then
  cssdatedir=css-$rev
else
  rev=`cs-release last`
  cssdatedir=css-$rev
  rev=release-$rev
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

xit=0

needhost $HOMEHOST@home || exit 2

umask 22

set -ue

unset tmpdir
trap '[ ! -d "$tmpdir" ] || rm -rf $tmpdir' 0
trap '[ ! -d "$tmpdir" ] || rm -rf $tmpdir; exit 1' 1 2 13 15
tmpdir=`mkdirn "$TMPDIR/$cmd"`

dstdir=$tmpdir/$cssdatedir

echo archive revision $rev ...
hg archive -t files -r "$rev" "$dstdir"
echo update file timestamps ...
hg log -r "0:$rev" --template '{date|isodate} {files}\n' \
| awk '    { for (i=4; i<=NF; i++) { f=$i; dates[f]=$1" "$2" "$3; } }
       END { for (f in dates) { print dates[f], f; } }' \
| while read -r d1 d2 d3 path
  do
    dpath=$dstdir/$path
    [ -f "$dpath" ] || continue
    touch -d "$d1 $d2 $d3" -- "$dpath"
  done

( cd "$dstdir"

  rsync -aHL --ignore-existing bin/synonyms/ bin/
  rm -rf bin/synonyms bos csiro defunct hacks make-into-shell-functions misc stubs unsw

  cp $HOME/rc/java/au.com.zip.cs.jar lib/

  echo adzapper...
  for f in squid_redirect testpageurls testzap
  do cp "$adzapweb/$f" bin/
     chmod a+rx "bin/$f"
  done

  echo 1INDEX.txt...
  ( cd bin; tag_fd 2 1INDEX.txt mkscriptndx * | sort ) >1INDEX.txt

  echo man...
  mkdir -p "$optcss/man"
  rsync -aH "$optcss/man/" man/
  myke "MANDIR=$dstdir/man" _man || echo myke _man fails, ignoring...
)

echo CHANGELOG.txt...
hglog -r "$rev:0" >"$dstdir/CHANGELOG.txt"

# deploy to local production
echo "update $optcss..."
pfx "$optcss" \
  rsync -aH --exclude-from=deploy.rsync-include --delete --delete-excluded \
    "$dstdir/" "$optcss/"
ln -s .. "$optcss/html/optcss"

if [ $updateweb ]
then
  # update the web tree
  echo $cssdatedir.tar.gz...
  ( cd "$tmpdir"
    tar czf "$cssweb/$cssdatedir.tar.gz" "$cssdatedir"
    rm -f "$cssweb/css.tar.gz"
    ln -s "$cssdatedir.tar.gz" "$cssweb/css.tar.gz"
  )

  echo CHANGELOG.rss...
  hg-rss >"$dstdir/html/CHANGELOG.rss"

  echo "update $cssweb..."
  pfx "$cssweb" qrsync -a --exclude=/optcss "$dstdir/html/" "$cssweb/"
fi
