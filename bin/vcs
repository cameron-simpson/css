#!/bin/sh -ue
#
# Do simple things with revision controlled source.
# - Cameron Simpson <cs@zip.com.au> 25apr2007
#
# Huge revsision. - cameron 11may2017
#

set -ue

: ${TMPDIR:=/tmp}
: ${EDITOR:=vi}

cmd=$(basename "$0")
usage="Usage: $cmd [-V vcs_type] [command [args...]]
  branch        Report current branch name.
  new-branch    Commence a new branch.
  report        (Default.) Report brief summary.
  status        Report tree status.
  top           Report top of tree.
  type [dir]    Report type of tree."

vcs_type=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -V) vcs_type=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

set -x
if [ $# = 0 ]
then    op=report
else    op=$1; shift
fi

if [ "x$op" = "xtype" ]
then
  if [ $# = 0 ]
  then  dir=.
  else  dir=$1; shift
  fi
  if [ $# -gt 0 ]
  then
    echo "$cmd: $op: extra arguments after dir: $*" &2
    badopts=1
  else
    topdir=$( set -ue
              cd "$dir"
              findup -d . -c '[ -e "$FINDUP_DIR/.hg" -o -e "$FINDUP_DIR/.git" ]'
            ) || {
      echo "$cmd: $op $dir: cannot locate VCS top" >&2
      exit 1
    }
    if [ -d "$topdir/.hg" ]
    then  echo hg
    else
      if [ -e "$topdir/.git" ]
      then  echo git
      else  echo "$cmd: $op $dir: cannot determine VCS type at topdir=$topdir" >&2
            exit 1
      fi
    fi
  fi
else
  [ -n "$vcs_type" ] || vcs_type=$("$0" type) || {
    echo "$cmd: cannot infer VCS type" >&2
    exit 1
  }
  case "$vcs_type" in
    hg)
      case "$op" in
        branch)
          if [ $# = 0 ]
          then  hg branches
          else  hg branch "$@"
          fi
          ;;
        report)
          hg status -C ${1+"$@"} | grep '^[^?]'
          ;;
        *)echo "$cmd: unrecognised command: $op" >&2
          badopts=1
          ;;
      esac
      ;;
    git)
      case "$op" in
        branch)
          git branch ${1+"$@"}
          ;;
        diff) 
          git diff ${1+"$@"}
          ;;
        report)
          git status ${1+"$@"}
          ;;
        *)echo "$cmd: unrecognised command: $op" >&2
          badopts=1
          ;;
      esac
      ;;
    *)echo "$cmd: unsupported VCS type: $vcs_type" >&2
      badopts=1
      ;;
  esac
fi

xit=$?

[ $badopts ] && { echo "$usage" >&2; exit 2; }

exit $xit
