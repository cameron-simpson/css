#!/bin/sh
#
# Convenience tool for virtualenv setups.
# - Cameron Simpson <cs@cskk.id.au> 07mar2014
#

set -ue


# the base location of the venvs
: "${VENV_DIR:="$HOME/var/venv"}"

# this was inline, but vim's syntax highlighting broke
pyver() {
  # NB: before python 3.4 "python --version" wrote to stderr
  # http://bugs.python.org/issue18338
  "$1" --version 2>&1 | awk '{print$2}'
}

cmd=$( basename "$0" )
usage="Usage $cmd [subcmd ...]
  version   Target Python version, eg 3.12.
  Subcommands:
  info      Recite virtualenv information. (Default.)
  init [pyexe] venvpath [{package|-r requirements-file}...]
            Create new environment at venvpath with the specified
            additional packages.
            pyexe is an optional base python executable for the
            venv, otherwise python3.
            venvpath specifies the venv location.
  exec command ...
            Execute command with the venv/bin at the from of \$PATH."

trace=
[ -t 2 ] && trace=set-x

badopts=

if [ $# = 0 ]
then op=info
else op=$1; shift
fi

cmd="$cmd $op"
case "$op" in
  info)
    echo "VIRTUAL_ENV=$VIRTUAL_ENV"
    pyver "$VIRTUAL_ENV/bin/python"
    ;;
  init)
    if [ $# -gt 0 ] && [ -f "$1" -a -x "$1" ]
    then  pyexe=$1; shift
    else  pyexe=$( which python3 )
    fi
    pyver=$( pyver "$pyexe" ) || exit 1
    if [ $# = 0 ]
    then
      echo "$cmd: missing venvpath" >&2
      badopts=1
    else
      venvpath=$1; shift
      case "$venvpath" in
        /* | ./* | ../* ) ;;
        *)    venvpath=$VENV_DIR/$venvpath ;;
      esac
      [ ! -e "$venvpath" ] || {
        echo "$cmd: venvpath already exists: $venvpath" >&2
        badopts=1
      }
    fi
    [ $badopts ] && { echo "$usage" >&2; exit 2; }
    $trace "$pyexe" -m venv "$venvpath"
    venvpath=$( cd "$venvpath" && pwd )
    VIRTUAL_ENV=$venvpath
    export VIRTUAL_ENV
    pyexe=$VIRTUAL_ENV/bin/python3
    $trace "$pyexe" -m pip install -U pip wheel uv
    [ $# = 0 ] || $trace "$VIRTUAL_ENV/bin/uv" pip install "$@"
    ;;
  exec)
    [ $# -gt 0 ] || {
      echo "$cmd: missing command" >&2
      echo "$usage" >&2
      exit 2
    }
    exec $trace env "PATH=$VIRTUAL_ENV/bin:$PATH" -- "$@"
    ;;
  *)echo "$cmd: unrecognised subcommand" >&2
    echo "$usage" >&2
    exit 2
    ;;
esac
