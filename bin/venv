#!/bin/sh
#
# Convenience tool for virtualenv setups.
#       - Cameron Simpson <cs@zip.com.au> 07mar2014
#

set -ue

# this was inline, but vim's syntax highlighting broke
pyver() {
  # NB: before python 3.4 "python --version" wrote to stderr
  # http://bugs.python.org/issue18338
  "$VENV_PYTHON" --version 2>&1 | awk '{print$2}'
}

: ${VENV_PYTHON:=python}
: ${VENV_PYVER:=`pyver`}
: ${VENV_BASE:=$HOME/var/venv}
: ${VENV_DIR:=$VENV_BASE/$VENV_PYVER}

cmd=`basename "$0"`
usage="Usage:
    $cmd [options...] init
    $cmd [options...] exec command [args...]
    $cmd [options...] pip pip-arguments...
  Options: none yet"

while [ $# -gt 0 ]
do
  case $1 in
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ $# = 0 ]
then
  set | grep '^VENV_'
  exit 0
fi

op=$1
shift

case $op in
  init)
    set -x
    mkdir -- "$VENV_DIR"
    virtualenv -- "$VENV_DIR"
    ;;
  exec)
    if [ $# = 0 ]
    then
      echo "$cmd: $op: missing command" >&2
      exit 2
    fi
    set -x
    set +u
    . "$VENV_DIR/bin/activate"
    exec "$@"
    ;;
  pip | python )
    set -x
    exec "$VENV_DIR/bin/$op" ${1+"$@"}
    ;;
  *)echo "$cmd: unrecognised operator: $op" >&2
    exit 2
    ;;
esac
