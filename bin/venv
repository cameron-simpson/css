#!/bin/sh
#
# Convenience tool for virtualenv setups.
#       - Cameron Simpson <cs@zip.com.au> 07mar2014
#

set -ue

: ${VENV_DIR:=$HOME/var/venv}

# this was inline, but vim's syntax highlighting broke
pyver() {
  # NB: before python 3.4 "python --version" wrote to stderr
  # http://bugs.python.org/issue18338
  "$1" --version 2>&1 | awk '{print$2}'
}

: ${VENV_DIR:=$HOME/var/venv}

cmd=`basename "$0"`
usage="Usage:
    $cmd [version]
    $cmd [version] init [python [venv-dir]]
    $cmd [version] [exec] command [args...]"

trace=
[ -t 2 ] && trace=set-x

badopts=

case "${1:-''}" in
  [123]*)   pyver=$1; shift ;;
  *)        pyver=3 ;;
esac

if [ $# = 0 ]
then
  pyver "$VENV_DIR/$pyver/bin/python"
  exit $?
fi

op=$1
shift

case "$op" in
  init)
    if [ $# -gt 0 ]
    then  pyexe=$1; shift
    else  pyexe=python$pyver
    fi
    pyver=$( pyver "$pyexe" ) || exit 1
    if [ $# -gt 0 ]
    then  venvdir=$1; shift; set_major=
    else  venvdir=$VENV_DIR/$pyver set_major=1
    fi
    $trace mkdir -- "$venvdir"
    $trace virtualenv -p "$pyexe" --system-site-packages ${1+"$@"} -- "$venvdir"
    if [ $set_major ]
    then
      venvdir_up=$( dirname "$venvdir" )
      pyver_major=$( expr "x$pyver" : 'x\([1-9]\)\..*' )
      symlink=$venvdir_up/$pyver_major
      [ -e "$symlink" ] || $trace ln -s "$pyver" "$symlink"
    fi
    exit $?
    ;;
  exec)
    ;;
  # put the command back
  *)set -- "$op" ${1+"$@"}
    ;;
esac

if [ $# = 0 ]
then
  echo "$cmd: missing command" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

venvdir=$VENV_DIR/$pyver

set +u
[ -t 2 ] && echo "+ . $venvdir/bin/activate" >&2
. "$venvdir/bin/activate"
exec $trace "$@"
