#!/bin/sh
#
# Patch a file by filtering it, run command, restore file.
# - Cameron Simpson <cs@cskk.id.au> 03nov2019
#

set -ue

: ${TMPDIR:=/tmp}

cmd=$( basename "$0" )
usage="Usage: $cmd {-c shcmd | -e filter [filter-args...] [--]} filename command [args...]
  -c shcmd  Run the shell command shcmd as the prefilter.
  -e filter Run the command filter as the prefilter."

have_filter=
filter_cmd=

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -c) opt=$1 shcmd=$2; shift; shift
        if [ $have_filter ]
        then
          echo "$cmd: $opt: filter already specified" >&2
          badopts=1
        else
          have_filter=1
          filter_cmd=('sh' '-c' "$shcmd")
        fi
        ;;
    -e) opt=$1
        shift
        eargs=()
        while :
        do
          case $1 in
            --) shift; break ;;
            *)  eargs+=("$1"); shift ;;
          esac
        done
        if [ $have_filter ]
        then
          echo "$cmd: $opt: filter already specified" >&2
          badopts=1
        else
          have_filter=1
          filter_cmd=${eargs[@]}
          if [ ${#filter_cmd[@]} = 0 ]
          then
            echo "$cmd: $opt: empty filter command" >&2
            badopts=1
          fi
        fi
        ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        shift
        ;;
    *)  break ;;
  esac
done

[ $have_filter ] || {
  echo "$cmd: missing filter" >&2
  badopts=1
}

if [ $# = 0 ]
then
  echo "$cmd: missing filename" >&2
  badopts=1
else
  filename=$1
  shift
  [ -f "$filename" ] || {
    echo "$cmd: filename $filename: not a file" >&2
    badopts=1
  }
fi

[ $# -gt 0 ] || {
  echo "$cmd: missing command" >&2
  badopts=1
}

[ $badopts ] && { echo "$usage" >&2; exit 2; }

tmpf=$TMPDIR/$cmd.$$

trap 'rm -f "$tmpf"' 0 1 3 15

${filter_cmd[@]} <"$filename" >"$tmpf"

xit=0
"$@" "$filename" || xit=$?

cp "$tmpf" "$filename"
exit $xit
