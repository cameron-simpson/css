#!/bin/sh -ue
#
# Write a data file to a tape, archive its table of contents.
#       - Cameron Simpson <cs@cskk.id.au> 
#

set -ue

: ${TAPE:=/dev/nst0}
: ${TAPE_BLOCKSIZE:=262144}        # LTO-3: 262144, DLT-IV: 131072
: ${TAPE_INDEX:=$HOME/var/log/tapedumps}
: ${TMPDIR:=/tmp}
export TAPE TMPDIR

trace=set-x
datefmt='+%Y-%m-%d-%H:%M:%S'
filenum=
jukeslot=

cmd=`basename "$0"`
usage="Usage: $cmd [-f filenum] -j jukeslot [-t tapedev] data-file data-toc
  -f filenum    Specify tape file number.
                Default: one more than the most recent archived TOC file.
                \"maxN\" means to compute one more than the most recent
                archived TOC file, but if that exceeds N, presume tape full
                and use file 0. \"Nor0\" means to write to file N, but if
                that fails, presume tape full and write to file 0.
  -j jukeslot   Load the tape from this jukebox slot.
                \"NONE\" means no jukebox actions.
  -t tapedev    Specify tape device. Default from \$TAPE: $TAPE"

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -f) filenum=$2; shift ;;
    -j) jukeslot=$2; shift ;;
    -t) TAPE=$2; shift ;;
    --) shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
        badopts=1
        ;;
    *)  break ;;
  esac
  shift
done

[ -n "$jukeslot" ] || { echo "$cmd: missing -j jukeslot" >&2
                        badopts=1
                      }

if [ $# = 0 ]
then
  echo "$cmd: missing data-file" >&2
  badopts=1
else
  datafile=$1
  shift
  if [ ! -f "$datafile" -o ! -s "$datafile" ]
  then
    echo "$cmd: invalid data-file: $datafile" >&2
    badopts=1
  fi
  if [ $# = 0 ]
  then
    echo "$cmd: missing data-toc" >&2
    badopts=1
  else
    datatoc=$1
    shift
    if [ ! -f "$datatoc" -o ! -s "$datatoc" ]
    then
      echo "$cmd: invalid data-toc: $datatoc" >&2
      badopts=1
    fi
    [ $# = 0 ] || { echo "$cmd: extra arguments after data-toc: $*" >&2
                    badopts=1
                  }
  fi
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

case $jukeslot in
  NONE) tapeindex=$TAPE_INDEX ;;
  *)    tapeindex=$TAPE_INDEX/$jukeslot ;;
esac

# make index directory if missing
[ -d "$tapeindex/." ] || $trace mkdir "$tapeindex"

computeFilenum()
{
  _cf_num=`cd "$tapeindex"; ls -dt toc-[0-9]* | sed -n '1s/^toc-\([0-9][0-9]*\).*/\1/p'`
  if [ -n "$_cf_num" ]
  then  _cf_num=`expr "$_cf_num" + 1`
  else  _cf_num=0
  fi
  echo "$_cf_num"
}
# handle special filenums
case "$filenum" in
  '')
    filenum=`computeFilenum`
    ;;
  max[0-9]|max[1-9][0-9])
    max=`expr "$filenum" : 'max\([0-9][0-9]*\).*'` || [ -n "$max" ]
    filenum=`computeFilenum`
    [ "$filenum" -le "$max" ] || filenum=0
    ;;
  or0)
    filenum=`computeFilenum`
    if [ "$filenum" -gt 0 ]
    then
      $trace "$0" -f "$filenum" -j "$jukeslot" -t "$TAPE" \
                  -- "$datafile" "$datatoc" \
      || $trace "$0" -f 0 -j "$jukeslot" -t "$TAPE" \
                     -- "$datafile" "$datatoc"
      exit $?
    fi
    ;;
  [0-9]or0|[1-9][0-9]or0)
    filenum=`expr "x$filenum" : 'x\([0-9]*\)or0'` || [ -n "$filenum" ]
    if [ "$filenum" -gt 0 ]
    then
      $trace "$0" -f "$filenum" -j "$jukeslot" -t "$TAPE" \
                  -- "$datafile" "$datatoc" \
      || $trace "$0" -f 0 -j "$jukeslot" -t "$TAPE" \
                     -- "$datafile" "$datatoc"
      exit $?
    fi
    ;;
esac

newtoc=$tapeindex/toc-$filenum-`date "$datefmt"`-`basename "$datatoc"`
time $trace withtape -j "$jukeslot" -f "$filenum" -l "$TAPE_INDEX/tapedumps.log" dd "if=$datafile" "of=$TAPE" "bs=$TAPE_BLOCKSIZE"
$trace cp "$datatoc" "$newtoc"
$trace gzip -v -9 "$newtoc"
