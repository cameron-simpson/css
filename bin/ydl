#!/bin/sh
#
# Helper for youtube-dl. Downloads to $DL/v, optionally via at(1)
# to utilise an off peak period.
# - Cameron Simpson <cs@cskk.id.au>
#

set -ue

: ${TMPDIR:=/tmp}

cmd=$( basename "$0" )
usage="Usage: $cmd [mp4|mkv] [hh:mm{am,pm}] URLs..."

trace=
[ -t 2 ] && trace=set-x

dldir=${DL:-$HOME/dl}/v
when=
proxy=${https_proxy:-''}
ydlopts='--write-info-json --write-annotations'
target_fmt=

badopts=

while [ $# -gt 0 ]
do
  case "$1" in
    [0-9]:[0-9][0-9][ap]m | [1-9]:[0-9][0-9][ap]m)
        when=$1
        shift
        ;;
    ''|mp4|mkv)
        target_fmt=$1
        shift
        ;;
    *)  break ;;
  esac
done

if [ $# = 0 ]
then
  echo "$cmd: missing URLs" >&2
  badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

yout=$TMPDIR/$cmd.$$out
trap 'rm -f "$yout"' 0 1 3 15

[ -z "$target_fmt" ] || ydlopts="$ydlopts --merge-output-format $target_fmt"

set -- --proxy "$proxy" $ydlopts "$@"
[ -d "$dldir" ] || $trace mkdir -p "$dldir"

cd "$dldir"
if [ -n "$when" ]
then
    set -- youtube-dl "$@"
    $trace echo "$*" | $trace at "$when"
else
    set -- youtube-dl ${1+"$@"}
    $trace "$@" >"$yout"
    cat "$yout"
    filename=$( sed -n 's/^\[ffmpeg\] Adding metadata to '\''\(.*\)'\''$/\1/p' <"$yout" )
    ls -ld -- "$filename"
    filepfx=$( expr "x$filename" : 'x\(.*\)\..*' )
    info=$filepfx.info.json
    $trace fstags json_import --prefix=youtube-dl "$filename" "$info"
fi
