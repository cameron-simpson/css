#!/usr/bin/perl
#
# Emit a table of contents for a CD.
#	- Cameron Simpson <cs@zip.com.au> 14mar2001
# 

use strict qw(vars);

use cs::CDDB;

my $dev;

($::cmd=$0) =~ s:.*/::;
$::Usage="Usage: $::cmd [cd-device]\n";

if (@ARGV)
{ $dev=shift(@ARGV);
}

die $::Usage if @ARGV;

my $CD = new cs::CDDB;
die "$::cmd: can't make new cs::CDDB object\n" if ! defined $CD;
$CD->Device($dev) if defined $dev;

my $discid = $CD->DiscId();

my @q = $CD->Query();
if (@q < 1)
{ die "$::cmd: no matches for $discid\n";
}

if (@q > 1 || @q > 0 && $q[0]->[2] ne $discid)
{ warn "$::cmd: multiple or differing matches for discid $discid:\n";

  my $showchoices=1;

  if (! -t STDIN || ! -t STDERR)
  { die "$::cmd: STDIN and STDERR aren't terminals, aborting\n";
  }

  my($cat,$discid)=($q[$_-1]->[0], $q[$_-1]->[2]);

  CHOICE:
  while(1)
  {
    if ($showchoices)
    {
      for my $i (1..@q)
      { my $m = $q[$i-1];
	warn "$i\t$m->[2]  $m->[0]\t$m->[1]\n";
      }
      $showchoices=0;
    }

    print STDERR "Select? ";
    exit 1 if ! defined($_=<STDIN>);
    chomp;

    s/^\s+//;

    if (!length)
    { $showchoices=1;
    }
    elsif ($_ eq '?' || lc($_) eq 'help')
    { print STDERR "Help:\n";
      print STDERR "\t?\tThis help.\n";
      print STDERR "\tn\tChoose match n.\n";
      print STDERR "\tn?\tList match n.\n";
      print STDERR "\tblank\tList matches again.\n";
    }
    elsif (/^\d+$/)
    { if ($_ < 1 || $_ > @q)
      { warn "Choice out of range.\n";
	$showchoices=1;
      }
      else
      { ($cat,$discid)=($q[$_-1]->[0], $q[$_-1]->[2]);
	last CHOICE;
      }
    }
    elsif (/^(\d+)\?$/)
    { $_=$1;
      if ($_ < 1 || $_ > @q)
      { warn "Choice out of range.\n";
	$showchoices=1;
      }
      else
      { warn "CAN'T LIST CONTENTS OF MATCH $_ YET";
      }
    }
    else
    { warn "$::cmd: unsupported response\"$_\". Type \"?\" for help.\n";
    }
  }

  $CD->SetCategory($cat);
  $CD->SetDiscId($discid);
}

my($artist,$title)=($CD->Artist(), $CD->Title());
die "no artist!" if ! defined $artist;
die "no title!" if ! defined $title;

print "$artist\n$title\n";

# track info
my @T = $CD->TrackInfo();
my $T;

for my $i (0..$CD->NTracks()-1)
{ $T=$T[$i];

   print $i+1, " ", $T->{LENGTH}, " ", $T->{OFFSET}, "\n";
   print $T->{TTITLE}, "\n";
   print $T->{EXTT}, "\n";
}
