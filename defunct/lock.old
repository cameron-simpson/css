#!/bin/sh
#
# Run a command while locking a file.
#	- Cameron Simpson <cs@cskk.id.au> 01oct1997
#

usage="Usage: $0 [-1] pathname command [args...]
	-1	Onceonly - bail if lock can't be had immediately.
		Useful for congestion control where you're running
		something periodic and it's enough for a single
		instance to be live."

delay=5
dincr=5
dmax=30
whingeafter=5	# 5 consecutive lock failures? start saying so
onceonly=

[ "x$1" = x-1 ] && { onceonly=1; shift; }

if [ $# -lt 2 ]
then  echo "$usage" >&2; exit 2
else  pathname=$1; shift
fi

TMP=${TMP:-$HOME/tmp}
USER=${USER:-`whoami`}
lockdir=${LOCKDIR:-"$TMP/locks-$USER"}

# ensure work area exists
[ -d "$lockdir/." ] || mkdir -p "$lockdir" || exit $?
[ -w "$lockdir/." ] || { echo "$cmd: $lockdir: not writable" >&2; exit 2; }

lock=$lockdir/LOCK`sedstrs "s|//*|_|g" "$pathname"`

firstwait=1
saidwait=
paused=
waits=0
while ( [ $waits -lt $whingeafter ] && exec 2>/dev/null
	exec not mkdir "$lock"
      )
do
    if [ $onceonly ]
    then
	echo "$0: lock on $Pathname taken, bailing out" >&2
	exit 1
    fi

    [ -t 2 ] && if [ $firstwait ]
		then firstwait=
		else [ $saidwait ] \
			|| { echo "$0: waiting for lock on $pathname ..." >&2
			     saidwait=1
			   }
		fi
    paused=1
    sleep $delay
    [ $delay -lt $dmax ] && delay=`expr $delay + $dincr`
    waits=`expr $waits + 1`
done
[ $saidwait ] && echo "$0: got lock on $pathname" >&2

xit=1
trap 'rmdir "$lock"; exit $xit' 0 1 3 15
"$@"
xit=$?
