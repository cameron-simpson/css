#!/bin/sh

: ${TMPDIR:=/tmp}

usage="Usage: $0 [-ns] dir [flatdir]" \
sflag= nflag= src= flat= tmp= \
{ while [ $# -gt 0 ]
  do
	case "$1" in -*n*) nflag=1 ;; esac
	case "$1" in -*s*) sflag=1 ;; esac
	# case "$1" in -*[^ns]*) echo "$usage" >&2 ; return 2 ;; esac
	case "$1" in -*) ;; *) break ;; esac
	shift
  done

  case $# in
	1)	src=$1 flat=flatspace ;;
	2)	src=$1 flat=$2 ;;
	*)	echo "$usage" >&2 ; return 2 ;;
  esac

  [ -d "$src" ] || { echo "$0: $src is not a directory" >&2 ; return 1 ; }

  [ -n "$nflag" ] || [ -d "$flat" ] || mkdir "$flat" || return $?

  tmp=$TMPDIR/flatten$$
  find "$src" -type d -print |
	{ if [ -n "$nflag" ]
	  then
		exec 3>/dev/null 5>&3
	  else
	  	exec 3>"$flat/mapping" 5>"$flat/mkdirs.bat"
	  fi
	  if [ -n "$sflag" ]
	  then
		exec 4>/dev/null
	  else
		exec 4>&2
	  fi
	  count=1
	  xit=0
	  while read srcdir
	  do
		if [ -z "$srcdir" ]
		then
		echo shit, eh?
		else
		echo -n "$srcdir ..." >&4
		subdir=
		for file in `exec ls -a "$srcdir"`
		do
			[ -f "$srcdir/$file" ] &&
				{ [ -n "$subdir" ] ||
					{ echo -n " ($count)" >&4
					  subdir=dir$count
					  echo "$subdir -> $srcdir" >&3
					  count=`exec expr $count + 1`
					  [ -n "$nflag" ] || mkdir "$flat/$subdir" || return 1
					}
				  if [ -n "$nflag" ] ||
				     	ln "$srcdir/$file" "$flat/$subdir/$file" 2>/dev/null ||
				  	cp "$srcdir/$file" "$flat/$subdir/$file"
				  then
					echo -n " $file" >&4
				  else
					xit=1
				  fi
				}
		done
		echo >&4
		fi
	  done
	  exec 3>&-
	  sed -e 's/.* -> \([^ ][^ ]*\)/mkdir \1/' -e 's,/,\\,g' < "$flat/mapping" | sort >&5
	  return $xit
	}
}
