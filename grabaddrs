#!/usr/bin/perl
#
# Read RFC822 headers on stdin and emit addresses suitable for use in Mutt external queries.
#	- Cameron Simpson <cs@zip.com.au> 31jan2001
#

use strict qw(vars);

use cs::Misc;
use cs::Source;
use cs::RFC822;

my %set;

if (@ARGV)
{ for my $file (@ARGV)
  { if ($file eq '-')
    { grab(STDIN,'stdin');
    }
    elsif (! open(FILE,"< $file\0"))
    { warn "$::cmd: open($file): $!\n";
    }
    else
    { grab(FILE,$file);
      close(FILE);
    }
  }
}
else
{ grab(STDIN,'stdin');
}

# recite the addresses with commentry

my $txt;

ADDR:
for my $key (sort keys %set)
{
  $_ = $set{$key};
  
  if (/<[^@>]+@[^@>]+>/)
  { $txt="$` $'";
  }
  elsif (/\((.*)\)/)
  { $txt=$1;
  }
  else
  { next ADDR;
  }

  $_=$txt;
  s/\s+/ /g;
  while (
        s/^ //
     || s/ $//
     || s/^"(.*)"$/$1/
     || s/^'(.*)'$/$1/
     || s/^\((.*)\)$/$1/
     || s/\s+\(e-mail\)/i
     || s/^ //
     || s/ $//
	)
  {}

  next ADDR if ! length;

  print "$key\t$_\n";
}

exit 0;

sub grab
{ my($F, $name)=@_;

  my $S = new cs::Source(FILE,"main::$F");
  my $H = new cs::RFC822 $S;

  # collect addresses from the headers
  for my $hdr (BCC,REPLY_TO,CC,TO,FROM)	# <-- least trusted to most trusted
  { my $body = $H->Hdr($hdr);
    my $addrs = cs::RFC822::addrSet($body);

    for my $key (keys %$addrs)
    { $set{lc($key)}=$addrs->{$key};
    }
  }
}
