#!/bin/sh
#
# Grep all lines from stdin containing all the command line regexps.
#	- Cameron Simpson <cs@zip.com.au> 12nov2001
#

cmd=$0
usage="Usage: $cmd [-i] [-o] sed-regexps...
	-i	Ignore case.
	-o	OR words instead of AND."


any=
icase=

badopts=
while :
do  case $1 in
      -i)	icase=1 ;;
      -o)	any=1 ;;
      --)	shift; break ;;
      -?*)	echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
      *)	break ;;
    esac
    shift
done

if [ $# = 0 ]
then
    echo "$cmd: missing sed-regexps" >&2
    badopts=1
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

ok=1

first=1
for word
do
  [ $first ] && { set x; shift; }

  case "$word" in
    */*)  word=`echo "$word" | sed 's;/;\\\\/;g'`
  esac
  case "$word" in
    !*)   word=`expr "x$word" : 'x.\(.*\)'`
	  set x -e "/$word/d" ${1+"$@"}; shift
	  ;;
    *)    if [ $any ]
	  then set x ${1+"$@"} -e "/$word/b ok"; shift
	  else set x ${1+"$@"} -e "/$word/!d"; shift
	  fi
	  ;;
  esac

  first=
done

[ $ok ] || exit 1

[ $icase ] && { set x -e h -e 'y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/' ${1+"$@"}
		shift
	      }
[ $any ] && { set x ${1+"$@"} -e d -e ':ok'; shift; }
[ $icase ] && { set x ${1+"$@"} -e g; shift; }

##set -x
exec sed "$@"
