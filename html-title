#!/bin/sh -u
#
# Try to guess suitable title string from HTML data. Try TITLE then H1.
# Doomed to failure because MANY MANY web pages are completely badly formed.
#	- Cameron Simpson <cs@zip.com.au> 15may2005
#

: ${TMPDIR:=/tmp}

cmd=`basename "$0"` || exit 1
usage="Usage: $cmd [files...]"

tmpf=$TMPDIR/$cmd$$
trap 'rm -f "$tmpf"' 0 1 2 13 15

html-unsplit -- ${1+"$@"} \
| sed '# detab
       y/	/ /
       :detag
       # remove param="value" from tags
       s/<\([^<>=]*\) [a-zA-Z][a-zA-Z]*="[^"]*"/<\1/g
       t detag
       # remove param='value' from tags
       s/<\([^<>=]*\) [a-zA-Z][a-zA-Z]*='\''[^'\'']*'\''/<\1/g
       t detag
       # remove param=value from tags
       s/<\([^<>=]*\) [a-zA-Z][a-zA-Z]*=[^<> ]*/<\1/g
       t detag
      ' \
> "$tmpf"

( 
  sed -ne 's/.*< *[Tt][Ii][Tt][Ll][Ee] *> *\([^<]*[^< ]\).*/\1/p' "$tmpf"
  sed -ne 's/.*< *[Hh]1 *> *\([^<]*[^< ]\).*/\1/p' "$tmpf"
) \
| sed -e 's/\&lt;/</g;' \
      -e 's/\&gt;/>/g' \
      -e 's/\&nbsp;/ /g' \
      -e 's/\&quot;/"/g' \
      -e 's/\&amp;/\&/g' \
      -e 1q
