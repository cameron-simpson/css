#!/bin/sh
#
# Simple jukebox.
# Runs a player in the background, reads keyword selections and commands
# in the foreground.
#	- Cameron Simpson <cs@zip.com.au> 01jun2002
#

: ${TMPDIR:=/tmp}

trace=set-x

playcopy=
dorandom=

cmd=`basename "$0"`
usage="Usage: $cmd [-C]"

[ "x$1" = x-C ] && { playcopy=1; shift; }

playpid=

runplayer()
{
  ( ok=1
    subproc=
    tmpauf=
    trap 'ok=; [ -n "$subproc" ] && kill $subproc; exit' 1 2 3 15
    trap '[ -n "$subproc" ] && kill $subproc' USR1
    playlist=$TMPDIR/$cmd.$$
    while [ $ok ]
    do
	if [$dorandom ]
	then  auropt=-r
	      echo "Selecting randomly, patterns are: $ptns"
	else  auropt=
	      echo "Selecting sequentially, patterns are: $ptns"
	fi
	$trace aulist $auropt $ptns >"$playlist"
	if [ -s "$playlist" ]
	then
	  exec <"$playlist"
	  rm -f "$playlist"
	  while [ $ok ] && read -r auf
	  do
	      echo "[$auf]"
	      if [ $playcopy ]
	      then
		  tmpauf=$TMPDIR/$cmd$$`basename "$auf"`
		  (set -x; cp "$auf" "$tmpauf") && auf=$tmpauf
	      fi
	      case "$auf" in
		*.ogg)	$trace ogg123 -d oss "$auf" & ;;
		*.mp3)	$trace mpg123 -b 2048 "$auf" & ;;
		*)	echo "$cmd: how to play $auf ?" >&2
			continue
			;;
	      esac
	      subproc=$!
	      wait
	      subproc=
	      [ $playcopy ] && rm -f "$tmpauf"
	      [ $ok ] && sleep 2
	  done
	else
	  echo "$cmd: no hits found for keywords: $ptns" >&2
	  ok=
	fi
    done
  ) &
  playpid=$!
}

stopplayer()
{ [ -n "$playpid" ] && { kill "$playpid"; playpid=; }
}

bumpplayer()
{ [ -n "$playpid" ] && { kill -USR1 "$playpid"; }
}

line=
while lastline=$line
      read line
do  
    [ "x$line" = "x!!" ] && line=$lastline
    case "$line" in
	'?')	echo "Help:"
		echo "  ?	This help message."
		echo "  -	Stop the player."
		echo "  .	Select with an empty pattern (pick anything)."
		echo "  blank line: Skip to next selection from current criteria."
		echo "  \"random\" Choose matching items sequentially."
		echo "  \"seq\"	Choose matching items sequentially."
		echo "  keyword	Select tracks using the supplied keywords."
		;;
	'')	bumpplayer
		;;
	-)	stopplayer
		;;
	random)	dorandom=1
		echo "Reselecting with random play."
		stopplayer
		sleep 2  
		runplayer
		;;
	seq)	dorandom=
		echo "Reselecting with sequential play."
		stopplayer
		sleep 2  
		runplayer
		;;
	.)	ptns=
		stopplayer
		sleep 2
		runplayer
		;;
	*)
		ptns=$line
		stopplayer
		sleep 2
		runplayer
		;;
    esac
done

stopplayer
