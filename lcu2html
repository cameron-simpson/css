#!/usr/bin/perl
#
# Read a .CSV file from my credit union's internet banking facility
# and emit an HTML table.
#	- Cameron Simpson <cs@zip.com.au> 04jun2001
#

use cs::Misc;
use cs::TSF;
use cs::HTML;

print "<TABLE BORDER=1>\n";

my @rows = [ TR,
	      [TH, {ALIGN => LEFT, VALIGN => TOP}, "Date"],
	      [TH, {ALIGN => RIGHT, VALIGN => TOP}, "Amount"],
	      [TH, {ALIGN => LEFT, VALIGN => TOP}, "Description"],
	      [TH, {ALIGN => RIGHT, VALIGN => TOP}, "Balance"]
	   ];

# skip final balance records
$_=<STDIN>;
$_=<STDIN>;

## undef $oseq;
undef $orow;
while (<STDIN>)
{ my($dmy,$amt,$desc,$bal)=cs::TSF::splitTSLine($_,",");

  if ($bal eq "_")			{ $bal=''; }
  if ($dmy eq "_")			{ $dmy=''; }
  if ($amt eq "_")			{ $amt=''; }

  if (uc($type) eq CONTINUATION)	{ $type=''; $amt=''; }

  ## if ($seq == $oseq)			{ $pseq=""; }
  ## else				{ $pseq=$seq; }

  if ($dmy == $odmy)			{ $pdmy=""; }
  else					{ $pdmy=$dmy; }

  if (defined $orow
   && ! length $amt && ! length $dmy && ! length $bal)
  { push(@{$orow->[3]}, [BR], $desc);
  }
  else
  { $orow = [ TR,
	      [TD, {ALIGN => LEFT, VALIGN => TOP}, $pdmy],
	      [TD, {ALIGN => RIGHT, VALIGN => TOP}, $amt],
	      [TD, {ALIGN => LEFT, VALIGN => TOP}, $desc],
	      [TD, {ALIGN => RIGHT, VALIGN => TOP}, $bal]];
    push(@rows, $orow, "\n");
  }

  $odmy=$dmy;
}

print cs::HTML::tok2a([TABLE,
			{BORDER => 1},
			@rows]), "\n";
