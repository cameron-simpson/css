Return-Path: <python-list-bounces+cs=zip.com.au@python.org>
Delivered-To: unknown
Received: from mail.zip.com.au (125.255.95.3) by janus.home with POP3-SSL; 07
  Oct 2011 10:29:02 -0000
Delivered-To: cs@zipworld.com.au
Received: from mailin4-syd3.pacific.net.au (mailin4-syd3.pacific.net.au [125.255.92.145])
	by mailstore1.syd.pacific.net.au (Postfix) with ESMTP id 97CAC6B131
	for <cs@zipworld.com.au>; Fri,  7 Oct 2011 21:28:13 +1100 (EST)
Received: from mail.python.org (unknown [82.94.164.166])
	by mailin4-syd3.pacific.net.au (Postfix) with ESMTP id E701C4D8091
	for <cs@zip.com.au>; Fri,  7 Oct 2011 21:28:12 +1100 (EST)
Received: from albatross.python.org (localhost [127.0.0.1])
	by mail.python.org (Postfix) with ESMTP id 3SFRrW31dGzPSL
	for <cs@zip.com.au>; Fri,  7 Oct 2011 12:28:11 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=python.org; s=200901;
	t=1317983291; bh=h7WQdwg0vVDJX21WeJX6OVTpPyXdAmwutmjJpqNJJLo=;
	h=Date:From:To:Subject:Message-ID:MIME-Version:In-Reply-To:
	 References:Cc:List-Id:List-Unsubscribe:List-Archive:List-Post:
	 List-Help:List-Subscribe:Content-Type:Content-Transfer-Encoding:
	 Sender;
	b=jvkrXL1oq73Zfed19tfYSvo2jnPf09HLCTZbxKcdf0YYhthloD4Kur2bDH43EcCKh
	 l/rTun1jQKqMQASFezrCHsNDWmt0/HYpeCWTU39fnTscPIKhA3UYH5B1z/bMsV+L2W
	 wEbU2L8YRv8M5qsJth2Kce/sMD2Gw6jTyKW5CiBQ=
X-Original-To: python-list@python.org
Delivered-To: python-list@mail.python.org
Received: from albatross.python.org (localhost [127.0.0.1])
	by mail.python.org (Postfix) with ESMTP id 3SFRmK1wMtzPK0
	for <python-list@python.org>; Fri,  7 Oct 2011 12:24:33 +0200 (CEST)
X-Spam-Status: OK 0.000
X-Spam-Evidence: '*H*': 1.00; '*S*': 0.00; 'own.': 0.03;
	'received:edu.au': 0.07; 'roll': 0.07; 'python': 0.08; "'''":
	0.09; '(it': 0.09; 'subclass': 0.09; 'tuple': 0.09; 'def': 0.15;
	':o)': 0.16; 'afterwards.': 0.16; 'from:addr:cs': 0.16;
	'from:addr:zip.com.au': 0.16; 'from:name:cameron simpson': 0.16;
	'immutable;': 0.16; 'list;': 0.16; 'message-id:@cskk.homeip.net':
	0.16; 'received:202.125.174': 0.16; 'received:202.125.174.133':
	0.16; 'received:boardofstudies.nsw.edu.au': 0.16;
	'received:cskk.homeip.net': 0.16;
	'received:harvey.boardofstudies.nsw.edu.au': 0.16;
	'received:homeip.net': 0.16; 'received:nsw.edu.au': 0.16;
	'subject:pass': 0.16; 'subject:values': 0.16; 'unpacking': 0.16;
	'cc:addr:python-list': 0.16; 'wrote:': 0.16; 'cheers,': 0.18;
	'cc:no real name:2**0': 0.20; 'header:In-Reply-To:1': 0.22;
	'code': 0.25; 'string': 0.26; 'classes': 0.28; 'bit': 0.28;
	'elements': 0.29; 'rid': 0.29; 'cc:addr:python.org': 0.30;
	'example': 0.30; 'accidentally': 0.30; 'construct': 0.30;
	'separated': 0.30; 'tuples': 0.30; 'class': 0.30; 'specified':
	0.31; 'list': 0.32; 'references': 0.32; "isn't": 0.33; 'actually':
	0.33; 'too': 0.33; 'instead': 0.33; 'named': 0.33; 'header:User-
	Agent:1': 0.34; 'subject: ?': 0.34; 'charset:us-ascii': 0.36;
	'properties': 0.36; 'received:au': 0.36; 'cc:2**1': 0.36;
	'useful': 0.36; 'several': 0.37; 'but': 0.37; 'some': 0.38;
	'subject:: ': 0.39; 'enough': 0.39; 'more': 0.60; 'your': 0.61;
	'skip:n 30': 0.62; 'back': 0.62; 'free': 0.63; 'received:202':
	0.66; 'adapt': 0.67; 'cameron': 0.67; 'claims': 0.80
Received: from localhost (HELO mail.python.org) (127.0.0.1)
	by albatross.python.org with SMTP; 07 Oct 2011 12:24:33 +0200
Received: from harvey.boardofstudies.nsw.edu.au
	(mail2.rack1.boardofstudies.nsw.edu.au [202.125.174.133])
	by mail.python.org (Postfix) with ESMTP
	for <python-list@python.org>; Fri,  7 Oct 2011 12:24:32 +0200 (CEST)
Received: from cskk.homeip.net (localhost.localdomain [127.0.0.1])
	by harvey.boardofstudies.nsw.edu.au (Postfix) with ESMTP id B81374D3B5C;
	Fri,  7 Oct 2011 21:24:29 +1100 (EST)
Received: by janus.cskk.homeip.net (Postfix, from userid 1000)
	id 9FD3D100419B7; Fri,  7 Oct 2011 21:24:29 +1100 (EST)
Date: Fri, 7 Oct 2011 21:24:29 +1100
From: Cameron Simpson <cs@zip.com.au>
To: Jean-Michel Pichavant <jeanmichel@sequans.com>
Subject: Re: A tuple in order to pass returned values ?
Message-ID: <20111007102429.GA15713@cskk.homeip.net>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <4E8EC9C2.1080306@sequans.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
References: <4E8EC9C2.1080306@sequans.com>
Cc: python-list@python.org,
	Steven D'Aprano <steve+comp.lang.python@pearwood.info>
X-BeenThere: python-list@python.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: General discussion list for the Python programming language
	<python-list.python.org>
List-Unsubscribe: <http://mail.python.org/mailman/options/python-list>,
	<mailto:python-list-request@python.org?subject=unsubscribe>
List-Archive: <http://mail.python.org/pipermail/python-list>
List-Post: <mailto:python-list@python.org>
List-Help: <mailto:python-list-request@python.org?subject=help>
List-Subscribe: <http://mail.python.org/mailman/listinfo/python-list>,
	<mailto:python-list-request@python.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: python-list-bounces+cs=zip.com.au@python.org
Errors-To: python-list-bounces+cs=zip.com.au@python.org
X-Cats2Procmailrc-Rule: cats/home: python  python-list     sender:python-list-bounces+cs=zip.com.au@python.org
X-Label: python-list
Content-Length: 1612

On 07Oct2011 11:43, Jean-Michel Pichavant <jeanmichel@sequans.com> wrote:
| namedtuple sounds great (if you don't use unpacking :o) ), too bad
| it is available only from python 2.6.

It is easy enough to roll your own.

Here's some example code with several flaws (it claims tuplehood,
but is actually a list; it is not immutable; it takes a list of field
names instead of a space separated string as namedtuple does) and isn't
very tested.

But feel free to take it and adapt it:

  def NamedTupleClassFactory(*fields):
    ''' Construct classes for named tuples a bit like the named tuples
        coming in Python 2.6/3.0.
        NamedTupleClassFactory('a','b','c') returns a subclass of "list"
        whose instances have properties .a, .b and .c as references to
        elements 0, 1 and 2 respectively.
    '''
    class NamedTuple(list):
      for i in range(len(fields)):
        f=fields[i]
        exec('def getx(self): return self[%d]' % i)
        exec('def setx(self,value): self[%d]=value' % i)
        exec('%s=property(getx,setx)' % f)
    return NamedTuple

  def NamedTuple(fields,iter=()):
    ''' Return a named tuple with the specified fields.
        Useful for one-off tuples/lists.
    '''
    return NamedTupleClassFactory(*fields)(iter)

More old code:-( I can see I need to go back to that and make it
cleaner. Surely I can get rid of the exec(0s at least:-)

Cheers,
-- 
Cameron Simpson <cs@zip.com.au> DoD#743
http://www.cskk.ezoshosting.com/cs/

Hacker: One who accidentally destroys.
Wizard: One who recovers afterwards.
-- 
http://mail.python.org/mailman/listinfo/python-list
