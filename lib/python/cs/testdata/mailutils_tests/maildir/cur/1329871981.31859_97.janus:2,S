Return-Path: <python-list-bounces+cs=zip.com.au@python.org>
Delivered-To: unknown
Received: from mail.zip.com.au (125.255.95.3) by janus.home with POP3-SSL; 07
  Oct 2011 22:39:02 -0000
Delivered-To: cs@zipworld.com.au
Received: from mailin4-syd3.pacific.net.au (mailin4-syd3.pacific.net.au [125.255.92.145])
	by mailstore2.syd.pacific.net.au (Postfix) with ESMTP id 97CCB6AE8
	for <cs@zipworld.com.au>; Sat,  8 Oct 2011 09:38:50 +1100 (EST)
Received: from mail.python.org (unknown [82.94.164.166])
	by mailin4-syd3.pacific.net.au (Postfix) with ESMTP id E427D4D80C0
	for <cs@zip.com.au>; Sat,  8 Oct 2011 09:38:49 +1100 (EST)
Received: from albatross.python.org (localhost [127.0.0.1])
	by mail.python.org (Postfix) with ESMTP id 3SFm3V0vWWzPDR
	for <cs@zip.com.au>; Sat,  8 Oct 2011 00:38:46 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=python.org; s=200901;
	t=1318027126; bh=0E1UhsrdfGvPW3PCP7kRUj13ZRu4IwCB7N3LmlDBiXY=;
	h=Date:From:To:Subject:Message-ID:MIME-Version:In-Reply-To:
	 References:Cc:List-Id:List-Unsubscribe:List-Archive:List-Post:
	 List-Help:List-Subscribe:Content-Type:Content-Transfer-Encoding:
	 Sender;
	b=ocRfCncUed1mDr35xix4HkWSAbU9BsGY/sd41sNDGI3K27QM1Mx26SK6TsKy6VAqH
	 jxIiQbUXnDn7eXe3G1kHw7JMGTKDReH0ER3P28KMTuLA2gZkUKylQYeVvUsi+4CBze
	 lx6n6JSK3U8hOguT3W2+Kpwx6Ux9PaDrlBr4jCjg=
X-Original-To: python-list@python.org
Delivered-To: python-list@mail.python.org
Received: from albatross.python.org (localhost [127.0.0.1])
	by mail.python.org (Postfix) with ESMTP id 3SFm0L0rPGzP9s
	for <python-list@python.org>; Sat,  8 Oct 2011 00:36:02 +0200 (CEST)
X-Spam-Status: OK 0.013
X-Spam-Evidence: '*H*': 0.97; '*S*': 0.00; 'received:edu.au': 0.07;
	'subject:issue': 0.07; 'inclined': 0.09; 'output': 0.10;
	'from:addr:cs': 0.16; 'from:addr:zip.com.au': 0.16;
	'from:name:cameron simpson': 0.16; 'instantiate': 0.16;
	'invoking': 0.16; 'message-id:@cskk.homeip.net': 0.16;
	'received:202.125.174': 0.16; 'received:202.125.174.133': 0.16;
	'received:boardofstudies.nsw.edu.au': 0.16;
	'received:cskk.homeip.net': 0.16;
	'received:harvey.boardofstudies.nsw.edu.au': 0.16;
	'received:homeip.net': 0.16; 'received:nsw.edu.au': 0.16;
	'subject:Thread': 0.16; 'subject:handling': 0.16; 'whole,': 0.16;
	'cc:addr:python-list': 0.16; 'wrote:': 0.16; "wouldn't": 0.17;
	'cheers,': 0.18; 'cc:no real name:2**0': 0.20; 'this?': 0.21;
	"doesn't": 0.22; 'cc:2**0': 0.22; 'header:In-Reply-To:1': 0.22;
	'writes:': 0.25; 'paul': 0.28; 'monitor': 0.28; 'problem': 0.28;
	"he's": 0.29; 'cc:addr:python.org': 0.30; 'if,': 0.30; 'object.':
	0.30; 'objects.': 0.30; 'terminate': 0.30; 'threads': 0.30;
	'threads.': 0.30; 'closing': 0.32; 'wondering': 0.33; 'header
	:User-Agent:1': 0.34; 'describe': 0.34; 'flag': 0.34; 'object':
	0.35; 'charset:us-ascii': 0.36; 'received:au': 0.36; 'example,':
	0.37; 'cancel': 0.37; 'query': 0.37; 'thread': 0.37; 'but': 0.37;
	'could': 0.38; 'some': 0.38; 'subject:: ': 0.39; 'event': 0.39;
	'user': 0.39; "there's": 0.39; 'selection': 0.39; "i'd": 0.40;
	'might': 0.40; 'your': 0.61; 'stop': 0.61; 'back': 0.62; 'busy':
	0.65; 'received:202': 0.66; 'discover': 0.67; 'cameron': 0.67;
	'golden': 0.73; 'circumstance': 0.84; 'guts': 0.84; 'inbuilt':
	0.84; 'ton': 0.84; 'killing': 0.91; 'kind.': 0.91; 'wait,': 0.91
Received: from localhost (HELO mail.python.org) (127.0.0.1)
	by albatross.python.org with SMTP; 08 Oct 2011 00:36:02 +0200
Received: from harvey.boardofstudies.nsw.edu.au
	(mail2.rack1.boardofstudies.nsw.edu.au [202.125.174.133])
	by mail.python.org (Postfix) with ESMTP
	for <python-list@python.org>; Sat,  8 Oct 2011 00:36:01 +0200 (CEST)
Received: from cskk.homeip.net (localhost.localdomain [127.0.0.1])
	by harvey.boardofstudies.nsw.edu.au (Postfix) with ESMTP id 9F7B54D3B5C;
	Sat,  8 Oct 2011 09:35:58 +1100 (EST)
Received: by janus.cskk.homeip.net (Postfix, from userid 1000)
	id 85324100419B7; Sat,  8 Oct 2011 09:35:58 +1100 (EST)
Date: Sat, 8 Oct 2011 09:35:58 +1100
From: Cameron Simpson <cs@zip.com.au>
To: Paul <poalman@gmail.com>
Subject: Re: Thread handling issue
Message-ID: <20111007223558.GA5616@cskk.homeip.net>
MIME-Version: 1.0
Content-Disposition: inline
In-Reply-To: <loom.20111007T120618-699@post.gmane.org>
User-Agent: Mutt/1.5.21 (2010-09-15)
References: <loom.20111007T120618-699@post.gmane.org>
Cc: python-list@python.org
X-BeenThere: python-list@python.org
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: General discussion list for the Python programming language
	<python-list.python.org>
List-Unsubscribe: <http://mail.python.org/mailman/options/python-list>,
	<mailto:python-list-request@python.org?subject=unsubscribe>
List-Archive: <http://mail.python.org/pipermail/python-list>
List-Post: <mailto:python-list@python.org>
List-Help: <mailto:python-list-request@python.org?subject=help>
List-Subscribe: <http://mail.python.org/mailman/listinfo/python-list>,
	<mailto:python-list-request@python.org?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: python-list-bounces+cs=zip.com.au@python.org
Errors-To: python-list-bounces+cs=zip.com.au@python.org
X-Cats2Procmailrc-Rule: cats/home: python  python-list     sender:python-list-bounces+cs=zip.com.au@python.org
X-Label: python-list
Content-Length: 1624

On 07Oct2011 10:15, Paul <poalman@gmail.com> wrote:
| Tim Golden <mail <at> timgolden.me.uk> writes:
| > On 07/10/2011 09:29, Paul wrote:
| > > My problem is if the user doesn't select an output location and cancels the
| > > dialog to go back to the selection I want to terminate the thread to avoid the
| > > user opening and closing the output selection firing off a ton of threads.
| > >
| > > As there's no inbuilt way of killing threads I was wondering the best way to
| > > prevent this?
| > 
| > The most common approach is to have the thread monitor an event which is
| > set if, for example, the user cancels. The thread may of course have to
| > wait, for example, for a long-running database query to complete before
| > it can discover that its time has been wasted :)
[...]
| My first thought was to use a flag but wouldn't the new thread see the cancel 
| flag and stop as well? I could set it back but then any other threads might have 
| been busy and not seen it while the flag was on.

I'd be inclined to dispatch threads via a control object of some kind.
You'd have a default one for your program as a whole, but when you have
a circumstance such as you describe instantiate a new control object.
Set the cancel flag in the control objects. Have threads poll their
invoking control object. That way you can have a flag that applies to
your desired set of threads.

Cheers,
-- 
Cameron Simpson <cs@zip.com.au> DoD#743
http://www.cskk.ezoshosting.com/cs/

He's silly and he's ignorant, but he's got guts, and guts is enough.
        - Sgt. Hartmann
-- 
http://mail.python.org/mailman/listinfo/python-list
