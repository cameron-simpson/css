#!/bin/sh -u
#
# Offer a list of files.
# The common code from the bglist command, extracted to do generic selection
# to support picking audio files.
#	- Cameron Simpson <cs@zip.com.au> 01jun2002
#

random=
n=0
gotptns=
anyopt=
filtercmd="awk '{print \$1}'"

cmd=$0
usage="Usage: $cmd [-f filter-cmd] [-r] [-n count] [ptns... [-- directories...]]
	-f filter-cmd	Filter to pick out filenames from the INDEX.
			Default: $filtercmd
	-M mkndx	Command to run to generate the index if needed.
	-U updndx	Command to run to update the index if needed.
	-n count	Choose the first count items.
	-o		\"or\" mode - any pattern may match, not all.
	-r		Randomise output."

mkndx=
updndx=

badopts=
while :
do
    case $1 in
      -n)	n=$2; shift ;;
      -o)	anyopt=-o ;;
      -r)	random=1 ;;
      -M)	mkndx=$2; shift ;;
      -U)	updndx=$2; shift ;;
      -f)	filtercmd=$2; shift ;;
      --)	gotptns=1; shift; break ;;
      -?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
      *)	break ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -n "$mkndx" ] || mkndx="find . -type f -size +0 -print >INDEX"

ptns=

if [ -z "$gotptns" ]
then
    while [ $# -gt 0 ]
    do  case "$1" in
	  --)	gotptns=1; shift; break ;;
	  *)	ptns="$ptns "`shqstr "$1"`; shift ;;
	esac
    done
fi

# no dirs?
[ $# = 0 ] && set .

addfilter()
{ [ -n "$filter" ] && filter="$filter |"
  filter="$filter $*"
}

filter=
[ -n "$ptns" ] && addfilter "grepall -i $anyopt $ptns"

if [ $random ]
then
    shuf=shuffle
    [ "x$n" = x0 ] || shuf="$shuf $n"
    addfilter "$shuf"
else
    addfilter sort
    [ "x$n" = x0 ] || addfilter "sed '${n}q'"
fi

[ -n "$filter" ] || filter=cat

for dir
do
    ndx=$dir/INDEX

    catndx=
    if [ -s "$ndx" ]
    then catndx='cat <"$ndx"'
    else
      if [ -s "$ndx.gz" ]
      then catndx='gunzip <"$ndx.gz"'
      else
	if [ -s "$ndx.bz2" ]
	then catndx='bunzip2 <"$ndx.bz2"'
	fi
      fi
    fi

    if [ -n "$catndx" ]
    then  [ -n "$updndx" ] && eval "( cd \"\$dir\" || exit 1; pwd >&2; set -x; $updndx )"
    else  if [ -n "$mkndx" ]
	  then  eval "( cd \"\$dir\" || exit 1; pwd >&2; set -x; $mkndx )"
	  else  continue
	  fi

	  catndx=
	  if [ -s "$ndx" ]
	  then catndx='cat <"$ndx"'
	  else
	    if [ -s "$ndx.gz" ]
	    then catndx='gunzip <"$ndx.gz"'
	    else
	      if [ -s "$ndx.bz2" ]
	      then catndx='bunzip2 <"$ndx.bz2"'
	      else continue
	      fi
	    fi
	  fi
    fi

    eval "$catndx" \
    | eval "$filtercmd" \
    | sed "s;^[^/];$dir/&;"
done \
| ( eval "$filter"; exec cat >/dev/null )
