#!/bin/sh -u
#
# Run and log a script session.
# Hands the output log to buglog if there is a log message..
#	- Cameron Simpson <cs@zip.com.au> 18may2002
#

cmd=`basename "$0"`
usage="Usage: $cmd [{-M | -m msg}] [-d logdir] {logbase | -u} [{-c shcmd | cmd [args...]}]"

: ${LOGDIR:=$HOME/var/log}
: ${SHELL:=/bin/sh}
: ${TMPDIR:=/tmp}

logdir=$LOGDIR/sessions
msg=
nomsg=
dozip=1
dounlink=

badopts=

while [ $# -gt 0 ]
do
  case "$1" in
    -d)	logdir=$2; shift ;;
    -m)	nomsg= msg=$2; shift ;;
    -M)	nomsg=1 ;;
    -u)	dounlink=1 ;;
    +z)	dozip= ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)	break ;;
  esac
  shift
done

if [ $dounlink ]
then
  logfile=$TMPDIR/$cmd
else
  if [ $# = 0 ]
  then
    echo "$cmd: missing logbase" >&2
    badopts=1
  else
    logfile=$1
    shift
  fi
fi

if [ $# -gt 0 ] && [ "x$1" = x-c ]
then
    # convert -c into explicit command
    shcmd=$2; shift; shift
    [ $# = 0 ] || { echo "$cmd: extra arguments after \"-c shcmd\": $*" >&2
		    badopts=1
		  }
    set -- "$SHELL" -c "$shcmd"
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ $nomsg ] \
|| [ -z "$BUGSYSTEMS" ] \
|| [ -n "$msg" ] \
|| msg=`readbugline` \
|| { echo "$cmd: empty message rejected" >&2; exit 1; }
##echo "msg=[$msg]" >&2

# we only need popSHELL if specific command supplied
if [ $# -gt 0 ]
then
  # adjust to full path of popSHELL because script uses execve, not execvep
  popSHELL=$SHELL
  popSHELLcmd=
  popSHELLpath=
  for d in `dirname "$0"` /opt/css/bin $HOME/scripts
  do  [ -x "$d/popSHELL" ] && { popSHELLpath=$d/popSHELL; break; }
  done
  [ -n "$popSHELLpath" ] || { echo "$cmd: can't find popSHELL script" >&2; exit 1; }
fi

case "$logfile" in
  .)	wd=`pwd` || exit 1
	logfile=`basename "$wd"` || exit 1
	;;
esac
case "$logfile" in
  /* | ./* | ../* ) ;;
  *) logfile=$logdir/$logfile-`datecode` || exit 1 ;;
esac

logdir=`dirname "$logfile"` || exit 1
[ -d "$logdir/." ] || needdir "$logdir" || exit 1

# hideous hack to restore $SHELL inside script command
# because script, curse its negligent author, only runs $SHELL
# rather than an arbitrary command
if [ $# -gt 0 ]
then
    popSHELL=$SHELL
    popSHELLcmd=`shqstr "$@"`
    SHELL=$popSHELLpath
    export SHELL popSHELL popSHELLcmd
fi

{ echo "$HOST @ $SYSTEMID"
  date
  id
  pwd
  echo
} >>"$logfile"

##wd=`pwd|entilde`
##dl "$HOST@$SYSTEMID: $wd: start $popSHELLcmd"

unset DISPLAY
script -a "$logfile"
xit=$?

##dl "$HOST@$SYSTEMID: $wd: end   $popSHELLcmd"

[ $nomsg ] || { [ -n "$BUGSYSTEMS" ] && bgstdin buglog "$msg" <"$logfile"; }
if [ $dounlink ]
then rm "$logfile" || xit=1
else [ $dozip ] && { gzip -v -9 "$logfile" || xit=1; }
fi

exit $xit
