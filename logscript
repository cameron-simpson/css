#!/bin/sh
#
# Run and log a script session.
#	- Cameron Simpson <cs@zip.com.au> 18may2002
#

cmd=`basename "$0"`
logdir=${VARLOG:-"$HOME/var/log"}/sessions
[ "x$1" = x-d ] && { logdir=$2; shift; shift; }
[ $# -ge 1 ] || { echo "Usage: $cmd [-d logdir] logbase [cmd [args...]]" >&2; exit 2; }
logbase=$1; shift

# adjust to full path of popSHELL because script uses execve, not execvep
popshell=$HOME/scripts/popSHELL

logfile=$logdir/$logbase-`datecode`
logdir=`dirname "$logfile"`
[ -d "$logdir/." ] || mkdir -p "$logdir" || exit 1

{ echo
  echo "$HOST @ $SYSTEMID"
  date
  id
  echo
} >>"$logfile"

# hideous hack to restore $SHELL inside script command
# because script, curse its negligent author, only runs $SHELL
# rather than an arbitrary command
# this hack will break quoting
[ $# = 0 ] \
	|| { popSHELL=$SHELL popSHELLexec=$*; export popSHELL popSHELLexec
	     SHELL=$popshell; export SHELL
	   }

wd=`pwd|entilde`
dlog "$HOST@$SYSTEMID: $wd: start $popSHELLexec"
script -a "$logfile"
xit=$?
dlog "$HOST@$SYSTEMID: $wd: end   $popSHELLexec"

gzip -v -9 "$logfile"

exit $xit
