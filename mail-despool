#!/bin/sh -u
#
# Process all messages in a maildir or MH dir against the dir's .procmailrc.
#	- Cameron Simpson <cs@zip.com.au> 30oct2005
#

: ${MAILDIR:=$HOME/mail}
: ${TMPDIR:=/tmp}

cmd=`basename "$0"` || cmd=$0
usage="Usage: $cmd [-d delay] [-f procmailrc] [-l lockname] maildir"

trace=set-x
delay=
procmailrc=
lock=mail-despool-$$

badopts=

while [ $# -gt 0 ]
do
  case $1 in
    -d)	delay=$2; shift ;;
    -f)	procmailrc=$2; shift ;;
    -l)	lock=$2; shift ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
	badopts=1
	;;
    *)	break ;;
  esac
  shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing maildir" >&2
  badopts=1
else
  maildir=$1; shift
  [ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2; badopts=1; }
fi

case "$maildir" in
  +*) maildir=$MAILDIR/`expr "x$maildir" : 'x.\(.*\)'` || exit 1 ;;
esac

ismaildir "$maildir" \
|| ismhdir "$maildir" \
|| { echo "$cmd: $maildir: must be a maildir or an MH dir" >&2
     badopts=1
   }
[ -n "$procmailrc" ] || procmailrc=$maildir/.procmailrc
case "$procmailrc" in
  /*) ;; *) procmailrc=`/bin/pwd`/$procmailrc || exit 1 ;;
esac
[ -f "$procmailrc" -a -s "$procmailrc" ] \
	|| { echo "$cmd: no procmailrc: $procmailrc" >&2
	     badopts=1
	   }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

cd "$maildir" || exit 1

busyflag=$TMPDIR/mail-despool.$$busy

xit=0

while :
do
  # locate new items
  havenew=
  if ismaildir .
  then
    havenew=1
    set -- cur/* new/*
    [ $# = 2 ] && [ "x$1" = 'xcur/*' -a "x$2" = 'xnew/*' ] && havenew=
  else
    if ismhdir .
    then
      havenew=1
      set -- [1-9]*
      [ $# = 1 ] && [ "x$1" = 'x[1-9]*' ] && havenew=
    else
      set --
    fi
  fi

  rm -f "$busyflag"
  if [ $havenew ]
  then
    lock "$lock" \
      env "trace=$trace" "busyflag=$busyflag" "procmailrc=$procmailrc" \
      sh -uc '
	xit=0
	for f
	do
	  [ -s "$f" ] || continue
	  { $trace procmail "$procmailrc" <"$f" && $trace rm -- "$f" && touch "$busyflag"; } || xit=1
	done
	exit $xit
      ' \
    || xit=1
  fi

  [ -n "$delay" ] || break
  if [ -f "$busyflag" ]
  then $trace sleep 1
  else $trace sleep "$delay"
  fi
done

exit $xit
