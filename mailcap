#!/bin/sh
#
# Return the mailcap action for the supplied MIME type.
#	- Cameron Simpson <cs@zip.com.au> 14nov2002
#

mailcap=$HOME/.mailcap

copious=1
action=1
subfile=

cmd=$0
usage="Usage: $cmd [-a] [+a] [-c] [+c] [-m mailcap] [-s subfile] mimetype
	-a	Just print the action portion of the mailcap entry (default).
	+a	Print the whole mailcap entry.
	-c	Select the \"copiousoutput\" mailcap entry (default).
	+c	Avoid the \"copiousoutput\" mailcap entry.
	-m mailcap Specify the mailcap file.
	-s subfile Replace any %s with subfile, correctly quoted.
		   Actions with no %s get the it as stdin."

badopts=

while :
do  case $1 in
      -a)	action=1 ;;
      +a)	action= ;;
      -c)	copious=1 ;;
      +c)	copious= ;;
      -m)	mailcap=$2; shift ;;
      -s)	subfile=$2; shift ;;
      --)	shift; break ;;
      -?*)	echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
      *)	break ;;
    esac
    shift
done

if [ $# = 0 ]
then
  echo "$cmd: missing mime type" >&2; badopts=1
else
  mtype=$1; shift
  [ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2; badopts=1; }
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ $copious ]
then  match=`grep "^$mtype"' *;.*; *copiousoutput *$' <"$mailcap" | sed 1q`
else  match=`grep "^$mtype"' *;' <"$mailcap" | grep -v '.*; *copiousoutput *$' | sed 1q`
fi

[ -n "$match" ] || exit 1

[ $action ] || { echo "$match"; exit 0; }

# clean up the mailcap line
sedcmd='s/^[^;]*; *//
        s/ *;[^;]*$//'

if [ -n "$subfile" ]
then
    subfile=`shqstr "$subfile"`
    match=`sedstrs "$sedcmd" "$match"`
    case "$match" in
	*'%s'*)	sedcmd="$sedcmd
			s%s$subfileg" ;;
	*)	sedcmd="$sedcmd
			s^exec <$subfile; " ;;
    esac
fi

echo "$match" | sed -e "$sedcmd"
