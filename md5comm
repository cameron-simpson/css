#!/usr/bin/perl
#
# Compare two md5index outputs after the fashion of comm(1),
# producing 4 columns of output:
#	files present only in the first listing, or different
#	files present only in the second listing, or different
#	files present and the same in both, column 3 is the name in the first
#					    index and 4 is the name in the
#					    second
# - Cameron Simpson <cs@zip.com.au> 20jun2000
#

use cs::Misc;

$::Usage="Usage: $::cmd [-[123]] list1 list2\n";

my $col1=1;
my $col2=1;
my $col3=1;

if ($ARGV[0] =~ /^-[123]+$/)
{ $_=shift(@ARGV);
  while (/[123]/)
  { eval "\$col$&=0";
    $_=$';
  }
}

if (@ARGV != 2)
{ die $::Usage;
}

$::Xit=0;

my %L1;	my %F1;
my %L2;	my %F2;

if ($ARGV[0] eq '-')
{ $F1=STDIN;
}
elsif (! open(F1, "< $ARGV[0]\0"))
{ warn "$::cmd: open($ARGV[0]): $!\n";
  $::Xit=1;
}
else
{ $F1=F1;
}

if ($ARGV[1] eq '-')
{ $F2=STDIN;
}
elsif (! open(F2, "< $ARGV[1]\0"))
{ warn "$::cmd: open($ARGV[1]): $!\n";
  $::Xit=1;
}
else
{ $F2=F2;
}

die "$::cmd: can't open both lists, aborting\n" if $::Xit != 0;

load($F1,\%L1);
load($F2,\%L2);

my @c;
my @p;

for my $f (sort &::uniq(keys %L1, keys %L2))
{
  $c[0]=( exists $L1{$f} && ( ! exists $L2{$f} || $L1{$f} ne $L2{$f} )
	  ? $f : ''
	);
  $c[1]=( exists $L2{$f} && ( ! exists $L1{$f} || $L1{$f} ne $L2{$f} )
	  ? $f : ''
	);
  $c[2]=( exists $L1{$f} && exists $L2{$f} && $L1{$f} eq $L2{$f}
	  ? $f : ''
	);

  @p=();

  push(@p,$c[0]) if $col1;
  push(@p,$c[1]) if $col2;
  push(@p,$c[2]) if $col3;

  if (grep(length,@p))
  { print join("\t",@p), "\n";
  }
}

exit $::Xit;

sub load($$)
{ my($F,$L)=@_;

  while (defined($_=<$F>))
  { chomp;
    if (/^(\S+)\s+(\S)/)
    { $L->{$2.$'}=$1;
    }
    else
    { warn "$::cmd: $F, line $.: bad format: $_\n";
      $::Xit=1;
    }
  }
}
