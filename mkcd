#!/bin/sh
#
# Create a CD from an ISO image.
# Partner for mkiso.
# Only does single session CDs.
# Calls mkiso if handed a directory instead of an ISO9660 image.
#	- Cameron Simpson <cs@zip.com.au> 12jul2000
#

scsiid=4	# for my work CD burner, 6 is also common
speed="speed=12"
blank=
dummy=
dev=${MKCDDEV:+dev=$MKCDDEV}

# override scsiid or speed or blank here
[ -f /etc/mkcdrc ] && . /etc/mkcdrc
[ -f $HOME/.mkcdrc ] && . $HOME/.mkcdrc
[ -n "$dev" ] || dev="dev=0,$scsiid,0"

cmd=`basename "$0"`
usage="Usage: $cmd [-n] [dev=device] [speed=n] [blank=mode] image.iso
	-l label	Label string (only useful if \"image.iso\" is
			a directory instead of an ISO9660 image.
			(VOLI field, up to 32 bytes).
	-n		No action (cdrecord's -dummy flag).
	dev=device	Passed to cdrecord.
			Default: $dev
	speed=n		Passed to cdrecord.
	blank=mode	Passed to cdrecord."

badopts=
label=
while :
do  case $1 in
      -l)	label=$2; shift ;;
      -n)	dummy=-dummy ;;
      --)	shift; break ;;
      -?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
      *)	break ;;
    esac
    shift
done

# catch dev=blah, speed=blah, etc
while :
do  case $1 in
      dev=?*)	dev=$1 ;;
      speed=?*)	speed=$1 ;;
      blank=?*)	blank=$1 ;;
      *)	break ;;
    esac
    shift
done

if [ $# = 0 ]
then
    echo "$cmd: missing image.iso" >&2
    badopts=1
else
    iso=$1; shift
    [ $# = 0 ] || { echo "$cmd: extra arguments: $*" >&2
		    badopts=1
		  }
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

ok=1

if [ -d "$iso/." ]
then
    tmpiso=mkcd$$.iso
    mkiso -l "$label" -o "$tmpiso" "$iso" \
	|| { echo "$cmd: mkiso fails" >&2; rm -f "$tmpiso"; exit 1; }
    iso=$tmpiso
else
    tmpiso=
fi

[ -s "$iso" ] || { echo "$cmd: need nonempty file: $iso" >&2; ok=; }

if [ $ok ]
then
    set -x
    cdrecord -v $dummy -eject $speed $blank "$dev" -data "$iso"
    xit=$?
    set +x
else
    xit=1
fi

[ -n "$tmpiso" ] && rm -f "$tmpiso"

exit $xit
