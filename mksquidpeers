#!/bin/sh
#
# Emit cache_peer and never_direct directives for insertion into a squid.conf.
#	- Cameron Simpson <cs@zip.com.au> 26dec2004
#

trace=set-x
fwmode=
dfltports='8080 3128'
dflticp=3130

cmd=$0
usage="Usage: $cmd [-fw] [=][peer:[ports][:[icpport]]...
	-fw	Emit suitable firewall control commands instead.
	Leading \"=\" implies sibling cache instead of parent.
	Omitted ports default to \"$dfltports\".
	Omitted icp defaults to \"$dflticp\"."

[ "x$1" = x-fw ] && { fwmode=1; shift; }

if [ $# = 0 ]
then
  echo "$cmd: no squid peers!" >&2
  exit 0
fi

for peer
do
  icp=
  ports=
  isparent=1
  case $peer in
    =*)		isparent=
		peer=`expr "x$peer" : '..\(.*\)'`
		;;
  esac
  case $peer in
    *:*:*)	icp=`expr "x$peer" : 'x.*:\(.*\)'`
		[ -n "$icp" ] || icp=$dflticp
		peer=`expr "x$peer" : 'x\(.*\):.*'`
		;;
  esac
  case $peer in
    *:*)	ports=`expr "x$peer" : 'x.*:\(.*\)' | tr , ' '`
		[ -n "$ports" ] || ports=$dfltports
		peer=`expr "x$peer" : 'x\(.*\):.*'`
		;;
    *)		ports=$dfltports
		;;
  esac

  if [ $fwmode ]
  then
    for port in $ports
    do  $trace fw-tcp-out "$port" "$peer"
    done
    [ -n "$icp" ] && $trace fw-udp-out "$icp" "$peer"
  else
    for port in $ports
    do
      options=
      if [ $isparent ]
      then  peertype=parent
      else  peertype=sibling
      fi
      if [ -n "$icp" ]
      then  icpport=$icp
      else  icpport=0 options="$options no-query"
      fi
      echo "cache_peer $peer $peertype $port $icpport $options"
    done
  fi
done
