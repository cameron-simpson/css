#!/bin/sh
#
# mobile	Site specific network config.
#
# For a roving RedHat laptop.
# Needed: /etc/sysconfig/network-scripts/ifcfg-eth0.* with ONBOOT=no
# and a dummy ifcfg-eth0 for picky redhat startup scripts.
# Cameron Simpson <cs@zip.com.au> 25jun2000
#
# Subsume the if{up|down}@* scripts into this, move config into file.
# - cameron 06feb2001
#
# chkconfig: 2345 10 90
# description: Activates/Deactivates the network interfaces suitable to a \
#              location as specified by the /etc/rc.mobile.conf file.
# probe: true
#

cmd=$0
trace=set-x

PATH=$PATH:/sbin:/opt/css
export PATH

# See how we were called.
case "$1" in
  start)
	shift
	action=up
	int=1
        ;;
  stop)
	shift
	action=down
        ;;
  restart)
	shift
	$trace "$cmd" stop && $trace "$cmd" start ${1+"$@"}
	exit $?
	;;
  *)
        echo "Usage: $cmd {start|stop|restart}" >&2
        exit 1
esac

where=${SYSTEMID:-home}
cf=/etc/rc.mobile.conf

badopts=
while :
do  case $1 in
	-i)	int=1 ;;
	-a)	action=$2; shift ;;
	-f)	cf=$2; shift ;;
	-h)	HOST=$2; shift ;;
	--)	shift; break ;;
	-?*)	echo "$cmd: unrecognised option: $1" >&2
	      badopts=1
	      ;;
	*)	break
	      ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -s "$cf" ] || { echo "$cmd: missing config file $cf" >&2; exit 1; }

# we want the short hostname
[ -n "$HOST" ] || { HOST=${HOST:-`hostname`}
		    case $HOST in
			*.*) HOST=`expr "x$HOST" : 'x\([^.]*\).*'` ;;
		    esac
		  }
export HOST

locations=none\ `sed -n -e '/^#/d' -e 's/^\\[\\(.*\\)\\]$/\\1/p' "$cf"`

# ask for info if interactive
if [ $int ]
then
    echo "$cmd - bring up interface according to location"
    echo -n "I know ["$locations"] Where am I [$where]? "
    read iwhere || { echo; exit 1; }
    [ -n "$iwhere" ] && where=$iwhere
fi

[ "x$where" = xnone ] && exit 0

config=`sed -e '/^#/d' -e "/^\\[$where\\]\\$/,/^\\[/!d" -e '/^[a-zA-Z][a-zA-Z_0-9]*=/!d' -e 's/^[a-z]/x_&/' -e 's/^[A-Z]/cf_&/' "$cf"`
[ -n "$config" ] || { echo "$cmd: $cf: no config for [$where]" >&2; exit 1; }

# RH public config vars
cfvars=
for var in DEVICE BOOTPROTO IPADDR NETMASK GATEWAY
do  cfvars="$cfvars $var"
    eval "cf_$var="
done
cf_DEVICE=eth0
cf_BOOTPROTO=static

# rc.mobile private config vars
xvars=
for var in dns domains subsys
do  xvars="$xvars $var"
    eval "x_$var="
done
x_dns=
x_domains=
x_subsys=

eval "$config"

cfgname=$cf_DEVICE.$where
cfg=/etc/sysconfig/network-scripts/ifcfg-$cfgname

echo "cfg=[$cfg]"

# write config file
(
  echo ONBOOT=no
  for var in $cfvars
  do  eval "val=\$cf_$var"
      [ -n "$val" ] && echo "$var=$val"
  done
) >"$cfg"

[ -s "$cfg" ] || { echo "$cmd: can't make config file $cfg" >&2; exit 1; }

case "$action" in
   up)
    echo "Bringing up loopback interface..."; ifup ifcfg-lo
    $trace ifdown "$cf_DEVICE"
    $trace ifup "$cfgname" || exit 1
    [ -n "$cf_GATEWAY" ] && $trace route add default gw "$cf_GATEWAY"

    [ -n "$x_dns" ] && { echo "nameserver $x_dns"
			 echo "search $x_domains"
		       } >/etc/resolv.conf
    if [ -s "/etc/exports.$where" ]
    then  cat "/etc/exports.$where"
    fi >/etc/exports
    $trace exportfs -a

    for subsys in portmap syslog $x_subsys
    do  $trace /etc/init.d/$subsys restart
    done
    ;;

  down)
    [ -n "$cf_GATEWAY" ] && $trace route del default
    $trace ifdown "$cf_DEVICE" || exit 1
    ;;

  *)
    echo "$0: unknown action \"$action\"" >&2
    exit 2
    ;;

esac
