#!/bin/sh
#
# mobile	Site specific network config.
#
# For a roving RedHat laptop.
# Needed: /etc/sysconfig/network-scripts/ifcfg-eth0.* with ONBOOT=no
# and a dummy ifcfg-eth0 for picky redhat startup scripts.
# Cameron Simpson <cs@zip.com.au> 25jun2000
#
# Subsume the if{up|down}@* scripts into this, move config into file.
# - cameron 06feb2001
#
# chkconfig: 2345 10 90
# description: Activates/Deactivates the network interfaces suitable to a \
#              location as specified by the /etc/rc.mobile.conf file.
# probe: true
#

cmd=$0
usage="Usage: $cmd {start|stop|restart}"

trace=echo	## set-x

PATH=$PATH:/sbin:/opt/css/bin
export PATH

# See how we were called.
mode=$1; shift

case "$mode" in
  start)action=up
	int=1
        ;;
  stop) action=down
        ;;
  restart)
	$trace "$cmd" stop && $trace "$cmd" start ${1+"$@"}
	exit $?
	;;
  *)	echo "usage" >&2
        exit 1
esac

where=${SYSTEMID:-home}
cf=/etc/rc.mobile.conf

badopts=
while :
do  case $1 in
	-i)   int=1 ;;
	-a)   action=$2; shift ;;
	-f)   cf=$2; shift ;;
	-h)   HOST=$2; shift ;;
	--)   shift; break ;;
	-?*)  echo "$cmd: unrecognised option: $1" >&2
	      badopts=1
	      ;;
	*)    break
	      ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -s "$cf" ] || { echo "$cmd: missing config file $cf" >&2; exit 1; }

# we want the short hostname
[ -n "$HOST" ] || { HOST=${HOST:-`hostname`}
		    case $HOST in
			*.*) HOST=`expr "x$HOST" : 'x\([^.]*\).*'` ;;
		    esac
		  }
export HOST

locations=none\ `sed -n -e '/^#/d' -e 's/^\\[\\([a-z].*\\)\\]$/\\1/p' "$cf"`

# ask for info if interactive
if [ $int ]
then
    echo "$cmd - bring up interface according to location"
    echo -n "I know ["$locations"] Where am I [$where]? "
    read iwhere || { echo; exit 1; }
    [ -n "$iwhere" ] && where=$iwhere
fi

[ "x$where" = xnone ] && exit 0

doclause()
{
  clause=$1
  winclause "$cf" "$clause"
  | sed -e 'y/	/ /' \
	-e 's/^  *//' \
	-e '/^#/d' \
	-e '/^$/d' \
  | while read op etc
    do
      case "$op" in
	use)	doclause "$etc"
		;;
	/*/)	from=`expr "x$from" : 'x\(.*\)/'`
		for d in $from.$clause $from.DFLT
		do  [ -d "$d/." ] && { from=$d; break; }
		done
		if [ -d "$from/." ]
		then
		  if [ -d "$to/." ] || mkdir "$to"
		  then
		    $trace rsync -aH "$from/." "$to/."
		  fi
		fi
		;;
	/*)	from=/dev/null
		for f in $op.$clause $op.DFLT
		do  [ -f "$f" ] && { from=$f; break; }
		done
		to=$op
		$trace cp -p "$from" "$to"
		;;
	svc)	for svc in $etc
		do
		  rc=/etc/init.d/$etc
		  if [ -s "$rc" ]
		  then
		    $trace "$rc" "$mode"
		  else
		    echo "$cmd: no init file named $rc" >&2
		  fi
		done
		;;
	*)	echo "$cmd: unrecognised operator \"$op\": $op $etc" >&2
		;;
      esac
    done
}

doclause GLOBAL
doclause "$where"
