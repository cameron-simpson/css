lib/python/cs/app/playon.py: cs.app.playon: tweak Upd usage
lib/python/cs/app/playon.py: cs.app.playon: move some core stuff off into cs.service_api.HTTPServiceAPI
lib/python/cs/app/playon.py: merge playon ==> default: playon: move some core things to cs.service_api
lib/python/cs/app/playon.py: cs.app.playon: PlayOnAPI: generic requests stuff moved to cs.service_api.HTTPServiceAPI, override suburl() method with playon specific default authorization header
lib/python/cs/app/playon.py: merge default ==> playon
lib/python/cs/app/playon.py: cs.tagset,cs.app.playon: move core Recording.is_stale() method to TagSet.is_stale(), leave override method behind
lib/python/cs/app/playon.py: cs.app.playon: PlayOnAPI.queue,recordings: use a db autosession to persist updated information
lib/python/cs/app/playon.py: cs.app.playon: PlayOnCommand._refresh_sqltags_data: simplify the staleness check - recording.is_expired implies not recording.is_stale anyway
lib/python/cs/app/playon.py: cs.app.playon: update docstring, streamline pfx context
lib/python/cs/app/playon.py: cs.app.playon: new LoginState(SQLTagSet) class for the persistent login information.
lib/python/cs/app/playon.py: cs.app.playon,cs.service_api: new ServiceAPI.available() method; new PlayOnAPI.available alias for PlayOnAPI.recordings
lib/python/cs/app/playon.py: cs.app.playon: PlayOnAPI._recordings_from_entries: recognise when the playon.Name begins with an sSSeEE prefix and strip it, setting playon.Season and playon.Episode
lib/python/cs/app/playon.py: cs.app.playon: allow interrupting downloads
lib/python/cs/app/playon.py: cs.app.playon: Recording: new series_prefix format attribute to prefix a "series--sSSeEE--" prefix or "" based on the playon.Series,Season,Episode tags; use it in the download filename format
lib/python/cs/app/playon.py: cs.app.playon: update DISTINFO
