lib/python/cs/ebooks/calibre.py lib/python/cs/ebooks/kindle.py lib/python/cs/ebooks/kobo.py lib/python/cs/ebooks/pdf.py: cs.*: changes to accomodate dropping BaseCommandOptions.runstate
lib/python/cs/ebooks/calibre.py: cs.*: we also dropped BaseCommandOptions.upd in favour of @uses_upd; related lint cleanups
lib/python/cs/ebooks/calibre.py: CalibreMetadataDB.__init__: let the superclass set self.db_url
lib/python/cs/ebooks/dedrm.py: replace many raises of RuntimeError with NotImplementedError, suggestion by @dimaqq on disucss.python.org
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: DeDRMCommand.cmd_kindlekeys: new "print" subcommand to display the keys readably
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: fix print
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: fix some binary transcriptions
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: DictObject.__getattr__: break out the promotion from the try/except
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: improve warning
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: PDFDocument.parse: make the fallback search for "endstream" not require a preceding line ending
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: PDFPage.__getitem__: resolve the indirect object
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: PDFCommand.cmd_scan: scan the whole document, tweak output, cope with page.Resources with no .object
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: docstring updates
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: PDFDocument: parse: initial "scan just a single object definition" mode implementation, new scan_obj method to invoke it
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: drop .values and .tokens as attributes of the PDFDocument, just locals for parsing, and drop tokens entirely
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: add comment, get a yield outside a Pfx(), drop debugging "break"
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: make PDFDocument.objmap a PDFObjectMapping(dict) with a __missing__ method to consult the object xref
lib/python/cs/ebooks/pdf.py: cs/ebooks.pdf: PDFDocument: now that it is simpler, supply out own __init__ which hooks the obj_xref to the document
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: new mmap_pdf to prepare a PDFDocument by mmapping the file and loading the trailer and object xref table - incomplete
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: ObjectXref = Union[FreeObjectXref, InUseObjectXref]
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: PDFCommand: new cmd_mmap to test reading a PDF random access using mmap
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: mmv_read_startxref: working implementation
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: update imports
lib/python/cs/ebooks/pdf.py: cs.ebooks.pdf: first cut at mmv_read_trailer_dict to locate and read the trailer dictionary, incomplete
lib/python/cs/ebooks/pdf.py: merge recent pdf => ebooks
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: DeDRMCommand.USAGE_FORMAT: summary sentence
lib/python/cs/ebooks/kindle.py: cs.ebooks.kindle: KindleCommand.USAGE_FORMAT: summary sentence
lib/python/cs/ebooks/calibre.py: cs.ebooks.calibre: CalibreCommand.USAGE_FORMAT: summary sentence
lib/python/cs/ebooks/dedrm.py: merge default -> vt
lib/python/cs/ebooks/calibre.py: cs.ebooks.calibre: CalibreCommand,CalibreCommandOptions: compute options.calibre_path_other and options.linkto_dirpath in CalibreCommand.run_context due to the help being computed before CalibreCommand if publicly known
lib/python/cs/ebooks/calibre.py: cs.ebooks.calibre: CalibreMetadataDB.shell: pass stdin=sys.stdin
lib/python/cs/ebooks/kindle.py: cs.ebooks.kindle: KindleTree.__init__: shuffle @require and @typechecked
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: getLibCrypto: record fix for "python3 is loading libcrypto in an unsafe way" crash
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: kindlekeys: new "base" subcommand to read the base system's Kindle keys
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: update subcommand usage
lib/python/cs/ebooks/kindle.py: cs.ebooks.kindle: KindleCommand: new cmd_keys which runs "dedrm kindlekeys"
lib/python/cs/ebooks/calibre.py: cs.ebooks.calibre: CalibreTree.preload: drop @uses_upd
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: usage updates
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: DeDRMWrapper.remove: copy any fstags from the src to the dst
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: DeDRMWrapper: only load the base_kindlekeys once
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: bugfix monkey patch of dedrm.temporary_file, it was removing the decrypted file before it could be used by the caller
lib/python/cs/ebooks/dedrm.py: cs.ebooks.dedrm: remove debug comment
