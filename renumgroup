#!/bin/sh -u
#
# Renumber a group.
#	- Cameron Simpson <cs@zip.com.au> 01jul2005
#

groupfile=/etc/group
trace=set-x

cmd=`basename "$0"`
usage="Usage: $cmd [-f groupfile] groupname newgid"

badopts=

[ $# -gt 0 ] && [ "x$1" = x-f ] && { groupfile=$2; shift; shift; }

if [ $# = 0 ]
then
  echo "$cmd: missing groupname" >&2
  badopts=1
else
  groupname=$1; shift
  if [ $# = 0 ]
  then
    echo "$cmd: missing newgid" >&2
    badopts=1
  else
    newgid=$1; shift
    [ $# = 0 ] || { echo "$cmd: extra arguments after newgid: $*" >&2
		    badopts=1
		  }
  fi

  case "$groupname" in
    '' | *[^a-z]* | *:* | *-* )
      echo "$cmd: bad groupname \"$groupname\"" >&2; badopts=1
      ;;
  esac
fi

[ -s "$groupfile" ] || { echo "$cmd: $groupfile: not a file" >&2; badopts=1; }

[ $badopts ] && { echo "$usage" >&2; exit 2; }

# look up groupname, note old gid
oldgid=`awk -F: "\\$1 == \\"$groupname\\" {print \\$3}" "$groupfile"` || exit 1
[ -n "$oldgid" ] || { echo "$cmd: $groupfile: no line for groupname \"$groupname\"" >&2
		      exit 1
		    }
# look up new gid, whinge if already in use
if grep "^[^:]*:[^:]*:$newgid:" "$groupfile" >&2
then
  echo "$cmd: existing group above conflicts with new gid $newgid for $groupname" >&2
  exit 1
fi

$trace bsed "/^$groupname:[^:]*:$oldgid:/{
		h
		s/:/-oldgid:/
		x
		s/^\\($groupname:[^:]*\\):$oldgid:/\\1:$newgid:/
		x
		G
	     }" "$groupfile" \
|| exit 1

echo rechgrp -f "$groupfile" "$oldgid" "$newgid" dirs...
