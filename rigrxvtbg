#!/bin/sh
#
# Regularly run setrxvtbg in the background, then exec command if supplied.
#	- Cameron Simpson <cs@zip.com.au> 31aug2000
#

cmd=`basename "$0"`
usage="Usage: $cmd [-f] [-p shellpid] [-i interval] [/keywords] [cmd [args...]]"

force=
shellpid=$$
period=${RXVTBGINTERVAL:-60}
keywords=

badopts=
while :
do
  case $1 in
    -p)	shellpid=$2; shift ;;
    -i)	period=$2; shift ;;
    -e)	shift; break ;;
    -f)	force=1 ;;
    /?*) keywords=`expr "x$1" : 'x/\(.*\)' ` ;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2
	badopts=1
	;;
    *)	break ;;
  esac
  shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

# notice resizes - doesn't seem to work - shell job control to blame?
[ -n "$SIGWINCH" ] && trap '( lock -s setrxvtbg setrxvtbg & )' "$SIGWINCH"

if [ $force ] \
|| { wantrxvtbg \
  && xrdb -query | grep 'DORXVTBG:.*true' >/dev/null
   }
then
    RXVTBGLOG=`rxvtbglog`
    export RXVTBGLOG
    (
      while kill -0 "$shellpid"
      do  rawx lock "setrxvtbg@$HOST" nice setrxvtbg -l "$RXVTBGLOG" $keywords
	  sleep "$period" || break
      done
    ) &
fi

[ $# = 0 ] || exec "$@"
