#!/bin/sh
#
# Set the root backdrop.
#	- Cameron Simpson <cs@zip.com.au> 20nov2000
#
# -xpl for xplanet support - cameron 30nov2000
#

##alert "$0 $*"

cmd=$0
usage="Usage: $0 [-m] [-s] [-d dim] [-xpl] [{imagefile|ptns...}]
	-M	Popup FVWM menu to pick from choices.
	-m	Set the menu background as well.
	-s	Synchronous.
	-t	Select tall images (default wide).
	-w	Select wide images (default).
	-a	Select any images (default wide).
	-d dim	Set dimming factor.
	-xpl	Use xplanet for the background."

[ -n "$DISPLAY" ] || { echo "$cmd: no \$DISPLAY!" >&2; exit 1; }

tmp=${TMPDIR:-/tmp}

sync=
xplanet=
convopts='-d 0.6'
domenubg=
domenu=
pickn=1
aspect=-w
strippfx=

badopts=
while :
do  case $1 in
        -xpl)	xplanet=1 ;;
	-M)	pickn=20 aspect= domenu=1 strippfx=$HOME ;;
	-m)	domenubg=1 ;;
	-[tw])	aspect=$1 ;;
	-a)	aspect= ;;
	-s)	sync=1 ;;
	-d)	convopts="$convopts -d $2"; shift ;;
	--)	shift; break ;;
	-?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
	*)	break ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ $# = 1 -a -f "$1" -a -s "$1" ]
then
    # one argument which is a file
    domenu=
else
    case "$#,$1" in
      1,http://*)
	# one argument which is a URL
	exec withurl -C "$1" "$0"
	;;
    esac

    set x `set -x; pickim -P "$strippfx" -n $pickn -r $aspect ${1+"$@"} | sort -u` || exit 1
    shift
    [ $# = 0 ] && exit 1
    [ $# = 1 ] && domenu=
fi

if [ $domenu ]
then
    tmpf=/tmp/rootbg$$
    for arg
    do  echo "$arg"
    done >"$tmpf"
    fvwmcmd \
	  "Piperead 'fvwm-menu -1 ImDirMenu \"$cmd $call\" fvwm-menu-imlist -o rootbg -l $tmpf .; rm $tmpf'" \
	  "Popup ImDirMenu"
    exit $?
fi

imagefile=$1
echo "$imagefile" >>$HOME/var/log/rootbg

if [ $xplanet ]
then
    imdir=$HOME/im
    backdrop=$imagefile
    projdir=$imdir/projections
    clouddir=$projdir
    clouds=$clouddir/clouds_2000.jpg
    ssecclouds=$clouddir/latest_moll.gif
    nightside=$projdir/earthlights-dmsp-big.jpg
    dayside=$projdir/earth-2400.jpg

    # pick a view on the Sydney side of the planet
    lat=`tzcoord.pl Sydney | perl -e '$_=<STDIN>; /^([^.]+)/ || die; srand((time^$$)+getppid()); print int($1-89.5+rand(180))'`

    ## -demfile "$dem" -grid
    ## -cloud_ssec "$ssecclouds" \
    nice xplanet \
	    -background "$backdrop" \
	    -blend \
	    -cloud_image "$clouds" \
	    -image "$dayside" \
	    -label -labelpos -15-15 \
	    -markers \
	    -night_image "$nightside" \
	    -observer "$lat,0" \
	    -radius 40 \
	    -root \
	    ${1+"$@"} \
	    &

    exit 0
fi

##set -vx
umask 077

[ $domenubg ] && menubg "$imagefile" &

tmpdir=`mkdirn "$tmp/rootbg"` || exit 1
cp "$imagefile" "$tmpdir/." || exit 1
lastvalue rootbg "$imagefile" &

imagefilebase=`basename "$imagefile"`
imagefiledir=`dirname "$imagefile"`
bgx=$X11_BGX bgy=$X11_Y
cachedir=$HOME/tmp/cache/bg/${bgx}x${bgy}/$imagefiledir
cachefile=$cachedir/$imagefilebase.png

if [ -s "$cachefile" ]
then
    fvwm-root --retain-pixmap "$cachefile"
else
    ( cd "$tmpdir" || exit 1
      img=$imagefilebase
      sfx=`expr "x$img" : 'x.*\.\([^.]*$\)'`
      base=`basename "$img" ".$sfx"`
      final=$base.PNG
      set /opt/ImageMagick/bin/mogrify -quality 0 -background black -geometry "${bgx}x${bgy}" -format PNG

      # see if we need to letterbox or something
      ix= iy=
      eval `imsize "$img" | awk '{print "ix="$1 " iy="$2}'`
      if [ -n "$ix" -a -n "$iy" ]
      then
	  awkf="BEGIN { ix=$ix; iy=$iy; bgx=$bgx; bgy=$bgy"'
			w=bgx; h=bgy
		      }
		END   { if (ix > bgx || iy > bgy)
			  # too big - shrink
			  if (ix/bgx > iy/bgy)
			    # shrink X more than Y
			    h=int(iy * (bgx/ix))
			  else
			    # shrink Y more than X
			    w=int(ix * (bgy/iy))
			   
			else
			# smaller image - scale up
			if (bgx/ix < bgy/iy)
			  # scale X less - use that
			  h=iy*bgx/ix
			else
			  # scale Y less
			  w=ix*bgy/iy

			crop=0
			bx=int((bgx-w)/2+0.5)
			if (bx == 0) { bx=1; by++; crop=1; }
			by=int((bgy-h)/2+0.5)
			if (by == 0) { by=1; bx++; crop=1; }
			print "bx="bx " by="by " crop="crop
		      }'
	  eval `awk "$awkf" </dev/null`
	  if [ "$bx" -gt 0 -o "$by" -gt 0 ]
	  then
	      set "$@" -bordercolor "$BG" -border "${bx}x${by}"
	  fi
	  if [ "$crop" != 0 ]
	  then
	      set "$@" -crop "${bgx}x${bgy}+${crop}+${crop}"
	  fi
      fi

      # run mogrify on the image
      "$@" "$img"
      # workaround for mogrify bug
      rm -f "$img"
      mv ./* "$final"

      ## fvwm-root -fe "$final" ## aterms don't listen to fvwm-root :-(
      ## Esetroot "$final"
      fvwm-root --retain-pixmap "$final" \
      && needdir "$cachedir" \
      && mv "$final" "$cachefile"

      cd
      rm -rf "$tmpdir"
    ) &
    [ $sync ] || exit 0
    wait
fi

exit

##exec Esetroot -fit "$imagefile"
##set -x
##case "$imagefile" in
##    *.gif|*.xpm)	2xpm -s root $convopts "$imagefile" xpmroot & ;;
##    *)			2png -s root $convopts "$imagefile" display -window root & ;;
##esac
##
