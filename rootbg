#!/bin/sh
#
# Set the root backdrop.
#	- Cameron Simpson <cs@zip.com.au> 20nov2000
#
# -xpl for xplanet support - cameron 30nov2000
#

cmd=$0
usage="Usage: $0 [-m] [-s] [-d dim] [-xpl] [{imagefile|ptns...}]
	-m	Set the menu background as well.
	-s	Synchronous.
	-d dim	Set dimming factor.
	-xpl	Use xplanet for the background."

[ -n "$DISPLAY" ] || { echo "$cmd: no \$DISPLAY!" >&2; exit 1; }

tmp=${TMPDIR:-/tmp}

sync=
xplanet=
convopts='-d 0.6'
domenubg=

badopts=
while :
do  case $1 in
        -xpl)	xplanet=1 ;;
	-m)	domenubg=1 ;;
	-s)	sync=1 ;;
	-d)	convopts="$convopts -d $2"; shift ;;
	--)	shift; break ;;
	-?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
	*)	break ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ $# -gt 0 ] && [ -s "$1" ] && [ ! -d "$1/." ]
then
    imagefile=$1; shift
else
    # used to use BGPATH=$WALLPAPER - possibly redundant
    imagefile=`bglist -r -n 1 -w ${1+"$@"}`

    ok=1
    if [ -z "$imagefile" ]
    then  echo "$cmd: nothing chosen!" >&2
	  ok=
    else
      if [ ! -s "$imagefile" ]
      then  echo "$cmd: empty file: $imagefile" >&2
	    ok=
      fi
    fi
    [ $ok ] || exec xsetroot -solid black
fi

echo "$imagefile"

if [ $xplanet ]
then
    imdir=$HOME/etc/im
    backdrop=$imagefile
    projdir=$imdir/projections
    clouddir=$projdir
    clouds=$clouddir/clouds_2000.jpg
    ssecclouds=$clouddir/latest_moll.gif
    nightside=$projdir/earthlights-dmsp-big.jpg
    dayside=$projdir/earth-2400.jpg

    # pick a view on the Sydney side of the planet
    lat=`tzcoord.pl Sydney | perl -e '$_=<STDIN>; /^([^.]+)/ || die; srand((time^$$)+getppid()); print int($1-89.5+rand(180))'`

    ## -demfile "$dem" -grid
    ## -cloud_ssec "$ssecclouds" \
    nice xplanet \
	    -background "$backdrop" \
	    -blend \
	    -cloud_image "$clouds" \
	    -image "$dayside" \
	    -label -labelpos -15-15 \
	    -markers \
	    -night_image "$nightside" \
	    -observer "$lat,0" \
	    -radius 40 \
	    -root \
	    ${1+"$@"} \
	    &

    exit 0
fi

##set -vx
umask 077

[ $domenubg ] && menubg "$imagefile" &

cp "$imagefile" "$tmp/." || exit 1

( cd "$tmp" || exit 1
  img=`basename "$imagefile"`
  sfx=`expr "x$img" : 'x.*\.\([^.]*$\)'`
  base=`basename "$img" ".$sfx"`
  final=$base.PNG
  bgx=$X11_BGX bgy=$X11_Y
  set mogrify -quality 0 -foreground black -geometry "${bgx}x${bgy}" -format PNG

  # see if we need to letterbox or something
  ix= iy=
  eval `imsize "$img" | awk '{print "ix="$1 " iy="$2}'`
  if [ -n "$ix" -a -n "$iy" ]
  then
      awkf="BEGIN { ix=$ix; iy=$iy; bgx=$bgx; bgy=$bgy"'
		    w=bgx; h=bgy
		  }
	    END   { if (ix > bgx || iy > bgy)
		      # too big - shrink
		      if (ix/bgx > iy/bgy)
			# shrink X more than Y
			h=int(iy * (bgx/ix))
		      else
			# shrink Y more than X
			w=int(ix * (bgy/iy))
		       
		    else
		    # smaller image - scale up
		    if (bgx/ix < bgy/iy)
		      # scale X less - use that
		      h=iy*bgx/ix
		    else
		      # scale Y less
		      w=ix*bgy/iy

		    crop=0
		    bx=int((bgx-w)/2+0.5)
		    if (bx == 0) { bx=1; by++; crop=1; }
		    by=int((bgy-h)/2+0.5)
		    if (by == 0) { by=1; bx++; crop=1; }
		    print "bx="bx " by="by " crop="crop
		  }'
      eval `awk "$awkf" </dev/null`
      if [ "$bx" -gt 0 -o "$by" -gt 0 ]
      then
	  set "$@" -bordercolor "$BG" -border "${bx}x${by}"
      fi
      if [ "$crop" != 0 ]
      then
	  set "$@" -crop "${bgx}x${bgy}+${crop}+${crop}"
      fi
  fi

  # run mogrify on the image
  "$@" "$img"
  ## fvwm-root -fe "$final" ## aterms don't listen to fvwm-root :-(
  Esetroot "$final"
  rm -f "$img" "$final"
) &
[ $sync ] || exit 0
wait
exit

##exec Esetroot -fit "$imagefile"
##set -x
##case "$imagefile" in
##    *.gif|*.xpm)	2xpm -s root $convopts "$imagefile" xpmroot & ;;
##    *)			2png -s root $convopts "$imagefile" display -window root & ;;
##esac
##
