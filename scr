#!/bin/sh
#
# Attach to specified screen or make new one of specified name.
#	- Cameron Simpson <cs@zip.com.au> 18may2002
#

cmd=$0
usage="Usage:
    $cmd
	List sessions.
    $cmd [-N] session-name [cmd [args...]]
	Join named session, creating it if missing.
	-N	Force new session."

# nothing? list active sessions
[ $# = 0 ] \
    && { screen -ls \
	 | sed -e '/^	/!d' -e 's/^	\([^	]*\).*/\1/' \
	 | awk '{ print NR, $0 }'	## printf("%d %s\n",NR,$0) }'
	 exit 0
       }

badopts=

new=
[ "x$1" = x-N ] && { new=1; shift; }

if [ $# = 0 ]
then
  if [ $new ]
  then
    nsess=`scr|wc -l`
    nsess2=`expr $nsess + 1`
    sess=${shell:-`basename "$SHELL"`}$nsess2
    set "$SHELL"
  else
    echo "$cmd: missing session-name" >&2
    badopts=1
  fi
else
  sess=$1; shift
  [ $# = 0 ] && set "$SHELL"
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

# if new, just run up a new screen session
[ $new ] && exec screen -S "$sess" -- "$@"

# otherwise convert $sess into session name to join
case "$sess" in
  [1-9]|[1-9][0-9]|[1-9][0-9][0-9])
	# numeric - pull name from listing
	nsess=`scr | sed -n "s/^ *$sess //p"`
	[ -n "$nsess" ] || { echo "$cmd: no screen numbered $sess" >&2
			     exit 1
			   }
	# matched - join the session
	exec screen -x "$nsess"
	;;

  # strip slashes from session name if necessary
  */*)	sess=`echo "$sess" | tr / _` ;;
esac

# not numeric - look up in listing
match=`scr | sed -e "/^ *[1-9][0-9]* [1-9][0-9]*\\.$sess\$/!d" -e 's/^ *[1-9][0-9]*  *//' -e q`

# match found - join it
[ -n "$match" ] && exec screen -x "$sess"

# start new session
exec screen -S "$sess" -- "$@"
