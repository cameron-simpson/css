#!/bin/sh -u
#
# Bang style ssh for hopping through firewalls etc.
# Sshes from host to host to reach destination.
# Assorted other minor features.
#	- Cameron Simpson <cs@zip.com.au> 28may2004
#

: ${SSHTO_OPTS:=''}

trace=	##set-x
sshopts=
lsshopts=
mycfg=$HOME/.ssh/config
[ -s "$mycfg" -a -r "$mycfg" ] && lsshopts="$lsshopts -F \"\$mycfg\""
topt=
presh=
env_presh=': set -vx
	  [ -s /etc/profile ] && . /etc/profile
          [ -s $HOME/.profile ] && . $HOME/.profile
	  wSHELL=
	  for sh in zsh bash ksh sh $SHELL
	  do
	    for bin in /bin /usr/bin /usr/local/bin
	    do
	      case "$sh" in /*) binsh=$sh ;; *) binsh=$bin/$sh ;; esac
	      [ -x "$binsh" ] && { wSHELL=$binsh; break; }
	    done
	    [ -n "$wSHELL" ] && break
	  done
	  [ -n "$wSHELL" ] && SHELL=$wSHELL
	  export SHELL
	  [ -s /opt/css/env.sh ] && . /opt/css/env.sh
	 '

cmd=`basename "$0"` || cmd=$0
usage="Usage: $cmd [ssh-options...] [sshcfg=value...] [user@]host[![user2@]host2...] [command ...]
	ssh-options...	Passed to all ssh commands.
	sshcfg=value	Transmuted to -o 'sshcfg value' and added to ssh-option.
	-z, +z		Pass -o Compression yes/no to ssh.
	-E		Run login setup at far end."

set -- $SSHTO_OPTS ${1+"$@"}

badopts=

host=
havehost=
first=1
while [ $# -gt 0 ]
do
  ##echo "sshto: *=[$*]" >&2
  case $1 in
    -t)	topt=-t ;;
    +t)	topt= ;;
    -E)	presh=$env_presh ;;
    -[aAfgknNqsTvxXYC1246])
	sshopts="$sshopts $1"
	;;
    -[bceiIlmopFLRD])
    	sshopts="$sshopts $1 "`shqstr "$2"`
	shift
	;;
    -z)	sshopts="$sshopts -o 'Compression yes'" ;;
    +z)	sshopts="$sshopts -o 'Compression no'" ;;
    [a-zA-Z]*=?*)
	[ $havehost ] && break	# not supported after host - it's the shell command now
	cfg=`expr "$1" : '\([^=]*\)=.*'`
	val=`expr "$1" : '[^=]*=\(.*\)'`
	sshopts="$sshopts -o "`shqstr "$cfg $val"`
	;;
    --)	shift; break ;;
    -?*)echo "$cmd: unrecognised option: $1" >&2; badopts=1 ;;
    *)	[ $havehost ] && break
	host=$1; havehost=1
	;;
  esac
  shift
done

if [ -z "$havehost" ]
then
  if [ $# = 0 ]
  then
    echo "$cmd: missing host" >&2
    badopts=1
  else
    host=$1; shift
  fi
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -t 0 -a -t 1 ] && topt=-t

[ $# = 0 ] && set -- 'exec ${SHELL:=/bin/sh}'

sshargv="$sshopts $topt"
sshcmd=$presh$*

while :
do
  case "$host" in
      *!*)	rhost=`expr "x$host" : 'x.*!\(.*\)'`
		host=` expr "x$host" : 'x\(.*\)!.*'`
		osshcmd=$sshcmd
		sshcmd="exec ssh $sshargv "`shqstr "$rhost" "$sshcmd"`
		##echo "[$osshcmd] -> [$sshcmd]" >&2
		;;
      *)	break
		;;
  esac
done

##set -x
eval "exec $trace ssh $lsshopts $sshargv $host \"\$sshcmd\""
