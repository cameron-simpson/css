#!/bin/sh
#
# Wrapper for su. If the first option begins with a dash, or there are arguments
# after the login name, run a vanilla su. Otherwise pass much of our environment
# through the su and exec the shell of our choice.
#	- Cameron Simpson, January 1992
#

if [ -f /usr/bin/opiesu ]
then realsu=/usr/bin/opiesu
else if [ -f /usr/bin/su ]
     then realsu=/usr/bin/su
     else realsu=/bin/su
     fi
fi

cmd=$0
usage="Usage: $cmd [-] [-a authtype] [loginname] [-c shcmd]"

sush=/bin/sh
case $ARCH in
    *.*.solaris)	sush=$BIN/ae ;; # bug workaround
esac

badopts=

login=
su=root
suargs=
while :
do  case $1 in
      -)	login=- ;;
      -a)	suargs="-a $2"; shift ;;
      --)	shift; break ;;
      -*)	echo "$0: unrecognised argument: $1" >&2; badopts=1 ;;
      *)	break ;;
    esac
    shift
done

[ "x$1" = x- ] && { login=-; shift; }
case $1 in
   ''|-*)	;;
   *)		su=$1; shift ;;
esac

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ -n "$login" -o $# -gt 0 ] \
	&& exec "$realsu" $suargs $login "$su" "$@"

# If some dickheads didn't use csh for root this would be much simpler.
tmp=/tmp/su.$$

tee $HOME/var/log/su.out >$tmp <<SU
SHELL=$SHELL
PS1= PS2=
HOME=$HOME PATH=$PATH
export SHELL PS1 PS2 HOME PATH
##test -r $env && . $env
USER=$su
EMAIL=$EMAIL
DISPLAY=$DISPLAY
PERL5LIB=$HOME/rc/perl:$PERL5LIB:/opt/perl/lib
export USER EMAIL DISPLAY PERL5LIB
[ -n "\$DISPLAY" ] || unset DISPLAY
rm -f $tmp $env
exec pushttylabel '$su@$HOST' term -n '$su@$HOST'
SU

chmod 755 $tmp
echo exec $sush $tmp
(unset DISPLAY; exec "$realsu" $suargs "$su" -c "exec $sush $tmp")
rm -f $tmp
