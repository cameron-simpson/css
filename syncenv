#!/bin/sh -u
#
# Emit output to re-source the environment files if they've been updated.
# Have to do them all if any are new because of ordering.
#	- Cameron Simpson <cs@zip.com.au> 25dec2004
#

: ${ENVFILES:="/etc/rc.mobile/env.sh $HOME/var/env.sh"}
: ${TMPDIR:=/tmp}

cmd=$0
usage="Usage: $cmd refpid [command [command-args...]]"

badopts=

if [ $# = 0 ]
then
    echo "$cmd: missing refpid" >&2
    badopts=1
else
    refpid=$1
    shift
fi

[ $badopts ] && { echo "$usage" >&2; exit 2; }

if [ "x$refpid" = x- ]
then  file=
else  file=$TMPDIR/env$refpid
fi
if [ $# -gt 0 ]
then
    eval `"$0" "$refpid"`
    exec "$@"
fi

new=
for envfile in "$0" $ENVFILES
do
  if [ -d "$envfile/." ]
  then
    for f in "$envfile/"*
    do
      if [ -z "$file" ] || [ ! -f "$file" ] || [ "$envfile" -nt "$file" ]
      then
	new=1
	break
      fi
    done
  else
    if [ -s "$envfile" ]
    then
      if [ -z "$file" ] || [ ! -f "$file" ] || [ "$envfile" -nt "$file" ]
      then
	new=1
      fi
    fi
  fi
  [ $new ] && break
done

if [ $new ]
then
  ##set -x
  for envfile in $ENVFILES
  do
    if [ -d "$envfile/." ]
    then
      for f in "$envfile/*"
      do
	if [ -s "$f" ]
	then
	  echo "echo \"\$0: source $f\" >&2; "
	  cat "$f"
	fi
      done
    else
      if [ -s "$envfile" ]
      then
	echo "echo \"\$0: source $envfile\" >&2; "
	cat "$envfile"
      fi
    fi
  done
  [ -n "$file" ] && touch "$file"
  ##set +x
  echo "PATH='$PATH'; export PATH"	# just in case
fi
