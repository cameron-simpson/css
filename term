#!/bin/sh -u
#
# Generic open-a-window.
#
# Default location is tuned to my X11 setup (i.e. 103 pixels down from
# the top of the screen).
# The -big option is tuned to my X setup on a 1280x1024 screen.
#	- Cameron Simpson <cs@zip.com.au> December 1991
#

: ${TMPDIR:=/tmp}
: ${LOGDIR:=$HOME/var/log}
: ${SHELL:=/bin/sh}
: ${TERMOPTIONS:=''}
: ${WINJOB:=''}
: ${XAUTHORITY:=''}
: ${PREFTERM:=xterm}
: ${DISPLAY:=''}
: ${TERM:=dumb}
: ${TERMSHADE:=''}
: ${TERMTINT:=''}
: ${TERMOPTIONS:=''}
: ${RXVT_SOCKET:=''}

cmd=$0
usage="Usage: $cmd [-v] [-w width] [-h height] [-x x-pos] [-y y-pos]
		[-l lock] [-1 lock] [-j job]
		[-f font] [-n name] [-big] [-small] [-keepio] [-xauthhack]
		[{-c shellcmd}/{-e exec-list}/{-- raw-args}]"

trace=
termopts=
xrmopts=
dotrans=
detach='exec >/dev/null </dev/null'
closefds='for fd in 3 4 5 6 7 8 9; do eval "exec $fd>&-"; done'
keepio=
title= f=
smallx=0 smally=103 smallw=80 smallh=24 smallf=
x= y= w= h=
bigx=0 bigy=-0 bigw=80 bigh=61 bigf=6x13
geometry=
sized=
tint=$TERMTINT
shade=$TERMSHADE
xauthhack=
async=1
lock=
lock1=
iconic=

[ -s $HOME/.termenv -a -r $HOME/.termenv ] && { set +u; . $HOME/.termenv; set -u; }

badopts=

# load default options first
eval "set -- $TERMOPTIONS "'${1+"$@"}'

while [ $# -gt 0 ]
do
  case "$#,$1" in
    1,-[ceglwhxyns] | 1,-xrm | 1,-geometry)
		echo "$cmd: $1 needs an argument" >&2
		badopts=1
		shift; break
		;;
  esac
  case $1 in
    --)		shift; break ;;
    -e)		shift; break ;;
    -c)		shcmd=$2; shift; shift
		set -- ${1+"$@"} -e "$SHELL" -c "$shcmd"
		;;
    -a)		async=1 ;;
    +a)		async= ;;
    -l)		lock=$2; shift ;;
    -1)		lock1=$1 lock=$2; shift ;;
    -j)		WINJOB=$2; shift; export WINJOB ;;
    -ip)	dotrans=1 ;;
    +ip)	dotrans= ;;
    -sh)	shade=$2; shift ;;
    -iconic)	termopts="$termopts $1" ;;
    -fg|*,-bg)	termopts="$termopts $1 $2"; shift ;;
    -v)		set -x ;;
    -w)		w=$2 ; shift ;;
    -h)		h=$2 ; shift ;;
    -x)		x=$2 ; shift ;;
    -y)		y=$2 ; shift ;;
    -n|-T)	title=$2 ; shift ;;
    -f)		f=$2 ; shift ;;
    -env)	exec genv TERMOPTIONS TERMTINT TERMSHADE ;;
    -big)	sized=1 x=$bigx y=$bigy w=$bigw h=$bigh f=$bigf ;;
    -small)	sized=1 x=$smallx y=$smally w=$smallw h=$smallh f=$smallf ;;
    -keepio)	detach= ;;
    -xauthhack)	xauthhack=1 ;;
    -g|-geometry)sized=1 geometry=$2; shift ;;
    -xrm)	xrmopts="$xrmopts $1 "`shqstr "$2"`; shift ;;
    --)		shift; break ;;
    -?*)	echo "$cmd: unrecognised option: $1" >&2
		badopts=1
		;;
    *)		break ;;
  esac
  shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

[ $# = 0 ] && set -- "$SHELL"
[ -n "$title" ] || title=$*

# suppress lock if none needed
dolock=
[ -n "$lock" ] && dolock="lock $lock1 \"\$lock\""

termcmd='ttysane $dolock "$@"'
if [ -n "$WINJOB" ]
then
  qWINJOB=`shqstr "$WINJOB"`
  termcmd="winjob $qWINJOB $termcmd"
fi

case "$TERM,$DISPLAY" in
    *,?*)
	termopts="$termopts -title \"\$title\""
	case "$PREFTERM" in
	  aterm)	;;
	  *)		termopts="$termopts $xrmopts" ;;
	esac
	[ -n "$f" ] && termopts="$termopts -fn \"\$f\""

	case $x in +*|-*) ;; *) x=+$x ;; esac
	case $y in +*|-*) ;; *) y=+$y ;; esac
	if [ $sized ]
	then
	  [ "x$geometry" = x ] && geometry=${w}x${h}$x$y
	  termopts="$termopts -geometry \"\$geometry\""
	fi

	[ -n "$xauthhack" -a -n "$XAUTHORITY" -a -r "$XAUTHORITY" ] &&
		{ # Fight with NFS/xterm brain damage.
		  xauth=$TMPDIR/$cmd.$$
		  exec 4>$xauth
		  chmod 600 $xauth
		  cat <"$XAUTHORITY" >&4
		  exec 4>&-
		  XAUTHORITY=$xauth
		  export XAUTHORITY
		}

	case "$PREFTERM" in
	    rxvt)	[ $dotrans ] && termopts="$termopts -ip"
			;;
	    urxvt*)	[ $dotrans ] && { termopts="$termopts -ip"
					  [ -n "$tint" ] && termopts="$termopts -tint $tint"
					  [ -n "$shade" ] && termopts="$termopts -sh $shade"
					}
	    		[ $async ] || PREFTERM=urxvt	# gotta be synchronous
			case "$PREFTERM" in
			  urxvtc)
			    if [ -z "$RXVT_SOCKET" ]
			    then
			      if RXVT_SOCKET=`rig-urxvtd`
			      then
				export RXVT_SOCKET
			      else
				PREFTERM=urxvt
			      fi
			    fi
			    ;;
			esac
			;;
	    aterm)	# -fade 90
			[ $dotrans ] && { termopts="$termopts -tr"
					  [ -n "$shade" ] && termopts="$termopts -sh $shade"
					}
			;;
	esac

	termcmd="$PREFTERM $termopts -e $termcmd"
	;;

    iris-ansi*,*)
	[ -n "$f" ] && set -- -f "$f" "$@"
	[ -n "$x$y" ] && set -- -p "$x,$y" "$@"
	[ -n "$w$h" ] && set -- -s "$w,$h" "$@"
	[ -n "$title" ] && set -- -t "$title" -n "$title" "$@"

	termcmd="wsh -v $termcmd"
	;;
    *)	async=
	detach=
	;;
esac

##set -x
eval "$detach"
eval "$closefds"
##exec 2>>$HOME/var/log/alert
if [ $async ]
then termcmd="bgproc -p - -- $termcmd"
else termcmd="exec $termcmd"
fi
eval "$termcmd"
