#!/bin/sh
#
# Run a command with a real-time timeout.
#	- Cameron Simpson <cs@zip.com.au>
#

usage="Usage: $0 seconds command [args...]"

[ $# -lt 2 ] && { echo "$usage" >&2; exit 2; }

timeout=$1
shift

case "$timeout" in
	[0-9]*)	;;	# dodgy bros syntax check since [!0-9] fails
	*)	echo "$0: timeout must be an integer" >&2
		echo "$usage" >&2
		exit 2
		;;
esac

mypid=$$
xit=1		# assume timed out

"$@" &
cmdpid=$!

( { exec </dev/null >/dev/null	## keep stderr

    left=$timeout
    while [ $left -ge 5 ]
    do  kill -0 "$cmdpid" 2>/dev/null || exit 0
	sleep 5; left=`expr $left - 5`
    done
    [ $left -gt 0 ] \
      && { kill -0 "$cmdpid" 2>/dev/null || exit 0; sleep $left; }

    if kill -0 $cmdpid 2>/dev/null
    then
	echo "$0: timed out after $timeout seconds: $*" >&2
	exec 2>/dev/null
	kill $cmdpid && { sleep 2; kill -9 $cmdpid; }
	kill $mypid
    fi
  } &
)

wait
xit=$?

exit $xit
