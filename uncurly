#!/bin/sh
#
# Replace {foo} with $foo in the specified file, for a specified
# list of "foo".
#	- Cameron Simpson <cs@zip.com.au> 27may2001
#
# Deduce list by inspecting the input. - cameron 09sep2002
#

: ${TMPDIR:=/tmp}

cmd=`basename "$0"` || cmd=uncurly
usage="Usage: $cmd [-v varlist] [files...]
	-v varlist
		A space separated list of environment variables to
		insert. By default, all {foo} constructs are replaced."

varlist=
[ $# -gt 0 ] && [ "x$1" = x-v ] && { varlist=$2; shift; shift; }

cat ${1+"$@"} \
| ( if [ -z "$varlist" ]
    then
	# suck in the data and scan for {foo}
	tmp=$TMPDIR/$cmd$$
	cat >$tmp
	varlist=`sed 's/}[^{]*{/}\\
	                {/g' <"$tmp" \\
	       | sed -n 's/.*{\\([a-zA-Z_][a-zA-Z_0-9]*\\)}.*/\\1/p' \\
	       | sort -u`
	exec <"$tmp"
	rm "$tmp"
    fi

    # construct replacement sed script
    sedf=:top
    for var in $varlist
    do  eval "val=\$$var"
	sedf="$sedf
	      s{$var}${val}g
	      t top"
    done
    ##echo "$sedf" >&2

    exec sed "$sedf"
  )
