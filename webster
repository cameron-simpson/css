#!/usr/bin/perl
#
# Access a webster server. - Cameron Simpson, cs@zip.com.au
#

($cmd=$0) =~ s:.*/::;

defined($ENV{DICTSERVER}) || ($ENV{DICTSERVER}='mintaka.lcs.mit.edu');

$webhost=$ENV{DICTSERVER};
$webport=103;

$usage="Usage: $cmd [-e command]... [-f script] [-h host] [-i] \\
		[-p port] [-w word]... [--] [words...]
	-e command	Command to pass to the webster service.
	-f script	File to take commands from instead of stdin.
	-h host		Host with webster service (default $webhost).
	-i		Go interactive after processing any commands or words.
	-p port		Port on host (default $webport).
	-w word		Word to have its definition requested.
";

require 'flush.pl';
require 'cs/tcp.pl';

$badopts=0;
$interactive=0;
@commands=();
ARGV:
  while (defined($_=shift))
	{ last ARGV if ($_ eq '--');
	  (unshift(@ARGV,$_), last ARGV) if !/^-/;

	  if    ($_ eq '-e')	{ push(@commands,shift); }
	  elsif ($_ eq '-f')	{ $_=shift;
				  $_='./'.$_ unless m:^/:;
				  if (open(SCRIPT,'< '.shift(@ARGV)."\0"))
					{ push(@commands,'');
					  push(@commands,<SCRIPT>);
					  close(SCRIPT);
					}
				  else
				  { print STDERR "$cmd: -f: can't open $SCRIPT: $!\n";
				    $badopts=1;
				  }
				}
	  elsif ($_ eq '-h')	{ $webhost=shift; }
	  elsif ($_ eq '-i')	{ $interactive=1; }
	  elsif ($_ eq '-p')	{ $webport=shift(@ARGV)+0; }
	  elsif ($_ eq '-w')	{ push(@commands,'DEFINE '.shift); }
	  else
	  { print STDERR "$cmd: unrecognised option \"$_\"\n";
	    $badopts=1;
	  }
	}

for (@ARGV)
	{ push(@commands,'DEFINE '.$_);
	}
@ARGV=();

die $usage if $badopts;

$xit=0;

if ($#commands >= $[)
	{ die "can't connect to $webhost:$webport"
		unless ($FROMWEB,$TOWEB)=&tcp'rwopen2($webhost,$webport);

	  for (@commands)
		{ &pwebster($_);
		}

	  close($FROMWEB);
	  close($TOWEB);
	  exit $xit unless $interactive;
	}

# In interactive mode we open a separate connection per request so that
# someone who just leaves a webster sitting in a window for queries
# doesn't tie up the server while it's idle.
INPUT:
  while ((-t && print STDERR $cmd, '> '),
       defined($_=<STDIN>)
      )
	{ if (/^\s*!/)
		{ system($');
		}
	  elsif (/^\s*quit\b/i)
		{ last INPUT;
		}
	  elsif (($FROMWEB,$TOWEB)=&tcp'rwopen2($webhost,$webport))
		{ &pwebster($_);
		  close($FROMWEB);
		  close($TOWEB);
		}
	  else
	  { print STDERR "can't connect to $webhost:$webport\n"
	  }
	}

exit $xit;

sub pwebster	# (command) -> void
	{ local($reply,$text,@info)=&webster;

	  $reply =~ s/\r?\n$//;
	  print $reply, "\n";
	  for (@info)
	  	{ s/\r?\n$//;
		  print $_, "\n";
		}
	  if (length($text))
		{ $text =~ s/\r?\n$//;
		  print $text, "\n";
		}
	}

sub webster	# (command) -> (reply,text,@reply-info)
	{ local($_)=@_;
	  local($reply,$text,@info);

	  s/^\s+//;
	  s/\r?\n//;
	  s/\s*#.*//;

	  return undef if !length;

	  ($COMMAND,$ARGS)=/^(\S+)(.*)/;
	  $COMMAND =~ tr/a-z/A-Z/;

	  print $TOWEB "$COMMAND$ARGS\n"; &flush(STDOUT);
	  &WEBEOF unless defined($_=&FROMWEB());

	  s/\r?\n//;

	  $reply=$_;
	  $text='';
	  @info=();

	  PROCESS:
	    { if (/^ERROR /)
		{ print STDERR $_, "\n";
		  $_=$';
		  die if /^FATAL/;
		  last PROCESS;
		}

	      if ($COMMAND eq 'HELP')
		{ &WEBEOF unless defined($_=&FROMWEB("\200"));
		  chop;
		  $text=$_;
		}
	      elsif ($COMMAND eq 'DEFINE')
		{ if (/^WILD 0/)
			{}
		  elsif (/^WILD/)
			{ &WEBEOF unless defined($_=&FROMWEB("\200"));
			  chop;
			  $text=$_;
			}
		  elsif (/^SPELLING 0/)
			{}
		  elsif (/^SPELLING/)
			{ &WEBEOF unless defined($_=&FROMWEB("\200"));
			  chop;
			  $text=$_;
			}
		  elsif (/^DEFINITION (\d+)/)
			{ $n=$1+0;
			  while ($n > 0)
				{ &WEBEOF unless defined($_=&FROMWEB());
				  chop;
				  push(@info,$_);
				  $n--;
				}

			  &WEBEOF unless defined($_=&FROMWEB("\200"));
			  chop;
			  $text=$_;
			}
		  else
		  { die "$cmd: unrecognised response from $COMMAND\n";
		  }
		}
	      elsif ($COMMAND eq 'COMPLETE')
		{ if (/^AMBIGUOUS/ || /^COMPLETION/)
			{}
		  else
		  { die "$cmd: unrecognised response from $COMMAND\n";
		  }
		}
	      elsif ($COMMAND eq 'ENDINGS')
		{ if (/^MATCHS 0/)
			{}
		  elsif (/^MATCHS/)
			{ &WEBEOF unless defined($_=&FROMWEB("\200"));
			  chop;
			  $text=$_;
			}
		  else
		  { die "$cmd: unrecognised response from $COMMAND\n";
		  }
		}
	      elsif ($COMMAND eq 'SPELL')
		{ if (/^SPELLING (0|1)/)
			{}
		  elsif (/^SPELLING/)
			{ &WEBEOF unless defined($_=&FROMWEB("\200"));
			  chop;
			  $text=$_;
			}
		  else
		  { die "$cmd: unrecognised response from $COMMAND\n";
		  }
		}
	      else
	      { die "$cmd: can't grok output for unsupported command $COMMAND\n";
	      }
	    }

	  return ($reply,$text,@info);
	}

sub FROMWEB
	{ local($/)=shift if $#_ >= $[;
	  local($_);

	  return $_ if defined($_=<$FROMWEB>);
	  undef;
	}

sub WEBEOF
	{ die "EOF from $webhost:$webport";
	}
