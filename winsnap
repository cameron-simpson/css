#!/bin/sh
#
# Wrapper for xwd to produce common data formats.
# Saves window in $HOME/var/xwd and puts the pathname into the X cut buffer
# and on stdout.
#	- Cameron Simpson <cs@zip.com.au>
#

cmd=`basename "$0"`
usage="Usage: $cmd [-{gif|png|pnm|jpg}] [xwdargs...]"

fmt=xwd
post=		# filter - xwdto...
quant=64	# default colour quanization
args=		# passed to real xwd

# default to PNG mode
set x -png ${1+"$@"}; shift

badopts=
while :
do
    case $1 in
	-gif)		fmt=gif post='| xwdtopnm | ppmquant 256 | ppmtogif' ;;
	-pnm)		fmt=pnm post='| xwdtopnm' ;;
	-png)		fmt=png post='| xwdtopnm | pnmtopng' ;;
	-jpg)		fmt=jpg post='| xwdtopnm | cjpeg' ;;
	-display)	DISPLAY=$2; export DISPLAY; shift ;;
	-root|-debug|-help|-nobdrs|-xy|-frame)
			args="$args $1" ;;
	-add)		args="$args -add $2" ; shift ;;
	--)		shift; break ;;
	-*)		echo "$cmd: unrecognised argument: $1" >&2; badopts=1 ;;
	*)		break ;;
    esac
    shift
done

[ $badopts ] && { echo "$usage" >&2; exit 2; }

dir=$HOME/var/xwd
[ -d "$dir/." ] || mkdir -p "$dir" || exit 1

file=$dir/xwd`datecode`.$fmt
[ -s "$file" ] && { echo "$cmd: already exists: $file" >&2; exit 1; }

eval "xwd $args $post >\"\$file\"" || exit 1
echo "$file" |xclip &
echo "$file"
